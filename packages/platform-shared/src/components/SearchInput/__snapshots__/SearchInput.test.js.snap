// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SearchInput Component After typing into the input, the append icon will show: console-warn-snapshot 1`] = `
[
  [
    "[Vue warn]: (deprecation INSTANCE_LISTENERS) (6)",
    "
",
    " at <BInputGroupAppend",
    "key=0",
    ">",
    "
",
    " at <BInputGroup>",
    "
",
    " at <SearchInput",
    "ref="VTU_COMPONENT"",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation GLOBAL_EXTEND) (4)",
    "
",
    " at <BInputGroupAppend",
    "key=0",
    ">",
    "
",
    " at <BInputGroup>",
    "
",
    " at <SearchInput",
    "ref="VTU_COMPONENT"",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation COMPONENT_FUNCTIONAL) (3)",
    "
",
    " at <BInputGroupAppend",
    "key=0",
    ">",
    "
",
    " at <BInputGroup>",
    "
",
    " at <SearchInput",
    "ref="VTU_COMPONENT"",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation INSTANCE_LISTENERS) (7)",
    "
",
    " at <BButton",
    "class="border-0"",
    "onClick=fn",
    "variant="link"",
    ">",
    "
",
    " at <BInputGroupAddon",
    "key=0",
    "id=undefined",
    "isText=false",
    " ...",
    ">",
    "
",
    " at <BInputGroupAppend",
    "key=0",
    ">",
    "
",
    " at <BInputGroup>",
    "
",
    " at <SearchInput",
    "ref="VTU_COMPONENT"",
    ">",
    "
",
    " at <VTUROOT>",
  ],
]
`;

exports[`SearchInput Component It has correct prepend icon and placeholder text on load: console-warn-snapshot 1`] = `
[
  [
    "[Vue warn]: (deprecation RENDER_FUNCTION) Vue 3's render function API has changed. You can opt-in to the new API with:

  configureCompat({ RENDER_FUNCTION: false })

  (This can also be done per-component via the "compatConfig" option.)
  Details: https://v3-migration.vuejs.org/breaking-changes/render-function-api.html",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation GLOBAL_EXTEND) (2)",
    "
",
    " at <SearchInput",
    "ref="VTU_COMPONENT"",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation COMPONENT_FUNCTIONAL) Functional component <BInputGroup> should be defined as a plain function in Vue 3. The "functional" option has been removed. NOTE: Before migrating to use plain functions for functional components, first make sure that all async components usage have been migrated and its compat behavior has been disabled.
  Details: https://v3-migration.vuejs.org/breaking-changes/functional-components.html",
    "
",
    " at <SearchInput",
    "ref="VTU_COMPONENT"",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation INSTANCE_LISTENERS) vm.$listeners has been removed. In Vue 3, parent v-on listeners are included in vm.$attrs and it is no longer necessary to separately use v-on="$listeners" if you are already using v-bind="$attrs". (Note: the Vue 3 behavior only applies if this compat config is disabled)
  Details: https://v3-migration.vuejs.org/breaking-changes/listeners-removed.html",
    "
",
    " at <BInputGroup>",
    "
",
    " at <SearchInput",
    "ref="VTU_COMPONENT"",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation COMPONENT_V_MODEL) v-model usage on component has changed in Vue 3. Component that expects to work with v-model should now use the "modelValue" prop and emit the "update:modelValue" event. You can update the usage and then opt-in to Vue 3 behavior on a per-component basis with \`compatConfig: { COMPONENT_V_MODEL: false }\`.
  Details: https://v3-migration.vuejs.org/breaking-changes/v-model.html",
    "
",
    " at <BFormInput",
    "ref="searchInput"",
    "placeholder="Search"",
    "aria-label="Search"",
    " ...",
    ">",
  ],
  [
    "[Vue warn]: (deprecation INSTANCE_LISTENERS) (2)",
    "
",
    " at <BInputGroupPrepend>",
    "
",
    " at <BInputGroup>",
    "
",
    " at <SearchInput",
    "ref="VTU_COMPONENT"",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation GLOBAL_EXTEND) (3)",
    "
",
    " at <BInputGroupPrepend>",
    "
",
    " at <BInputGroup>",
    "
",
    " at <SearchInput",
    "ref="VTU_COMPONENT"",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation COMPONENT_FUNCTIONAL) (2)",
    "
",
    " at <BInputGroupPrepend>",
    "
",
    " at <BInputGroup>",
    "
",
    " at <SearchInput",
    "ref="VTU_COMPONENT"",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation INSTANCE_LISTENERS) (3)",
    "
",
    " at <BInputGroupAddon",
    "id=undefined",
    "isText=false",
    "tag="div"",
    " ...",
    ">",
    "
",
    " at <BInputGroupPrepend>",
    "
",
    " at <BInputGroup>",
    "
",
    " at <SearchInput",
    "ref="VTU_COMPONENT"",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation INSTANCE_LISTENERS) (4)",
    "
",
    " at <BInputGroupText",
    "class="border-0"",
    ">",
    "
",
    " at <BInputGroupAddon",
    "id=undefined",
    "isText=false",
    "tag="div"",
    " ...",
    ">",
    "
",
    " at <BInputGroupPrepend>",
    "
",
    " at <BInputGroup>",
    "
",
    " at <SearchInput",
    "ref="VTU_COMPONENT"",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation RENDER_FUNCTION) (2)",
    "
",
    " at <BFormInput",
    "ref="searchInput"",
    "placeholder="Search"",
    "aria-label="Search"",
    " ...",
    ">",
    "
",
    " at <BInputGroup>",
    "
",
    " at <SearchInput",
    "ref="VTU_COMPONENT"",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation OPTIONS_DATA_MERGE) Detected conflicting key "bvListeners" when merging data option values. In Vue 3, data keys are merged shallowly and will override one another.
  Details: https://v3-migration.vuejs.org/breaking-changes/data-option.html#mixin-merge-behavior-change",
    "
",
    " at <BFormInput",
    "ref="searchInput"",
    "placeholder="Search"",
    "aria-label="Search"",
    " ...",
    ">",
    "
",
    " at <BInputGroup>",
    "
",
    " at <SearchInput",
    "ref="VTU_COMPONENT"",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation INSTANCE_LISTENERS) (5)",
    "
",
    " at <BFormInput",
    "ref="searchInput"",
    "placeholder="Search"",
    "aria-label="Search"",
    " ...",
    ">",
    "
",
    " at <BInputGroup>",
    "
",
    " at <SearchInput",
    "ref="VTU_COMPONENT"",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation OPTIONS_BEFORE_DESTROY) \`beforeDestroy\` has been renamed to \`beforeUnmount\`.",
    "
",
    " at <BFormInput",
    "ref="searchInput"",
    "placeholder="Search"",
    "aria-label="Search"",
    " ...",
    ">",
    "
",
    " at <BInputGroup>",
    "
",
    " at <SearchInput",
    "ref="VTU_COMPONENT"",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation ATTR_FALSE_VALUE) Attribute "aria-invalid" with v-bind value \`false\` will render aria-invalid="false" instead of removing it in Vue 3. To remove the attribute, use \`null\` or \`undefined\` instead. If the usage is intended, you can disable the compat behavior and suppress this warning with:

  configureCompat({ ATTR_FALSE_VALUE: false })

  Details: https://v3-migration.vuejs.org/breaking-changes/attribute-coercion.html",
    "
",
    " at <BFormInput",
    "ref="searchInput"",
    "placeholder="Search"",
    "aria-label="Search"",
    " ...",
    ">",
    "
",
    " at <BInputGroup>",
    "
",
    " at <SearchInput",
    "ref="VTU_COMPONENT"",
    ">",
    "
",
    " at <VTUROOT>",
  ],
]
`;
