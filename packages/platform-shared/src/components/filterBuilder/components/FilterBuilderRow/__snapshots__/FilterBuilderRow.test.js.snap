// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`FilterBuilderRow Initial rule renders the correct values: console-warn-snapshot 1`] = `
[
  [
    "[Vue warn]: (deprecation RENDER_FUNCTION) Vue 3's render function API has changed. You can opt-in to the new API with:

  configureCompat({ RENDER_FUNCTION: false })

  (This can also be done per-component via the "compatConfig" option.)
  Details: https://v3-migration.vuejs.org/breaking-changes/render-function-api.html",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation WATCH_ARRAY) (2)",
    "
",
    " at <FilterBuilderRow",
    "conditionOptions=",
    {
      "Contains": {
        "label": "contains",
        "type": [
          "string",
        ],
        "value": "co",
      },
      "DoesNotContain": {
        "label": "does not contain",
        "type": [
          "string",
        ],
        "value": "!co",
      },
      "DoesNotStartsWith": {
        "label": "does not start with",
        "type": [
          "string",
        ],
        "value": "!sw",
      },
      "Gt": {
        "label": "GT (>)",
        "type": [
          "number",
        ],
        "value": "gt",
      },
      "Gte": {
        "label": "GTE (>=)",
        "type": [
          "number",
        ],
        "value": "ge",
      },
      "Is": {
        "label": "is ",
        "type": [
          "string",
          "number",
          "boolean",
        ],
        "value": "eq",
      },
      "IsNot": {
        "label": "is not",
        "type": [
          "string",
          "number",
        ],
        "value": "!eq",
      },
      "IsNotPresent": {
        "label": "is not present",
        "type": [
          "string",
          "number",
          "boolean",
        ],
        "value": "!pr",
      },
      "IsPresent": {
        "label": "is present",
        "type": [
          "string",
          "number",
          "boolean",
        ],
        "value": "pr",
      },
      "Lt": {
        "label": "LT (<)",
        "type": [
          "number",
        ],
        "value": "lt",
      },
      "Lte": {
        "label": "LTE (<=)",
        "type": [
          "number",
        ],
        "value": "le",
      },
      "StartsWith": {
        "label": "starts with",
        "type": [
          "string",
        ],
        "value": "sw",
      },
    },
    "depth=0",
    "index=0",
    " ...",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation GLOBAL_EXTEND) (2)",
    "
",
    " at <FilterBuilderRow",
    "conditionOptions=",
    {
      "Contains": {
        "label": "contains",
        "type": [
          "string",
        ],
        "value": "co",
      },
      "DoesNotContain": {
        "label": "does not contain",
        "type": [
          "string",
        ],
        "value": "!co",
      },
      "DoesNotStartsWith": {
        "label": "does not start with",
        "type": [
          "string",
        ],
        "value": "!sw",
      },
      "Gt": {
        "label": "GT (>)",
        "type": [
          "number",
        ],
        "value": "gt",
      },
      "Gte": {
        "label": "GTE (>=)",
        "type": [
          "number",
        ],
        "value": "ge",
      },
      "Is": {
        "label": "is ",
        "type": [
          "string",
          "number",
          "boolean",
        ],
        "value": "eq",
      },
      "IsNot": {
        "label": "is not",
        "type": [
          "string",
          "number",
        ],
        "value": "!eq",
      },
      "IsNotPresent": {
        "label": "is not present",
        "type": [
          "string",
          "number",
          "boolean",
        ],
        "value": "!pr",
      },
      "IsPresent": {
        "label": "is present",
        "type": [
          "string",
          "number",
          "boolean",
        ],
        "value": "pr",
      },
      "Lt": {
        "label": "LT (<)",
        "type": [
          "number",
        ],
        "value": "lt",
      },
      "Lte": {
        "label": "LTE (<=)",
        "type": [
          "number",
        ],
        "value": "le",
      },
      "StartsWith": {
        "label": "starts with",
        "type": [
          "string",
        ],
        "value": "sw",
      },
    },
    "depth=0",
    "index=0",
    " ...",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation COMPONENT_FUNCTIONAL) Functional component <BCard> should be defined as a plain function in Vue 3. The "functional" option has been removed. NOTE: Before migrating to use plain functions for functional components, first make sure that all async components usage have been migrated and its compat behavior has been disabled.
  Details: https://v3-migration.vuejs.org/breaking-changes/functional-components.html",
    "
",
    " at <FilterBuilderRow",
    "conditionOptions=",
    {
      "Contains": {
        "label": "contains",
        "type": [
          "string",
        ],
        "value": "co",
      },
      "DoesNotContain": {
        "label": "does not contain",
        "type": [
          "string",
        ],
        "value": "!co",
      },
      "DoesNotStartsWith": {
        "label": "does not start with",
        "type": [
          "string",
        ],
        "value": "!sw",
      },
      "Gt": {
        "label": "GT (>)",
        "type": [
          "number",
        ],
        "value": "gt",
      },
      "Gte": {
        "label": "GTE (>=)",
        "type": [
          "number",
        ],
        "value": "ge",
      },
      "Is": {
        "label": "is ",
        "type": [
          "string",
          "number",
          "boolean",
        ],
        "value": "eq",
      },
      "IsNot": {
        "label": "is not",
        "type": [
          "string",
          "number",
        ],
        "value": "!eq",
      },
      "IsNotPresent": {
        "label": "is not present",
        "type": [
          "string",
          "number",
          "boolean",
        ],
        "value": "!pr",
      },
      "IsPresent": {
        "label": "is present",
        "type": [
          "string",
          "number",
          "boolean",
        ],
        "value": "pr",
      },
      "Lt": {
        "label": "LT (<)",
        "type": [
          "number",
        ],
        "value": "lt",
      },
      "Lte": {
        "label": "LTE (<=)",
        "type": [
          "number",
        ],
        "value": "le",
      },
      "StartsWith": {
        "label": "starts with",
        "type": [
          "string",
        ],
        "value": "sw",
      },
    },
    "depth=0",
    "index=0",
    " ...",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation INSTANCE_LISTENERS) vm.$listeners has been removed. In Vue 3, parent v-on listeners are included in vm.$attrs and it is no longer necessary to separately use v-on="$listeners" if you are already using v-bind="$attrs". (Note: the Vue 3 behavior only applies if this compat config is disabled)
  Details: https://v3-migration.vuejs.org/breaking-changes/listeners-removed.html",
    "
",
    " at <BCard",
    "class="depth-1 card-container-properties card-queryfilter-builder queryfilter-row shadow-none mt-3"",
    "body-class="p-3"",
    ">",
    "
",
    " at <FilterBuilderRow",
    "conditionOptions=",
    {
      "Contains": {
        "label": "contains",
        "type": [
          "string",
        ],
        "value": "co",
      },
      "DoesNotContain": {
        "label": "does not contain",
        "type": [
          "string",
        ],
        "value": "!co",
      },
      "DoesNotStartsWith": {
        "label": "does not start with",
        "type": [
          "string",
        ],
        "value": "!sw",
      },
      "Gt": {
        "label": "GT (>)",
        "type": [
          "number",
        ],
        "value": "gt",
      },
      "Gte": {
        "label": "GTE (>=)",
        "type": [
          "number",
        ],
        "value": "ge",
      },
      "Is": {
        "label": "is ",
        "type": [
          "string",
          "number",
          "boolean",
        ],
        "value": "eq",
      },
      "IsNot": {
        "label": "is not",
        "type": [
          "string",
          "number",
        ],
        "value": "!eq",
      },
      "IsNotPresent": {
        "label": "is not present",
        "type": [
          "string",
          "number",
          "boolean",
        ],
        "value": "!pr",
      },
      "IsPresent": {
        "label": "is present",
        "type": [
          "string",
          "number",
          "boolean",
        ],
        "value": "pr",
      },
      "Lt": {
        "label": "LT (<)",
        "type": [
          "number",
        ],
        "value": "lt",
      },
      "Lte": {
        "label": "LTE (<=)",
        "type": [
          "number",
        ],
        "value": "le",
      },
      "StartsWith": {
        "label": "starts with",
        "type": [
          "string",
        ],
        "value": "sw",
      },
    },
    "depth=0",
    "index=0",
    " ...",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation GLOBAL_EXTEND) (3)",
    "
",
    " at <BCard",
    "class="depth-1 card-container-properties card-queryfilter-builder queryfilter-row shadow-none mt-3"",
    "body-class="p-3"",
    ">",
    "
",
    " at <FilterBuilderRow",
    "conditionOptions=",
    {
      "Contains": {
        "label": "contains",
        "type": [
          "string",
        ],
        "value": "co",
      },
      "DoesNotContain": {
        "label": "does not contain",
        "type": [
          "string",
        ],
        "value": "!co",
      },
      "DoesNotStartsWith": {
        "label": "does not start with",
        "type": [
          "string",
        ],
        "value": "!sw",
      },
      "Gt": {
        "label": "GT (>)",
        "type": [
          "number",
        ],
        "value": "gt",
      },
      "Gte": {
        "label": "GTE (>=)",
        "type": [
          "number",
        ],
        "value": "ge",
      },
      "Is": {
        "label": "is ",
        "type": [
          "string",
          "number",
          "boolean",
        ],
        "value": "eq",
      },
      "IsNot": {
        "label": "is not",
        "type": [
          "string",
          "number",
        ],
        "value": "!eq",
      },
      "IsNotPresent": {
        "label": "is not present",
        "type": [
          "string",
          "number",
          "boolean",
        ],
        "value": "!pr",
      },
      "IsPresent": {
        "label": "is present",
        "type": [
          "string",
          "number",
          "boolean",
        ],
        "value": "pr",
      },
      "Lt": {
        "label": "LT (<)",
        "type": [
          "number",
        ],
        "value": "lt",
      },
      "Lte": {
        "label": "LTE (<=)",
        "type": [
          "number",
        ],
        "value": "le",
      },
      "StartsWith": {
        "label": "starts with",
        "type": [
          "string",
        ],
        "value": "sw",
      },
    },
    "depth=0",
    "index=0",
    " ...",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation COMPONENT_FUNCTIONAL) (2)",
    "
",
    " at <BCard",
    "class="depth-1 card-container-properties card-queryfilter-builder queryfilter-row shadow-none mt-3"",
    "body-class="p-3"",
    ">",
    "
",
    " at <FilterBuilderRow",
    "conditionOptions=",
    {
      "Contains": {
        "label": "contains",
        "type": [
          "string",
        ],
        "value": "co",
      },
      "DoesNotContain": {
        "label": "does not contain",
        "type": [
          "string",
        ],
        "value": "!co",
      },
      "DoesNotStartsWith": {
        "label": "does not start with",
        "type": [
          "string",
        ],
        "value": "!sw",
      },
      "Gt": {
        "label": "GT (>)",
        "type": [
          "number",
        ],
        "value": "gt",
      },
      "Gte": {
        "label": "GTE (>=)",
        "type": [
          "number",
        ],
        "value": "ge",
      },
      "Is": {
        "label": "is ",
        "type": [
          "string",
          "number",
          "boolean",
        ],
        "value": "eq",
      },
      "IsNot": {
        "label": "is not",
        "type": [
          "string",
          "number",
        ],
        "value": "!eq",
      },
      "IsNotPresent": {
        "label": "is not present",
        "type": [
          "string",
          "number",
          "boolean",
        ],
        "value": "!pr",
      },
      "IsPresent": {
        "label": "is present",
        "type": [
          "string",
          "number",
          "boolean",
        ],
        "value": "pr",
      },
      "Lt": {
        "label": "LT (<)",
        "type": [
          "number",
        ],
        "value": "lt",
      },
      "Lte": {
        "label": "LTE (<=)",
        "type": [
          "number",
        ],
        "value": "le",
      },
      "StartsWith": {
        "label": "starts with",
        "type": [
          "string",
        ],
        "value": "sw",
      },
    },
    "depth=0",
    "index=0",
    " ...",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation INSTANCE_LISTENERS) (2)",
    "
",
    " at <BCardBody",
    "bodyBgVariant=undefined",
    "bodyBorderVariant=undefined",
    "bodyClass="p-3"",
    " ...",
    ">",
    "
",
    " at <BCard",
    "class="depth-1 card-container-properties card-queryfilter-builder queryfilter-row shadow-none mt-3"",
    "body-class="p-3"",
    ">",
    "
",
    " at <FilterBuilderRow",
    "conditionOptions=",
    {
      "Contains": {
        "label": "contains",
        "type": [
          "string",
        ],
        "value": "co",
      },
      "DoesNotContain": {
        "label": "does not contain",
        "type": [
          "string",
        ],
        "value": "!co",
      },
      "DoesNotStartsWith": {
        "label": "does not start with",
        "type": [
          "string",
        ],
        "value": "!sw",
      },
      "Gt": {
        "label": "GT (>)",
        "type": [
          "number",
        ],
        "value": "gt",
      },
      "Gte": {
        "label": "GTE (>=)",
        "type": [
          "number",
        ],
        "value": "ge",
      },
      "Is": {
        "label": "is ",
        "type": [
          "string",
          "number",
          "boolean",
        ],
        "value": "eq",
      },
      "IsNot": {
        "label": "is not",
        "type": [
          "string",
          "number",
        ],
        "value": "!eq",
      },
      "IsNotPresent": {
        "label": "is not present",
        "type": [
          "string",
          "number",
          "boolean",
        ],
        "value": "!pr",
      },
      "IsPresent": {
        "label": "is present",
        "type": [
          "string",
          "number",
          "boolean",
        ],
        "value": "pr",
      },
      "Lt": {
        "label": "LT (<)",
        "type": [
          "number",
        ],
        "value": "lt",
      },
      "Lte": {
        "label": "LTE (<=)",
        "type": [
          "number",
        ],
        "value": "le",
      },
      "StartsWith": {
        "label": "starts with",
        "type": [
          "string",
        ],
        "value": "sw",
      },
    },
    "depth=0",
    "index=0",
    " ...",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation INSTANCE_LISTENERS) (3)",
    "
",
    " at <BFormRow>",
    "
",
    " at <BCardBody",
    "bodyBgVariant=undefined",
    "bodyBorderVariant=undefined",
    "bodyClass="p-3"",
    " ...",
    ">",
    "
",
    " at <BCard",
    "class="depth-1 card-container-properties card-queryfilter-builder queryfilter-row shadow-none mt-3"",
    "body-class="p-3"",
    ">",
    "
",
    " at <FilterBuilderRow",
    "conditionOptions=",
    {
      "Contains": {
        "label": "contains",
        "type": [
          "string",
        ],
        "value": "co",
      },
      "DoesNotContain": {
        "label": "does not contain",
        "type": [
          "string",
        ],
        "value": "!co",
      },
      "DoesNotStartsWith": {
        "label": "does not start with",
        "type": [
          "string",
        ],
        "value": "!sw",
      },
      "Gt": {
        "label": "GT (>)",
        "type": [
          "number",
        ],
        "value": "gt",
      },
      "Gte": {
        "label": "GTE (>=)",
        "type": [
          "number",
        ],
        "value": "ge",
      },
      "Is": {
        "label": "is ",
        "type": [
          "string",
          "number",
          "boolean",
        ],
        "value": "eq",
      },
      "IsNot": {
        "label": "is not",
        "type": [
          "string",
          "number",
        ],
        "value": "!eq",
      },
      "IsNotPresent": {
        "label": "is not present",
        "type": [
          "string",
          "number",
          "boolean",
        ],
        "value": "!pr",
      },
      "IsPresent": {
        "label": "is present",
        "type": [
          "string",
          "number",
          "boolean",
        ],
        "value": "pr",
      },
      "Lt": {
        "label": "LT (<)",
        "type": [
          "number",
        ],
        "value": "lt",
      },
      "Lte": {
        "label": "LTE (<=)",
        "type": [
          "number",
        ],
        "value": "le",
      },
      "StartsWith": {
        "label": "starts with",
        "type": [
          "string",
        ],
        "value": "sw",
      },
    },
    "depth=0",
    "index=0",
    " ...",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation COMPONENT_V_MODEL) v-model usage on component has changed in Vue 3. Component that expects to work with v-model should now use the "modelValue" prop and emit the "update:modelValue" event. You can update the usage and then opt-in to Vue 3 behavior on a per-component basis with \`compatConfig: { COMPONENT_V_MODEL: false }\`.
  Details: https://v3-migration.vuejs.org/breaking-changes/v-model.html",
    "
",
    " at <FrField",
    "key=0",
    "modelValue="/userName"",
    "onUpdate:modelValue=fn",
    " ...",
    ">",
  ],
  [
    "[Vue warn]: (deprecation INSTANCE_LISTENERS) (4)",
    "
",
    " at <FrField",
    "key=0",
    "name="selectPropOptions"",
    "type="select"",
    " ...",
    ">",
    "
",
    " at <BCol",
    "md="5"",
    "class="rule-property-col mb-2 mb-md-0"",
    ">",
    "
",
    " at <BFormRow>",
    "
",
    " at <BCardBody",
    "bodyBgVariant=undefined",
    "bodyBorderVariant=undefined",
    "bodyClass="p-3"",
    " ...",
    ">",
    "
",
    " at <BCard",
    "class="depth-1 card-container-properties card-queryfilter-builder queryfilter-row shadow-none mt-3"",
    "body-class="p-3"",
    ">",
    "
",
    " at <FilterBuilderRow",
    "conditionOptions=",
    {
      "Contains": {
        "label": "contains",
        "type": [
          "string",
        ],
        "value": "co",
      },
      "DoesNotContain": {
        "label": "does not contain",
        "type": [
          "string",
        ],
        "value": "!co",
      },
      "DoesNotStartsWith": {
        "label": "does not start with",
        "type": [
          "string",
        ],
        "value": "!sw",
      },
      "Gt": {
        "label": "GT (>)",
        "type": [
          "number",
        ],
        "value": "gt",
      },
      "Gte": {
        "label": "GTE (>=)",
        "type": [
          "number",
        ],
        "value": "ge",
      },
      "Is": {
        "label": "is ",
        "type": [
          "string",
          "number",
          "boolean",
        ],
        "value": "eq",
      },
      "IsNot": {
        "label": "is not",
        "type": [
          "string",
          "number",
        ],
        "value": "!eq",
      },
      "IsNotPresent": {
        "label": "is not present",
        "type": [
          "string",
          "number",
          "boolean",
        ],
        "value": "!pr",
      },
      "IsPresent": {
        "label": "is present",
        "type": [
          "string",
          "number",
          "boolean",
        ],
        "value": "pr",
      },
      "Lt": {
        "label": "LT (<)",
        "type": [
          "number",
        ],
        "value": "lt",
      },
      "Lte": {
        "label": "LTE (<=)",
        "type": [
          "number",
        ],
        "value": "le",
      },
      "StartsWith": {
        "label": "starts with",
        "type": [
          "string",
        ],
        "value": "sw",
      },
    },
    "depth=0",
    "index=0",
    " ...",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation WATCH_ARRAY) (3)",
    "
",
    " at <SelectInput",
    "key=0",
    "name="selectPropOptions"",
    "type="select"",
    " ...",
    ">",
    "
",
    " at <FrField",
    "key=0",
    "name="selectPropOptions"",
    "type="select"",
    " ...",
    ">",
    "
",
    " at <BCol",
    "md="5"",
    "class="rule-property-col mb-2 mb-md-0"",
    ">",
    "
",
    " at <BFormRow>",
    "
",
    " at <BCardBody",
    "bodyBgVariant=undefined",
    "bodyBorderVariant=undefined",
    "bodyClass="p-3"",
    " ...",
    ">",
    "
",
    " at <BCard",
    "class="depth-1 card-container-properties card-queryfilter-builder queryfilter-row shadow-none mt-3"",
    "body-class="p-3"",
    ">",
    "
",
    " at <FilterBuilderRow",
    "conditionOptions=",
    {
      "Contains": {
        "label": "contains",
        "type": [
          "string",
        ],
        "value": "co",
      },
      "DoesNotContain": {
        "label": "does not contain",
        "type": [
          "string",
        ],
        "value": "!co",
      },
      "DoesNotStartsWith": {
        "label": "does not start with",
        "type": [
          "string",
        ],
        "value": "!sw",
      },
      "Gt": {
        "label": "GT (>)",
        "type": [
          "number",
        ],
        "value": "gt",
      },
      "Gte": {
        "label": "GTE (>=)",
        "type": [
          "number",
        ],
        "value": "ge",
      },
      "Is": {
        "label": "is ",
        "type": [
          "string",
          "number",
          "boolean",
        ],
        "value": "eq",
      },
      "IsNot": {
        "label": "is not",
        "type": [
          "string",
          "number",
        ],
        "value": "!eq",
      },
      "IsNotPresent": {
        "label": "is not present",
        "type": [
          "string",
          "number",
          "boolean",
        ],
        "value": "!pr",
      },
      "IsPresent": {
        "label": "is present",
        "type": [
          "string",
          "number",
          "boolean",
        ],
        "value": "pr",
      },
      "Lt": {
        "label": "LT (<)",
        "type": [
          "number",
        ],
        "value": "lt",
      },
      "Lte": {
        "label": "LTE (<=)",
        "type": [
          "number",
        ],
        "value": "le",
      },
      "StartsWith": {
        "label": "starts with",
        "type": [
          "string",
        ],
        "value": "sw",
      },
    },
    "depth=0",
    "index=0",
    " ...",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation WATCH_ARRAY) (4)",
    "
",
    " at <VueMultiselect",
    "id="floatingLabelInput9"",
    "ref="vms"",
    "value=""",
    " ...",
    ">",
    "
",
    " at <InputLayout",
    "id="floatingLabelInput9"",
    "name="selectPropOptions"",
    "description=""",
    " ...",
    ">",
    "
",
    " at <SelectInput",
    "key=0",
    "name="selectPropOptions"",
    "type="select"",
    " ...",
    ">",
    "
",
    " at <FrField",
    "key=0",
    "name="selectPropOptions"",
    "type="select"",
    " ...",
    ">",
    "
",
    " at <BCol",
    "md="5"",
    "class="rule-property-col mb-2 mb-md-0"",
    ">",
    "
",
    " at <BFormRow>",
    "
",
    " at <BCardBody",
    "bodyBgVariant=undefined",
    "bodyBorderVariant=undefined",
    "bodyClass="p-3"",
    " ...",
    ">",
    "
",
    " at <BCard",
    "class="depth-1 card-container-properties card-queryfilter-builder queryfilter-row shadow-none mt-3"",
    "body-class="p-3"",
    ">",
    "
",
    " at <FilterBuilderRow",
    "conditionOptions=",
    {
      "Contains": {
        "label": "contains",
        "type": [
          "string",
        ],
        "value": "co",
      },
      "DoesNotContain": {
        "label": "does not contain",
        "type": [
          "string",
        ],
        "value": "!co",
      },
      "DoesNotStartsWith": {
        "label": "does not start with",
        "type": [
          "string",
        ],
        "value": "!sw",
      },
      "Gt": {
        "label": "GT (>)",
        "type": [
          "number",
        ],
        "value": "gt",
      },
      "Gte": {
        "label": "GTE (>=)",
        "type": [
          "number",
        ],
        "value": "ge",
      },
      "Is": {
        "label": "is ",
        "type": [
          "string",
          "number",
          "boolean",
        ],
        "value": "eq",
      },
      "IsNot": {
        "label": "is not",
        "type": [
          "string",
          "number",
        ],
        "value": "!eq",
      },
      "IsNotPresent": {
        "label": "is not present",
        "type": [
          "string",
          "number",
          "boolean",
        ],
        "value": "!pr",
      },
      "IsPresent": {
        "label": "is present",
        "type": [
          "string",
          "number",
          "boolean",
        ],
        "value": "pr",
      },
      "Lt": {
        "label": "LT (<)",
        "type": [
          "number",
        ],
        "value": "lt",
      },
      "Lte": {
        "label": "LTE (<=)",
        "type": [
          "number",
        ],
        "value": "le",
      },
      "StartsWith": {
        "label": "starts with",
        "type": [
          "string",
        ],
        "value": "sw",
      },
    },
    "depth=0",
    "index=0",
    " ...",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation ATTR_FALSE_VALUE) Attribute "appear" with v-bind value \`false\` will render appear="false" instead of removing it in Vue 3. To remove the attribute, use \`null\` or \`undefined\` instead. If the usage is intended, you can disable the compat behavior and suppress this warning with:

  configureCompat({ ATTR_FALSE_VALUE: false })

  Details: https://v3-migration.vuejs.org/breaking-changes/attribute-coercion.html",
    "
",
    " at <Transition",
    "name="multiselect__loading"",
    ">",
    "
",
    " at <VueMultiselect",
    "id="floatingLabelInput9"",
    "ref="vms"",
    "value=""",
    " ...",
    ">",
    "
",
    " at <InputLayout",
    "id="floatingLabelInput9"",
    "name="selectPropOptions"",
    "description=""",
    " ...",
    ">",
    "
",
    " at <SelectInput",
    "key=0",
    "name="selectPropOptions"",
    "type="select"",
    " ...",
    ">",
    "
",
    " at <FrField",
    "key=0",
    "name="selectPropOptions"",
    "type="select"",
    " ...",
    ">",
    "
",
    " at <BCol",
    "md="5"",
    "class="rule-property-col mb-2 mb-md-0"",
    ">",
    "
",
    " at <BFormRow>",
    "
",
    " at <BCardBody",
    "bodyBgVariant=undefined",
    "bodyBorderVariant=undefined",
    "bodyClass="p-3"",
    " ...",
    ">",
    "
",
    " at <BCard",
    "class="depth-1 card-container-properties card-queryfilter-builder queryfilter-row shadow-none mt-3"",
    "body-class="p-3"",
    ">",
    "
",
    " at <FilterBuilderRow",
    "conditionOptions=",
    {
      "Contains": {
        "label": "contains",
        "type": [
          "string",
        ],
        "value": "co",
      },
      "DoesNotContain": {
        "label": "does not contain",
        "type": [
          "string",
        ],
        "value": "!co",
      },
      "DoesNotStartsWith": {
        "label": "does not start with",
        "type": [
          "string",
        ],
        "value": "!sw",
      },
      "Gt": {
        "label": "GT (>)",
        "type": [
          "number",
        ],
        "value": "gt",
      },
      "Gte": {
        "label": "GTE (>=)",
        "type": [
          "number",
        ],
        "value": "ge",
      },
      "Is": {
        "label": "is ",
        "type": [
          "string",
          "number",
          "boolean",
        ],
        "value": "eq",
      },
      "IsNot": {
        "label": "is not",
        "type": [
          "string",
          "number",
        ],
        "value": "!eq",
      },
      "IsNotPresent": {
        "label": "is not present",
        "type": [
          "string",
          "number",
          "boolean",
        ],
        "value": "!pr",
      },
      "IsPresent": {
        "label": "is present",
        "type": [
          "string",
          "number",
          "boolean",
        ],
        "value": "pr",
      },
      "Lt": {
        "label": "LT (<)",
        "type": [
          "number",
        ],
        "value": "lt",
      },
      "Lte": {
        "label": "LTE (<=)",
        "type": [
          "number",
        ],
        "value": "le",
      },
      "StartsWith": {
        "label": "starts with",
        "type": [
          "string",
        ],
        "value": "sw",
      },
    },
    "depth=0",
    "index=0",
    " ...",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation ATTR_FALSE_VALUE) Attribute "persisted" with v-bind value \`false\` will render persisted="false" instead of removing it in Vue 3. To remove the attribute, use \`null\` or \`undefined\` instead. If the usage is intended, you can disable the compat behavior and suppress this warning with:

  configureCompat({ ATTR_FALSE_VALUE: false })

  Details: https://v3-migration.vuejs.org/breaking-changes/attribute-coercion.html",
    "
",
    " at <Transition",
    "name="multiselect__loading"",
    ">",
    "
",
    " at <VueMultiselect",
    "id="floatingLabelInput9"",
    "ref="vms"",
    "value=""",
    " ...",
    ">",
    "
",
    " at <InputLayout",
    "id="floatingLabelInput9"",
    "name="selectPropOptions"",
    "description=""",
    " ...",
    ">",
    "
",
    " at <SelectInput",
    "key=0",
    "name="selectPropOptions"",
    "type="select"",
    " ...",
    ">",
    "
",
    " at <FrField",
    "key=0",
    "name="selectPropOptions"",
    "type="select"",
    " ...",
    ">",
    "
",
    " at <BCol",
    "md="5"",
    "class="rule-property-col mb-2 mb-md-0"",
    ">",
    "
",
    " at <BFormRow>",
    "
",
    " at <BCardBody",
    "bodyBgVariant=undefined",
    "bodyBorderVariant=undefined",
    "bodyClass="p-3"",
    " ...",
    ">",
    "
",
    " at <BCard",
    "class="depth-1 card-container-properties card-queryfilter-builder queryfilter-row shadow-none mt-3"",
    "body-class="p-3"",
    ">",
    "
",
    " at <FilterBuilderRow",
    "conditionOptions=",
    {
      "Contains": {
        "label": "contains",
        "type": [
          "string",
        ],
        "value": "co",
      },
      "DoesNotContain": {
        "label": "does not contain",
        "type": [
          "string",
        ],
        "value": "!co",
      },
      "DoesNotStartsWith": {
        "label": "does not start with",
        "type": [
          "string",
        ],
        "value": "!sw",
      },
      "Gt": {
        "label": "GT (>)",
        "type": [
          "number",
        ],
        "value": "gt",
      },
      "Gte": {
        "label": "GTE (>=)",
        "type": [
          "number",
        ],
        "value": "ge",
      },
      "Is": {
        "label": "is ",
        "type": [
          "string",
          "number",
          "boolean",
        ],
        "value": "eq",
      },
      "IsNot": {
        "label": "is not",
        "type": [
          "string",
          "number",
        ],
        "value": "!eq",
      },
      "IsNotPresent": {
        "label": "is not present",
        "type": [
          "string",
          "number",
          "boolean",
        ],
        "value": "!pr",
      },
      "IsPresent": {
        "label": "is present",
        "type": [
          "string",
          "number",
          "boolean",
        ],
        "value": "pr",
      },
      "Lt": {
        "label": "LT (<)",
        "type": [
          "number",
        ],
        "value": "lt",
      },
      "Lte": {
        "label": "LTE (<=)",
        "type": [
          "number",
        ],
        "value": "le",
      },
      "StartsWith": {
        "label": "starts with",
        "type": [
          "string",
        ],
        "value": "sw",
      },
    },
    "depth=0",
    "index=0",
    " ...",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation ATTR_ENUMERATED_COERCION) Enumerated attribute "spellcheck" with v-bind value \`false\` will render the value as-is instead of coercing the value to "true" in Vue 3. Always use explicit "true" or "false" values for enumerated attributes. If the usage is intended, you can disable the compat behavior and suppress this warning with:

  configureCompat({ ATTR_ENUMERATED_COERCION: false })

  Details: https://v3-migration.vuejs.org/breaking-changes/attribute-coercion.html",
    "
",
    " at <VueMultiselect",
    "id="floatingLabelInput9"",
    "ref="vms"",
    "value=""",
    " ...",
    ">",
    "
",
    " at <InputLayout",
    "id="floatingLabelInput9"",
    "name="selectPropOptions"",
    "description=""",
    " ...",
    ">",
    "
",
    " at <SelectInput",
    "key=0",
    "name="selectPropOptions"",
    "type="select"",
    " ...",
    ">",
    "
",
    " at <FrField",
    "key=0",
    "name="selectPropOptions"",
    "type="select"",
    " ...",
    ">",
    "
",
    " at <BCol",
    "md="5"",
    "class="rule-property-col mb-2 mb-md-0"",
    ">",
    "
",
    " at <BFormRow>",
    "
",
    " at <BCardBody",
    "bodyBgVariant=undefined",
    "bodyBorderVariant=undefined",
    "bodyClass="p-3"",
    " ...",
    ">",
    "
",
    " at <BCard",
    "class="depth-1 card-container-properties card-queryfilter-builder queryfilter-row shadow-none mt-3"",
    "body-class="p-3"",
    ">",
    "
",
    " at <FilterBuilderRow",
    "conditionOptions=",
    {
      "Contains": {
        "label": "contains",
        "type": [
          "string",
        ],
        "value": "co",
      },
      "DoesNotContain": {
        "label": "does not contain",
        "type": [
          "string",
        ],
        "value": "!co",
      },
      "DoesNotStartsWith": {
        "label": "does not start with",
        "type": [
          "string",
        ],
        "value": "!sw",
      },
      "Gt": {
        "label": "GT (>)",
        "type": [
          "number",
        ],
        "value": "gt",
      },
      "Gte": {
        "label": "GTE (>=)",
        "type": [
          "number",
        ],
        "value": "ge",
      },
      "Is": {
        "label": "is ",
        "type": [
          "string",
          "number",
          "boolean",
        ],
        "value": "eq",
      },
      "IsNot": {
        "label": "is not",
        "type": [
          "string",
          "number",
        ],
        "value": "!eq",
      },
      "IsNotPresent": {
        "label": "is not present",
        "type": [
          "string",
          "number",
          "boolean",
        ],
        "value": "!pr",
      },
      "IsPresent": {
        "label": "is present",
        "type": [
          "string",
          "number",
          "boolean",
        ],
        "value": "pr",
      },
      "Lt": {
        "label": "LT (<)",
        "type": [
          "number",
        ],
        "value": "lt",
      },
      "Lte": {
        "label": "LTE (<=)",
        "type": [
          "number",
        ],
        "value": "le",
      },
      "StartsWith": {
        "label": "starts with",
        "type": [
          "string",
        ],
        "value": "sw",
      },
    },
    "depth=0",
    "index=0",
    " ...",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation ATTR_FALSE_VALUE) Attribute "disabled" with v-bind value \`false\` will render disabled="false" instead of removing it in Vue 3. To remove the attribute, use \`null\` or \`undefined\` instead. If the usage is intended, you can disable the compat behavior and suppress this warning with:

  configureCompat({ ATTR_FALSE_VALUE: false })

  Details: https://v3-migration.vuejs.org/breaking-changes/attribute-coercion.html",
    "
",
    " at <FrField",
    "key=0",
    "name="selectPropOptions"",
    "type="select"",
    " ...",
    ">",
    "
",
    " at <BCol",
    "md="5"",
    "class="rule-property-col mb-2 mb-md-0"",
    ">",
    "
",
    " at <BFormRow>",
    "
",
    " at <BCardBody",
    "bodyBgVariant=undefined",
    "bodyBorderVariant=undefined",
    "bodyClass="p-3"",
    " ...",
    ">",
    "
",
    " at <BCard",
    "class="depth-1 card-container-properties card-queryfilter-builder queryfilter-row shadow-none mt-3"",
    "body-class="p-3"",
    ">",
    "
",
    " at <FilterBuilderRow",
    "conditionOptions=",
    {
      "Contains": {
        "label": "contains",
        "type": [
          "string",
        ],
        "value": "co",
      },
      "DoesNotContain": {
        "label": "does not contain",
        "type": [
          "string",
        ],
        "value": "!co",
      },
      "DoesNotStartsWith": {
        "label": "does not start with",
        "type": [
          "string",
        ],
        "value": "!sw",
      },
      "Gt": {
        "label": "GT (>)",
        "type": [
          "number",
        ],
        "value": "gt",
      },
      "Gte": {
        "label": "GTE (>=)",
        "type": [
          "number",
        ],
        "value": "ge",
      },
      "Is": {
        "label": "is ",
        "type": [
          "string",
          "number",
          "boolean",
        ],
        "value": "eq",
      },
      "IsNot": {
        "label": "is not",
        "type": [
          "string",
          "number",
        ],
        "value": "!eq",
      },
      "IsNotPresent": {
        "label": "is not present",
        "type": [
          "string",
          "number",
          "boolean",
        ],
        "value": "!pr",
      },
      "IsPresent": {
        "label": "is present",
        "type": [
          "string",
          "number",
          "boolean",
        ],
        "value": "pr",
      },
      "Lt": {
        "label": "LT (<)",
        "type": [
          "number",
        ],
        "value": "lt",
      },
      "Lte": {
        "label": "LTE (<=)",
        "type": [
          "number",
        ],
        "value": "le",
      },
      "StartsWith": {
        "label": "starts with",
        "type": [
          "string",
        ],
        "value": "sw",
      },
    },
    "depth=0",
    "index=0",
    " ...",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation ATTR_FALSE_VALUE) Attribute "searchable" with v-bind value \`false\` will render searchable="false" instead of removing it in Vue 3. To remove the attribute, use \`null\` or \`undefined\` instead. If the usage is intended, you can disable the compat behavior and suppress this warning with:

  configureCompat({ ATTR_FALSE_VALUE: false })

  Details: https://v3-migration.vuejs.org/breaking-changes/attribute-coercion.html",
    "
",
    " at <FrField",
    "name="selectConditionOptions"",
    "type="select"",
    "disabled=false",
    " ...",
    ">",
    "
",
    " at <BCol",
    "class="rule-condition-col mb-2 mb-md-0"",
    "md=true",
    ">",
    "
",
    " at <BFormRow>",
    "
",
    " at <BCardBody",
    "bodyBgVariant=undefined",
    "bodyBorderVariant=undefined",
    "bodyClass="p-3"",
    " ...",
    ">",
    "
",
    " at <BCard",
    "class="depth-1 card-container-properties card-queryfilter-builder queryfilter-row shadow-none mt-3"",
    "body-class="p-3"",
    ">",
    "
",
    " at <FilterBuilderRow",
    "conditionOptions=",
    {
      "Contains": {
        "label": "contains",
        "type": [
          "string",
        ],
        "value": "co",
      },
      "DoesNotContain": {
        "label": "does not contain",
        "type": [
          "string",
        ],
        "value": "!co",
      },
      "DoesNotStartsWith": {
        "label": "does not start with",
        "type": [
          "string",
        ],
        "value": "!sw",
      },
      "Gt": {
        "label": "GT (>)",
        "type": [
          "number",
        ],
        "value": "gt",
      },
      "Gte": {
        "label": "GTE (>=)",
        "type": [
          "number",
        ],
        "value": "ge",
      },
      "Is": {
        "label": "is ",
        "type": [
          "string",
          "number",
          "boolean",
        ],
        "value": "eq",
      },
      "IsNot": {
        "label": "is not",
        "type": [
          "string",
          "number",
        ],
        "value": "!eq",
      },
      "IsNotPresent": {
        "label": "is not present",
        "type": [
          "string",
          "number",
          "boolean",
        ],
        "value": "!pr",
      },
      "IsPresent": {
        "label": "is present",
        "type": [
          "string",
          "number",
          "boolean",
        ],
        "value": "pr",
      },
      "Lt": {
        "label": "LT (<)",
        "type": [
          "number",
        ],
        "value": "lt",
      },
      "Lte": {
        "label": "LTE (<=)",
        "type": [
          "number",
        ],
        "value": "le",
      },
      "StartsWith": {
        "label": "starts with",
        "type": [
          "string",
        ],
        "value": "sw",
      },
    },
    "depth=0",
    "index=0",
    " ...",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation WATCH_ARRAY) (5)",
    "
",
    " at <BasicInput",
    "name="inputValue"",
    "disabled=false",
    "options=undefined",
    " ...",
    ">",
    "
",
    " at <FrField",
    "name="inputValue"",
    "disabled=false",
    "options=undefined",
    " ...",
    ">",
    "
",
    " at <BCol",
    "key=0",
    "class="rule-value-col mb-2 mb-md-0"",
    "md=true",
    ">",
    "
",
    " at <BFormRow>",
    "
",
    " at <BCardBody",
    "bodyBgVariant=undefined",
    "bodyBorderVariant=undefined",
    "bodyClass="p-3"",
    " ...",
    ">",
    "
",
    " at <BCard",
    "class="depth-1 card-container-properties card-queryfilter-builder queryfilter-row shadow-none mt-3"",
    "body-class="p-3"",
    ">",
    "
",
    " at <FilterBuilderRow",
    "conditionOptions=",
    {
      "Contains": {
        "label": "contains",
        "type": [
          "string",
        ],
        "value": "co",
      },
      "DoesNotContain": {
        "label": "does not contain",
        "type": [
          "string",
        ],
        "value": "!co",
      },
      "DoesNotStartsWith": {
        "label": "does not start with",
        "type": [
          "string",
        ],
        "value": "!sw",
      },
      "Gt": {
        "label": "GT (>)",
        "type": [
          "number",
        ],
        "value": "gt",
      },
      "Gte": {
        "label": "GTE (>=)",
        "type": [
          "number",
        ],
        "value": "ge",
      },
      "Is": {
        "label": "is ",
        "type": [
          "string",
          "number",
          "boolean",
        ],
        "value": "eq",
      },
      "IsNot": {
        "label": "is not",
        "type": [
          "string",
          "number",
        ],
        "value": "!eq",
      },
      "IsNotPresent": {
        "label": "is not present",
        "type": [
          "string",
          "number",
          "boolean",
        ],
        "value": "!pr",
      },
      "IsPresent": {
        "label": "is present",
        "type": [
          "string",
          "number",
          "boolean",
        ],
        "value": "pr",
      },
      "Lt": {
        "label": "LT (<)",
        "type": [
          "number",
        ],
        "value": "lt",
      },
      "Lte": {
        "label": "LTE (<=)",
        "type": [
          "number",
        ],
        "value": "le",
      },
      "StartsWith": {
        "label": "starts with",
        "type": [
          "string",
        ],
        "value": "sw",
      },
    },
    "depth=0",
    "index=0",
    " ...",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation ATTR_FALSE_VALUE) Attribute "placeholder" with v-bind value \`false\` will render placeholder="false" instead of removing it in Vue 3. To remove the attribute, use \`null\` or \`undefined\` instead. If the usage is intended, you can disable the compat behavior and suppress this warning with:

  configureCompat({ ATTR_FALSE_VALUE: false })

  Details: https://v3-migration.vuejs.org/breaking-changes/attribute-coercion.html",
    "
",
    " at <InputLayout",
    "id="floatingLabelInput25"",
    "name="inputValue"",
    "description=""",
    " ...",
    ">",
    "
",
    " at <BasicInput",
    "name="inputValue"",
    "disabled=false",
    "options=undefined",
    " ...",
    ">",
    "
",
    " at <FrField",
    "name="inputValue"",
    "disabled=false",
    "options=undefined",
    " ...",
    ">",
    "
",
    " at <BCol",
    "key=0",
    "class="rule-value-col mb-2 mb-md-0"",
    "md=true",
    ">",
    "
",
    " at <BFormRow>",
    "
",
    " at <BCardBody",
    "bodyBgVariant=undefined",
    "bodyBorderVariant=undefined",
    "bodyClass="p-3"",
    " ...",
    ">",
    "
",
    " at <BCard",
    "class="depth-1 card-container-properties card-queryfilter-builder queryfilter-row shadow-none mt-3"",
    "body-class="p-3"",
    ">",
    "
",
    " at <FilterBuilderRow",
    "conditionOptions=",
    {
      "Contains": {
        "label": "contains",
        "type": [
          "string",
        ],
        "value": "co",
      },
      "DoesNotContain": {
        "label": "does not contain",
        "type": [
          "string",
        ],
        "value": "!co",
      },
      "DoesNotStartsWith": {
        "label": "does not start with",
        "type": [
          "string",
        ],
        "value": "!sw",
      },
      "Gt": {
        "label": "GT (>)",
        "type": [
          "number",
        ],
        "value": "gt",
      },
      "Gte": {
        "label": "GTE (>=)",
        "type": [
          "number",
        ],
        "value": "ge",
      },
      "Is": {
        "label": "is ",
        "type": [
          "string",
          "number",
          "boolean",
        ],
        "value": "eq",
      },
      "IsNot": {
        "label": "is not",
        "type": [
          "string",
          "number",
        ],
        "value": "!eq",
      },
      "IsNotPresent": {
        "label": "is not present",
        "type": [
          "string",
          "number",
          "boolean",
        ],
        "value": "!pr",
      },
      "IsPresent": {
        "label": "is present",
        "type": [
          "string",
          "number",
          "boolean",
        ],
        "value": "pr",
      },
      "Lt": {
        "label": "LT (<)",
        "type": [
          "number",
        ],
        "value": "lt",
      },
      "Lte": {
        "label": "LTE (<=)",
        "type": [
          "number",
        ],
        "value": "le",
      },
      "StartsWith": {
        "label": "starts with",
        "type": [
          "string",
        ],
        "value": "sw",
      },
    },
    "depth=0",
    "index=0",
    " ...",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation ATTR_FALSE_VALUE) Attribute "aria-describedby" with v-bind value \`false\` will render aria-describedby="false" instead of removing it in Vue 3. To remove the attribute, use \`null\` or \`undefined\` instead. If the usage is intended, you can disable the compat behavior and suppress this warning with:

  configureCompat({ ATTR_FALSE_VALUE: false })

  Details: https://v3-migration.vuejs.org/breaking-changes/attribute-coercion.html",
    "
",
    " at <InputLayout",
    "id="floatingLabelInput25"",
    "name="inputValue"",
    "description=""",
    " ...",
    ">",
    "
",
    " at <BasicInput",
    "name="inputValue"",
    "disabled=false",
    "options=undefined",
    " ...",
    ">",
    "
",
    " at <FrField",
    "name="inputValue"",
    "disabled=false",
    "options=undefined",
    " ...",
    ">",
    "
",
    " at <BCol",
    "key=0",
    "class="rule-value-col mb-2 mb-md-0"",
    "md=true",
    ">",
    "
",
    " at <BFormRow>",
    "
",
    " at <BCardBody",
    "bodyBgVariant=undefined",
    "bodyBorderVariant=undefined",
    "bodyClass="p-3"",
    " ...",
    ">",
    "
",
    " at <BCard",
    "class="depth-1 card-container-properties card-queryfilter-builder queryfilter-row shadow-none mt-3"",
    "body-class="p-3"",
    ">",
    "
",
    " at <FilterBuilderRow",
    "conditionOptions=",
    {
      "Contains": {
        "label": "contains",
        "type": [
          "string",
        ],
        "value": "co",
      },
      "DoesNotContain": {
        "label": "does not contain",
        "type": [
          "string",
        ],
        "value": "!co",
      },
      "DoesNotStartsWith": {
        "label": "does not start with",
        "type": [
          "string",
        ],
        "value": "!sw",
      },
      "Gt": {
        "label": "GT (>)",
        "type": [
          "number",
        ],
        "value": "gt",
      },
      "Gte": {
        "label": "GTE (>=)",
        "type": [
          "number",
        ],
        "value": "ge",
      },
      "Is": {
        "label": "is ",
        "type": [
          "string",
          "number",
          "boolean",
        ],
        "value": "eq",
      },
      "IsNot": {
        "label": "is not",
        "type": [
          "string",
          "number",
        ],
        "value": "!eq",
      },
      "IsNotPresent": {
        "label": "is not present",
        "type": [
          "string",
          "number",
          "boolean",
        ],
        "value": "!pr",
      },
      "IsPresent": {
        "label": "is present",
        "type": [
          "string",
          "number",
          "boolean",
        ],
        "value": "pr",
      },
      "Lt": {
        "label": "LT (<)",
        "type": [
          "number",
        ],
        "value": "lt",
      },
      "Lte": {
        "label": "LTE (<=)",
        "type": [
          "number",
        ],
        "value": "le",
      },
      "StartsWith": {
        "label": "starts with",
        "type": [
          "string",
        ],
        "value": "sw",
      },
    },
    "depth=0",
    "index=0",
    " ...",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation GLOBAL_EXTEND) (4)",
    "
",
    " at <FilterBuilderAddButton",
    "class="add-button"",
    "disabled=false",
    "hide-group=false",
    " ...",
    ">",
    "
",
    " at <BCardBody",
    "bodyBgVariant=undefined",
    "bodyBorderVariant=undefined",
    "bodyClass="p-3"",
    " ...",
    ">",
    "
",
    " at <BCard",
    "class="depth-1 card-container-properties card-queryfilter-builder queryfilter-row shadow-none mt-3"",
    "body-class="p-3"",
    ">",
    "
",
    " at <FilterBuilderRow",
    "conditionOptions=",
    {
      "Contains": {
        "label": "contains",
        "type": [
          "string",
        ],
        "value": "co",
      },
      "DoesNotContain": {
        "label": "does not contain",
        "type": [
          "string",
        ],
        "value": "!co",
      },
      "DoesNotStartsWith": {
        "label": "does not start with",
        "type": [
          "string",
        ],
        "value": "!sw",
      },
      "Gt": {
        "label": "GT (>)",
        "type": [
          "number",
        ],
        "value": "gt",
      },
      "Gte": {
        "label": "GTE (>=)",
        "type": [
          "number",
        ],
        "value": "ge",
      },
      "Is": {
        "label": "is ",
        "type": [
          "string",
          "number",
          "boolean",
        ],
        "value": "eq",
      },
      "IsNot": {
        "label": "is not",
        "type": [
          "string",
          "number",
        ],
        "value": "!eq",
      },
      "IsNotPresent": {
        "label": "is not present",
        "type": [
          "string",
          "number",
          "boolean",
        ],
        "value": "!pr",
      },
      "IsPresent": {
        "label": "is present",
        "type": [
          "string",
          "number",
          "boolean",
        ],
        "value": "pr",
      },
      "Lt": {
        "label": "LT (<)",
        "type": [
          "number",
        ],
        "value": "lt",
      },
      "Lte": {
        "label": "LTE (<=)",
        "type": [
          "number",
        ],
        "value": "le",
      },
      "StartsWith": {
        "label": "starts with",
        "type": [
          "string",
        ],
        "value": "sw",
      },
    },
    "depth=0",
    "index=0",
    " ...",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation RENDER_FUNCTION) (2)",
    "
",
    " at <BDropdown",
    "class="hover-gray add-button"",
    "no-caret=""",
    "variant="link"",
    " ...",
    ">",
    "
",
    " at <FilterBuilderAddButton",
    "class="add-button"",
    "disabled=false",
    "hide-group=false",
    " ...",
    ">",
    "
",
    " at <BCardBody",
    "bodyBgVariant=undefined",
    "bodyBorderVariant=undefined",
    "bodyClass="p-3"",
    " ...",
    ">",
    "
",
    " at <BCard",
    "class="depth-1 card-container-properties card-queryfilter-builder queryfilter-row shadow-none mt-3"",
    "body-class="p-3"",
    ">",
    "
",
    " at <FilterBuilderRow",
    "conditionOptions=",
    {
      "Contains": {
        "label": "contains",
        "type": [
          "string",
        ],
        "value": "co",
      },
      "DoesNotContain": {
        "label": "does not contain",
        "type": [
          "string",
        ],
        "value": "!co",
      },
      "DoesNotStartsWith": {
        "label": "does not start with",
        "type": [
          "string",
        ],
        "value": "!sw",
      },
      "Gt": {
        "label": "GT (>)",
        "type": [
          "number",
        ],
        "value": "gt",
      },
      "Gte": {
        "label": "GTE (>=)",
        "type": [
          "number",
        ],
        "value": "ge",
      },
      "Is": {
        "label": "is ",
        "type": [
          "string",
          "number",
          "boolean",
        ],
        "value": "eq",
      },
      "IsNot": {
        "label": "is not",
        "type": [
          "string",
          "number",
        ],
        "value": "!eq",
      },
      "IsNotPresent": {
        "label": "is not present",
        "type": [
          "string",
          "number",
          "boolean",
        ],
        "value": "!pr",
      },
      "IsPresent": {
        "label": "is present",
        "type": [
          "string",
          "number",
          "boolean",
        ],
        "value": "pr",
      },
      "Lt": {
        "label": "LT (<)",
        "type": [
          "number",
        ],
        "value": "lt",
      },
      "Lte": {
        "label": "LTE (<=)",
        "type": [
          "number",
        ],
        "value": "le",
      },
      "StartsWith": {
        "label": "starts with",
        "type": [
          "string",
        ],
        "value": "sw",
      },
    },
    "depth=0",
    "index=0",
    " ...",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation OPTIONS_BEFORE_DESTROY) \`beforeDestroy\` has been renamed to \`beforeUnmount\`.",
    "
",
    " at <BDropdown",
    "class="hover-gray add-button"",
    "no-caret=""",
    "variant="link"",
    " ...",
    ">",
    "
",
    " at <FilterBuilderAddButton",
    "class="add-button"",
    "disabled=false",
    "hide-group=false",
    " ...",
    ">",
    "
",
    " at <BCardBody",
    "bodyBgVariant=undefined",
    "bodyBorderVariant=undefined",
    "bodyClass="p-3"",
    " ...",
    ">",
    "
",
    " at <BCard",
    "class="depth-1 card-container-properties card-queryfilter-builder queryfilter-row shadow-none mt-3"",
    "body-class="p-3"",
    ">",
    "
",
    " at <FilterBuilderRow",
    "conditionOptions=",
    {
      "Contains": {
        "label": "contains",
        "type": [
          "string",
        ],
        "value": "co",
      },
      "DoesNotContain": {
        "label": "does not contain",
        "type": [
          "string",
        ],
        "value": "!co",
      },
      "DoesNotStartsWith": {
        "label": "does not start with",
        "type": [
          "string",
        ],
        "value": "!sw",
      },
      "Gt": {
        "label": "GT (>)",
        "type": [
          "number",
        ],
        "value": "gt",
      },
      "Gte": {
        "label": "GTE (>=)",
        "type": [
          "number",
        ],
        "value": "ge",
      },
      "Is": {
        "label": "is ",
        "type": [
          "string",
          "number",
          "boolean",
        ],
        "value": "eq",
      },
      "IsNot": {
        "label": "is not",
        "type": [
          "string",
          "number",
        ],
        "value": "!eq",
      },
      "IsNotPresent": {
        "label": "is not present",
        "type": [
          "string",
          "number",
          "boolean",
        ],
        "value": "!pr",
      },
      "IsPresent": {
        "label": "is present",
        "type": [
          "string",
          "number",
          "boolean",
        ],
        "value": "pr",
      },
      "Lt": {
        "label": "LT (<)",
        "type": [
          "number",
        ],
        "value": "lt",
      },
      "Lte": {
        "label": "LTE (<=)",
        "type": [
          "number",
        ],
        "value": "le",
      },
      "StartsWith": {
        "label": "starts with",
        "type": [
          "string",
        ],
        "value": "sw",
      },
    },
    "depth=0",
    "index=0",
    " ...",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation INSTANCE_SCOPED_SLOTS) vm.$scopedSlots has been removed. Use vm.$slots instead.
  Details: https://v3-migration.vuejs.org/breaking-changes/slots-unification.html",
    "
",
    " at <BDropdown",
    "class="hover-gray add-button"",
    "no-caret=""",
    "variant="link"",
    " ...",
    ">",
    "
",
    " at <FilterBuilderAddButton",
    "class="add-button"",
    "disabled=false",
    "hide-group=false",
    " ...",
    ">",
    "
",
    " at <BCardBody",
    "bodyBgVariant=undefined",
    "bodyBorderVariant=undefined",
    "bodyClass="p-3"",
    " ...",
    ">",
    "
",
    " at <BCard",
    "class="depth-1 card-container-properties card-queryfilter-builder queryfilter-row shadow-none mt-3"",
    "body-class="p-3"",
    ">",
    "
",
    " at <FilterBuilderRow",
    "conditionOptions=",
    {
      "Contains": {
        "label": "contains",
        "type": [
          "string",
        ],
        "value": "co",
      },
      "DoesNotContain": {
        "label": "does not contain",
        "type": [
          "string",
        ],
        "value": "!co",
      },
      "DoesNotStartsWith": {
        "label": "does not start with",
        "type": [
          "string",
        ],
        "value": "!sw",
      },
      "Gt": {
        "label": "GT (>)",
        "type": [
          "number",
        ],
        "value": "gt",
      },
      "Gte": {
        "label": "GTE (>=)",
        "type": [
          "number",
        ],
        "value": "ge",
      },
      "Is": {
        "label": "is ",
        "type": [
          "string",
          "number",
          "boolean",
        ],
        "value": "eq",
      },
      "IsNot": {
        "label": "is not",
        "type": [
          "string",
          "number",
        ],
        "value": "!eq",
      },
      "IsNotPresent": {
        "label": "is not present",
        "type": [
          "string",
          "number",
          "boolean",
        ],
        "value": "!pr",
      },
      "IsPresent": {
        "label": "is present",
        "type": [
          "string",
          "number",
          "boolean",
        ],
        "value": "pr",
      },
      "Lt": {
        "label": "LT (<)",
        "type": [
          "number",
        ],
        "value": "lt",
      },
      "Lte": {
        "label": "LTE (<=)",
        "type": [
          "number",
        ],
        "value": "le",
      },
      "StartsWith": {
        "label": "starts with",
        "type": [
          "string",
        ],
        "value": "sw",
      },
    },
    "depth=0",
    "index=0",
    " ...",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation GLOBAL_EXTEND) (5)",
    "
",
    " at <BDropdown",
    "class="hover-gray add-button"",
    "no-caret=""",
    "variant="link"",
    " ...",
    ">",
    "
",
    " at <FilterBuilderAddButton",
    "class="add-button"",
    "disabled=false",
    "hide-group=false",
    " ...",
    ">",
    "
",
    " at <BCardBody",
    "bodyBgVariant=undefined",
    "bodyBorderVariant=undefined",
    "bodyClass="p-3"",
    " ...",
    ">",
    "
",
    " at <BCard",
    "class="depth-1 card-container-properties card-queryfilter-builder queryfilter-row shadow-none mt-3"",
    "body-class="p-3"",
    ">",
    "
",
    " at <FilterBuilderRow",
    "conditionOptions=",
    {
      "Contains": {
        "label": "contains",
        "type": [
          "string",
        ],
        "value": "co",
      },
      "DoesNotContain": {
        "label": "does not contain",
        "type": [
          "string",
        ],
        "value": "!co",
      },
      "DoesNotStartsWith": {
        "label": "does not start with",
        "type": [
          "string",
        ],
        "value": "!sw",
      },
      "Gt": {
        "label": "GT (>)",
        "type": [
          "number",
        ],
        "value": "gt",
      },
      "Gte": {
        "label": "GTE (>=)",
        "type": [
          "number",
        ],
        "value": "ge",
      },
      "Is": {
        "label": "is ",
        "type": [
          "string",
          "number",
          "boolean",
        ],
        "value": "eq",
      },
      "IsNot": {
        "label": "is not",
        "type": [
          "string",
          "number",
        ],
        "value": "!eq",
      },
      "IsNotPresent": {
        "label": "is not present",
        "type": [
          "string",
          "number",
          "boolean",
        ],
        "value": "!pr",
      },
      "IsPresent": {
        "label": "is present",
        "type": [
          "string",
          "number",
          "boolean",
        ],
        "value": "pr",
      },
      "Lt": {
        "label": "LT (<)",
        "type": [
          "number",
        ],
        "value": "lt",
      },
      "Lte": {
        "label": "LTE (<=)",
        "type": [
          "number",
        ],
        "value": "le",
      },
      "StartsWith": {
        "label": "starts with",
        "type": [
          "string",
        ],
        "value": "sw",
      },
    },
    "depth=0",
    "index=0",
    " ...",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation COMPONENT_FUNCTIONAL) (3)",
    "
",
    " at <BDropdown",
    "class="hover-gray add-button"",
    "no-caret=""",
    "variant="link"",
    " ...",
    ">",
    "
",
    " at <FilterBuilderAddButton",
    "class="add-button"",
    "disabled=false",
    "hide-group=false",
    " ...",
    ">",
    "
",
    " at <BCardBody",
    "bodyBgVariant=undefined",
    "bodyBorderVariant=undefined",
    "bodyClass="p-3"",
    " ...",
    ">",
    "
",
    " at <BCard",
    "class="depth-1 card-container-properties card-queryfilter-builder queryfilter-row shadow-none mt-3"",
    "body-class="p-3"",
    ">",
    "
",
    " at <FilterBuilderRow",
    "conditionOptions=",
    {
      "Contains": {
        "label": "contains",
        "type": [
          "string",
        ],
        "value": "co",
      },
      "DoesNotContain": {
        "label": "does not contain",
        "type": [
          "string",
        ],
        "value": "!co",
      },
      "DoesNotStartsWith": {
        "label": "does not start with",
        "type": [
          "string",
        ],
        "value": "!sw",
      },
      "Gt": {
        "label": "GT (>)",
        "type": [
          "number",
        ],
        "value": "gt",
      },
      "Gte": {
        "label": "GTE (>=)",
        "type": [
          "number",
        ],
        "value": "ge",
      },
      "Is": {
        "label": "is ",
        "type": [
          "string",
          "number",
          "boolean",
        ],
        "value": "eq",
      },
      "IsNot": {
        "label": "is not",
        "type": [
          "string",
          "number",
        ],
        "value": "!eq",
      },
      "IsNotPresent": {
        "label": "is not present",
        "type": [
          "string",
          "number",
          "boolean",
        ],
        "value": "!pr",
      },
      "IsPresent": {
        "label": "is present",
        "type": [
          "string",
          "number",
          "boolean",
        ],
        "value": "pr",
      },
      "Lt": {
        "label": "LT (<)",
        "type": [
          "number",
        ],
        "value": "lt",
      },
      "Lte": {
        "label": "LTE (<=)",
        "type": [
          "number",
        ],
        "value": "le",
      },
      "StartsWith": {
        "label": "starts with",
        "type": [
          "string",
        ],
        "value": "sw",
      },
    },
    "depth=0",
    "index=0",
    " ...",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation INSTANCE_LISTENERS) (5)",
    "
",
    " at <BButton",
    "class="dropdown-toggle dropdown-toggle-no-caret"",
    "onMousedown=fn<bound onMousedown>",
    "onClick=fn<bound toggle>",
    " ...",
    ">",
    "
",
    " at <BDropdown",
    "class="hover-gray add-button"",
    "no-caret=""",
    "variant="link"",
    " ...",
    ">",
    "
",
    " at <FilterBuilderAddButton",
    "class="add-button"",
    "disabled=false",
    "hide-group=false",
    " ...",
    ">",
    "
",
    " at <BCardBody",
    "bodyBgVariant=undefined",
    "bodyBorderVariant=undefined",
    "bodyClass="p-3"",
    " ...",
    ">",
    "
",
    " at <BCard",
    "class="depth-1 card-container-properties card-queryfilter-builder queryfilter-row shadow-none mt-3"",
    "body-class="p-3"",
    ">",
    "
",
    " at <FilterBuilderRow",
    "conditionOptions=",
    {
      "Contains": {
        "label": "contains",
        "type": [
          "string",
        ],
        "value": "co",
      },
      "DoesNotContain": {
        "label": "does not contain",
        "type": [
          "string",
        ],
        "value": "!co",
      },
      "DoesNotStartsWith": {
        "label": "does not start with",
        "type": [
          "string",
        ],
        "value": "!sw",
      },
      "Gt": {
        "label": "GT (>)",
        "type": [
          "number",
        ],
        "value": "gt",
      },
      "Gte": {
        "label": "GTE (>=)",
        "type": [
          "number",
        ],
        "value": "ge",
      },
      "Is": {
        "label": "is ",
        "type": [
          "string",
          "number",
          "boolean",
        ],
        "value": "eq",
      },
      "IsNot": {
        "label": "is not",
        "type": [
          "string",
          "number",
        ],
        "value": "!eq",
      },
      "IsNotPresent": {
        "label": "is not present",
        "type": [
          "string",
          "number",
          "boolean",
        ],
        "value": "!pr",
      },
      "IsPresent": {
        "label": "is present",
        "type": [
          "string",
          "number",
          "boolean",
        ],
        "value": "pr",
      },
      "Lt": {
        "label": "LT (<)",
        "type": [
          "number",
        ],
        "value": "lt",
      },
      "Lte": {
        "label": "LTE (<=)",
        "type": [
          "number",
        ],
        "value": "le",
      },
      "StartsWith": {
        "label": "starts with",
        "type": [
          "string",
        ],
        "value": "sw",
      },
    },
    "depth=0",
    "index=0",
    " ...",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation RENDER_FUNCTION) (3)",
    "
",
    " at <BDropdownItem",
    "onClick=fn",
    ">",
    "
",
    " at <BDropdown",
    "class="hover-gray add-button"",
    "no-caret=""",
    "variant="link"",
    " ...",
    ">",
    "
",
    " at <FilterBuilderAddButton",
    "class="add-button"",
    "disabled=false",
    "hide-group=false",
    " ...",
    ">",
    "
",
    " at <BCardBody",
    "bodyBgVariant=undefined",
    "bodyBorderVariant=undefined",
    "bodyClass="p-3"",
    " ...",
    ">",
    "
",
    " at <BCard",
    "class="depth-1 card-container-properties card-queryfilter-builder queryfilter-row shadow-none mt-3"",
    "body-class="p-3"",
    ">",
    "
",
    " at <FilterBuilderRow",
    "conditionOptions=",
    {
      "Contains": {
        "label": "contains",
        "type": [
          "string",
        ],
        "value": "co",
      },
      "DoesNotContain": {
        "label": "does not contain",
        "type": [
          "string",
        ],
        "value": "!co",
      },
      "DoesNotStartsWith": {
        "label": "does not start with",
        "type": [
          "string",
        ],
        "value": "!sw",
      },
      "Gt": {
        "label": "GT (>)",
        "type": [
          "number",
        ],
        "value": "gt",
      },
      "Gte": {
        "label": "GTE (>=)",
        "type": [
          "number",
        ],
        "value": "ge",
      },
      "Is": {
        "label": "is ",
        "type": [
          "string",
          "number",
          "boolean",
        ],
        "value": "eq",
      },
      "IsNot": {
        "label": "is not",
        "type": [
          "string",
          "number",
        ],
        "value": "!eq",
      },
      "IsNotPresent": {
        "label": "is not present",
        "type": [
          "string",
          "number",
          "boolean",
        ],
        "value": "!pr",
      },
      "IsPresent": {
        "label": "is present",
        "type": [
          "string",
          "number",
          "boolean",
        ],
        "value": "pr",
      },
      "Lt": {
        "label": "LT (<)",
        "type": [
          "number",
        ],
        "value": "lt",
      },
      "Lte": {
        "label": "LTE (<=)",
        "type": [
          "number",
        ],
        "value": "le",
      },
      "StartsWith": {
        "label": "starts with",
        "type": [
          "string",
        ],
        "value": "sw",
      },
    },
    "depth=0",
    "index=0",
    " ...",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation INSTANCE_SCOPED_SLOTS) (2)",
    "
",
    " at <BDropdownItem",
    "onClick=fn",
    ">",
    "
",
    " at <BDropdown",
    "class="hover-gray add-button"",
    "no-caret=""",
    "variant="link"",
    " ...",
    ">",
    "
",
    " at <FilterBuilderAddButton",
    "class="add-button"",
    "disabled=false",
    "hide-group=false",
    " ...",
    ">",
    "
",
    " at <BCardBody",
    "bodyBgVariant=undefined",
    "bodyBorderVariant=undefined",
    "bodyClass="p-3"",
    " ...",
    ">",
    "
",
    " at <BCard",
    "class="depth-1 card-container-properties card-queryfilter-builder queryfilter-row shadow-none mt-3"",
    "body-class="p-3"",
    ">",
    "
",
    " at <FilterBuilderRow",
    "conditionOptions=",
    {
      "Contains": {
        "label": "contains",
        "type": [
          "string",
        ],
        "value": "co",
      },
      "DoesNotContain": {
        "label": "does not contain",
        "type": [
          "string",
        ],
        "value": "!co",
      },
      "DoesNotStartsWith": {
        "label": "does not start with",
        "type": [
          "string",
        ],
        "value": "!sw",
      },
      "Gt": {
        "label": "GT (>)",
        "type": [
          "number",
        ],
        "value": "gt",
      },
      "Gte": {
        "label": "GTE (>=)",
        "type": [
          "number",
        ],
        "value": "ge",
      },
      "Is": {
        "label": "is ",
        "type": [
          "string",
          "number",
          "boolean",
        ],
        "value": "eq",
      },
      "IsNot": {
        "label": "is not",
        "type": [
          "string",
          "number",
        ],
        "value": "!eq",
      },
      "IsNotPresent": {
        "label": "is not present",
        "type": [
          "string",
          "number",
          "boolean",
        ],
        "value": "!pr",
      },
      "IsPresent": {
        "label": "is present",
        "type": [
          "string",
          "number",
          "boolean",
        ],
        "value": "pr",
      },
      "Lt": {
        "label": "LT (<)",
        "type": [
          "number",
        ],
        "value": "lt",
      },
      "Lte": {
        "label": "LTE (<=)",
        "type": [
          "number",
        ],
        "value": "le",
      },
      "StartsWith": {
        "label": "starts with",
        "type": [
          "string",
        ],
        "value": "sw",
      },
    },
    "depth=0",
    "index=0",
    " ...",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation GLOBAL_EXTEND) (6)",
    "
",
    " at <BDropdownItem",
    "onClick=fn",
    ">",
    "
",
    " at <BDropdown",
    "class="hover-gray add-button"",
    "no-caret=""",
    "variant="link"",
    " ...",
    ">",
    "
",
    " at <FilterBuilderAddButton",
    "class="add-button"",
    "disabled=false",
    "hide-group=false",
    " ...",
    ">",
    "
",
    " at <BCardBody",
    "bodyBgVariant=undefined",
    "bodyBorderVariant=undefined",
    "bodyClass="p-3"",
    " ...",
    ">",
    "
",
    " at <BCard",
    "class="depth-1 card-container-properties card-queryfilter-builder queryfilter-row shadow-none mt-3"",
    "body-class="p-3"",
    ">",
    "
",
    " at <FilterBuilderRow",
    "conditionOptions=",
    {
      "Contains": {
        "label": "contains",
        "type": [
          "string",
        ],
        "value": "co",
      },
      "DoesNotContain": {
        "label": "does not contain",
        "type": [
          "string",
        ],
        "value": "!co",
      },
      "DoesNotStartsWith": {
        "label": "does not start with",
        "type": [
          "string",
        ],
        "value": "!sw",
      },
      "Gt": {
        "label": "GT (>)",
        "type": [
          "number",
        ],
        "value": "gt",
      },
      "Gte": {
        "label": "GTE (>=)",
        "type": [
          "number",
        ],
        "value": "ge",
      },
      "Is": {
        "label": "is ",
        "type": [
          "string",
          "number",
          "boolean",
        ],
        "value": "eq",
      },
      "IsNot": {
        "label": "is not",
        "type": [
          "string",
          "number",
        ],
        "value": "!eq",
      },
      "IsNotPresent": {
        "label": "is not present",
        "type": [
          "string",
          "number",
          "boolean",
        ],
        "value": "!pr",
      },
      "IsPresent": {
        "label": "is present",
        "type": [
          "string",
          "number",
          "boolean",
        ],
        "value": "pr",
      },
      "Lt": {
        "label": "LT (<)",
        "type": [
          "number",
        ],
        "value": "lt",
      },
      "Lte": {
        "label": "LTE (<=)",
        "type": [
          "number",
        ],
        "value": "le",
      },
      "StartsWith": {
        "label": "starts with",
        "type": [
          "string",
        ],
        "value": "sw",
      },
    },
    "depth=0",
    "index=0",
    " ...",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation RENDER_FUNCTION) (4)",
    "
",
    " at <BLink",
    "class="dropdown-item"",
    "onClick=fn<bound onClick>",
    "ref="item"",
    " ...",
    ">",
    "
",
    " at <BDropdownItem",
    "onClick=fn",
    ">",
    "
",
    " at <BDropdown",
    "class="hover-gray add-button"",
    "no-caret=""",
    "variant="link"",
    " ...",
    ">",
    "
",
    " at <FilterBuilderAddButton",
    "class="add-button"",
    "disabled=false",
    "hide-group=false",
    " ...",
    ">",
    "
",
    " at <BCardBody",
    "bodyBgVariant=undefined",
    "bodyBorderVariant=undefined",
    "bodyClass="p-3"",
    " ...",
    ">",
    "
",
    " at <BCard",
    "class="depth-1 card-container-properties card-queryfilter-builder queryfilter-row shadow-none mt-3"",
    "body-class="p-3"",
    ">",
    "
",
    " at <FilterBuilderRow",
    "conditionOptions=",
    {
      "Contains": {
        "label": "contains",
        "type": [
          "string",
        ],
        "value": "co",
      },
      "DoesNotContain": {
        "label": "does not contain",
        "type": [
          "string",
        ],
        "value": "!co",
      },
      "DoesNotStartsWith": {
        "label": "does not start with",
        "type": [
          "string",
        ],
        "value": "!sw",
      },
      "Gt": {
        "label": "GT (>)",
        "type": [
          "number",
        ],
        "value": "gt",
      },
      "Gte": {
        "label": "GTE (>=)",
        "type": [
          "number",
        ],
        "value": "ge",
      },
      "Is": {
        "label": "is ",
        "type": [
          "string",
          "number",
          "boolean",
        ],
        "value": "eq",
      },
      "IsNot": {
        "label": "is not",
        "type": [
          "string",
          "number",
        ],
        "value": "!eq",
      },
      "IsNotPresent": {
        "label": "is not present",
        "type": [
          "string",
          "number",
          "boolean",
        ],
        "value": "!pr",
      },
      "IsPresent": {
        "label": "is present",
        "type": [
          "string",
          "number",
          "boolean",
        ],
        "value": "pr",
      },
      "Lt": {
        "label": "LT (<)",
        "type": [
          "number",
        ],
        "value": "lt",
      },
      "Lte": {
        "label": "LTE (<=)",
        "type": [
          "number",
        ],
        "value": "le",
      },
      "StartsWith": {
        "label": "starts with",
        "type": [
          "string",
        ],
        "value": "sw",
      },
    },
    "depth=0",
    "index=0",
    " ...",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation OPTIONS_DATA_MERGE) Detected conflicting key "bvListeners" when merging data option values. In Vue 3, data keys are merged shallowly and will override one another.
  Details: https://v3-migration.vuejs.org/breaking-changes/data-option.html#mixin-merge-behavior-change",
    "
",
    " at <BLink",
    "class="dropdown-item"",
    "onClick=fn<bound onClick>",
    "ref="item"",
    " ...",
    ">",
    "
",
    " at <BDropdownItem",
    "onClick=fn",
    ">",
    "
",
    " at <BDropdown",
    "class="hover-gray add-button"",
    "no-caret=""",
    "variant="link"",
    " ...",
    ">",
    "
",
    " at <FilterBuilderAddButton",
    "class="add-button"",
    "disabled=false",
    "hide-group=false",
    " ...",
    ">",
    "
",
    " at <BCardBody",
    "bodyBgVariant=undefined",
    "bodyBorderVariant=undefined",
    "bodyClass="p-3"",
    " ...",
    ">",
    "
",
    " at <BCard",
    "class="depth-1 card-container-properties card-queryfilter-builder queryfilter-row shadow-none mt-3"",
    "body-class="p-3"",
    ">",
    "
",
    " at <FilterBuilderRow",
    "conditionOptions=",
    {
      "Contains": {
        "label": "contains",
        "type": [
          "string",
        ],
        "value": "co",
      },
      "DoesNotContain": {
        "label": "does not contain",
        "type": [
          "string",
        ],
        "value": "!co",
      },
      "DoesNotStartsWith": {
        "label": "does not start with",
        "type": [
          "string",
        ],
        "value": "!sw",
      },
      "Gt": {
        "label": "GT (>)",
        "type": [
          "number",
        ],
        "value": "gt",
      },
      "Gte": {
        "label": "GTE (>=)",
        "type": [
          "number",
        ],
        "value": "ge",
      },
      "Is": {
        "label": "is ",
        "type": [
          "string",
          "number",
          "boolean",
        ],
        "value": "eq",
      },
      "IsNot": {
        "label": "is not",
        "type": [
          "string",
          "number",
        ],
        "value": "!eq",
      },
      "IsNotPresent": {
        "label": "is not present",
        "type": [
          "string",
          "number",
          "boolean",
        ],
        "value": "!pr",
      },
      "IsPresent": {
        "label": "is present",
        "type": [
          "string",
          "number",
          "boolean",
        ],
        "value": "pr",
      },
      "Lt": {
        "label": "LT (<)",
        "type": [
          "number",
        ],
        "value": "lt",
      },
      "Lte": {
        "label": "LTE (<=)",
        "type": [
          "number",
        ],
        "value": "le",
      },
      "StartsWith": {
        "label": "starts with",
        "type": [
          "string",
        ],
        "value": "sw",
      },
    },
    "depth=0",
    "index=0",
    " ...",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation INSTANCE_LISTENERS) (6)",
    "
",
    " at <BLink",
    "class="dropdown-item"",
    "onClick=fn<bound onClick>",
    "ref="item"",
    " ...",
    ">",
    "
",
    " at <BDropdownItem",
    "onClick=fn",
    ">",
    "
",
    " at <BDropdown",
    "class="hover-gray add-button"",
    "no-caret=""",
    "variant="link"",
    " ...",
    ">",
    "
",
    " at <FilterBuilderAddButton",
    "class="add-button"",
    "disabled=false",
    "hide-group=false",
    " ...",
    ">",
    "
",
    " at <BCardBody",
    "bodyBgVariant=undefined",
    "bodyBorderVariant=undefined",
    "bodyClass="p-3"",
    " ...",
    ">",
    "
",
    " at <BCard",
    "class="depth-1 card-container-properties card-queryfilter-builder queryfilter-row shadow-none mt-3"",
    "body-class="p-3"",
    ">",
    "
",
    " at <FilterBuilderRow",
    "conditionOptions=",
    {
      "Contains": {
        "label": "contains",
        "type": [
          "string",
        ],
        "value": "co",
      },
      "DoesNotContain": {
        "label": "does not contain",
        "type": [
          "string",
        ],
        "value": "!co",
      },
      "DoesNotStartsWith": {
        "label": "does not start with",
        "type": [
          "string",
        ],
        "value": "!sw",
      },
      "Gt": {
        "label": "GT (>)",
        "type": [
          "number",
        ],
        "value": "gt",
      },
      "Gte": {
        "label": "GTE (>=)",
        "type": [
          "number",
        ],
        "value": "ge",
      },
      "Is": {
        "label": "is ",
        "type": [
          "string",
          "number",
          "boolean",
        ],
        "value": "eq",
      },
      "IsNot": {
        "label": "is not",
        "type": [
          "string",
          "number",
        ],
        "value": "!eq",
      },
      "IsNotPresent": {
        "label": "is not present",
        "type": [
          "string",
          "number",
          "boolean",
        ],
        "value": "!pr",
      },
      "IsPresent": {
        "label": "is present",
        "type": [
          "string",
          "number",
          "boolean",
        ],
        "value": "pr",
      },
      "Lt": {
        "label": "LT (<)",
        "type": [
          "number",
        ],
        "value": "lt",
      },
      "Lte": {
        "label": "LTE (<=)",
        "type": [
          "number",
        ],
        "value": "le",
      },
      "StartsWith": {
        "label": "starts with",
        "type": [
          "string",
        ],
        "value": "sw",
      },
    },
    "depth=0",
    "index=0",
    " ...",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation OPTIONS_BEFORE_DESTROY) (2)",
    "
",
    " at <BLink",
    "class="dropdown-item"",
    "onClick=fn<bound onClick>",
    "ref="item"",
    " ...",
    ">",
    "
",
    " at <BDropdownItem",
    "onClick=fn",
    ">",
    "
",
    " at <BDropdown",
    "class="hover-gray add-button"",
    "no-caret=""",
    "variant="link"",
    " ...",
    ">",
    "
",
    " at <FilterBuilderAddButton",
    "class="add-button"",
    "disabled=false",
    "hide-group=false",
    " ...",
    ">",
    "
",
    " at <BCardBody",
    "bodyBgVariant=undefined",
    "bodyBorderVariant=undefined",
    "bodyClass="p-3"",
    " ...",
    ">",
    "
",
    " at <BCard",
    "class="depth-1 card-container-properties card-queryfilter-builder queryfilter-row shadow-none mt-3"",
    "body-class="p-3"",
    ">",
    "
",
    " at <FilterBuilderRow",
    "conditionOptions=",
    {
      "Contains": {
        "label": "contains",
        "type": [
          "string",
        ],
        "value": "co",
      },
      "DoesNotContain": {
        "label": "does not contain",
        "type": [
          "string",
        ],
        "value": "!co",
      },
      "DoesNotStartsWith": {
        "label": "does not start with",
        "type": [
          "string",
        ],
        "value": "!sw",
      },
      "Gt": {
        "label": "GT (>)",
        "type": [
          "number",
        ],
        "value": "gt",
      },
      "Gte": {
        "label": "GTE (>=)",
        "type": [
          "number",
        ],
        "value": "ge",
      },
      "Is": {
        "label": "is ",
        "type": [
          "string",
          "number",
          "boolean",
        ],
        "value": "eq",
      },
      "IsNot": {
        "label": "is not",
        "type": [
          "string",
          "number",
        ],
        "value": "!eq",
      },
      "IsNotPresent": {
        "label": "is not present",
        "type": [
          "string",
          "number",
          "boolean",
        ],
        "value": "!pr",
      },
      "IsPresent": {
        "label": "is present",
        "type": [
          "string",
          "number",
          "boolean",
        ],
        "value": "pr",
      },
      "Lt": {
        "label": "LT (<)",
        "type": [
          "number",
        ],
        "value": "lt",
      },
      "Lte": {
        "label": "LTE (<=)",
        "type": [
          "number",
        ],
        "value": "le",
      },
      "StartsWith": {
        "label": "starts with",
        "type": [
          "string",
        ],
        "value": "sw",
      },
    },
    "depth=0",
    "index=0",
    " ...",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation INSTANCE_SCOPED_SLOTS) (3)",
    "
",
    " at <BLink",
    "class="dropdown-item"",
    "onClick=fn<bound onClick>",
    "ref="item"",
    " ...",
    ">",
    "
",
    " at <BDropdownItem",
    "onClick=fn",
    ">",
    "
",
    " at <BDropdown",
    "class="hover-gray add-button"",
    "no-caret=""",
    "variant="link"",
    " ...",
    ">",
    "
",
    " at <FilterBuilderAddButton",
    "class="add-button"",
    "disabled=false",
    "hide-group=false",
    " ...",
    ">",
    "
",
    " at <BCardBody",
    "bodyBgVariant=undefined",
    "bodyBorderVariant=undefined",
    "bodyClass="p-3"",
    " ...",
    ">",
    "
",
    " at <BCard",
    "class="depth-1 card-container-properties card-queryfilter-builder queryfilter-row shadow-none mt-3"",
    "body-class="p-3"",
    ">",
    "
",
    " at <FilterBuilderRow",
    "conditionOptions=",
    {
      "Contains": {
        "label": "contains",
        "type": [
          "string",
        ],
        "value": "co",
      },
      "DoesNotContain": {
        "label": "does not contain",
        "type": [
          "string",
        ],
        "value": "!co",
      },
      "DoesNotStartsWith": {
        "label": "does not start with",
        "type": [
          "string",
        ],
        "value": "!sw",
      },
      "Gt": {
        "label": "GT (>)",
        "type": [
          "number",
        ],
        "value": "gt",
      },
      "Gte": {
        "label": "GTE (>=)",
        "type": [
          "number",
        ],
        "value": "ge",
      },
      "Is": {
        "label": "is ",
        "type": [
          "string",
          "number",
          "boolean",
        ],
        "value": "eq",
      },
      "IsNot": {
        "label": "is not",
        "type": [
          "string",
          "number",
        ],
        "value": "!eq",
      },
      "IsNotPresent": {
        "label": "is not present",
        "type": [
          "string",
          "number",
          "boolean",
        ],
        "value": "!pr",
      },
      "IsPresent": {
        "label": "is present",
        "type": [
          "string",
          "number",
          "boolean",
        ],
        "value": "pr",
      },
      "Lt": {
        "label": "LT (<)",
        "type": [
          "number",
        ],
        "value": "lt",
      },
      "Lte": {
        "label": "LTE (<=)",
        "type": [
          "number",
        ],
        "value": "le",
      },
      "StartsWith": {
        "label": "starts with",
        "type": [
          "string",
        ],
        "value": "sw",
      },
    },
    "depth=0",
    "index=0",
    " ...",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation INSTANCE_ATTRS_CLASS_STYLE) Component <BLink> has \`inheritAttrs: false\` but is relying on class/style fallthrough from parent. In Vue 3, class/style are now included in $attrs and will no longer fallthrough when inheritAttrs is false. If you are already using v-bind="$attrs" on component root it should render the same end result. If you are binding $attrs to a non-root element and expecting class/style to fallthrough on root, you will need to now manually bind them on root via :class="$attrs.class".
  Details: https://v3-migration.vuejs.org/breaking-changes/attrs-includes-class-style.html",
    "
",
    " at <BLink",
    "class="dropdown-item"",
    "onClick=fn<bound onClick>",
    "ref="item"",
    " ...",
    ">",
    "
",
    " at <BDropdownItem",
    "onClick=fn",
    ">",
    "
",
    " at <BDropdown",
    "class="hover-gray add-button"",
    "no-caret=""",
    "variant="link"",
    " ...",
    ">",
    "
",
    " at <FilterBuilderAddButton",
    "class="add-button"",
    "disabled=false",
    "hide-group=false",
    " ...",
    ">",
    "
",
    " at <BCardBody",
    "bodyBgVariant=undefined",
    "bodyBorderVariant=undefined",
    "bodyClass="p-3"",
    " ...",
    ">",
    "
",
    " at <BCard",
    "class="depth-1 card-container-properties card-queryfilter-builder queryfilter-row shadow-none mt-3"",
    "body-class="p-3"",
    ">",
    "
",
    " at <FilterBuilderRow",
    "conditionOptions=",
    {
      "Contains": {
        "label": "contains",
        "type": [
          "string",
        ],
        "value": "co",
      },
      "DoesNotContain": {
        "label": "does not contain",
        "type": [
          "string",
        ],
        "value": "!co",
      },
      "DoesNotStartsWith": {
        "label": "does not start with",
        "type": [
          "string",
        ],
        "value": "!sw",
      },
      "Gt": {
        "label": "GT (>)",
        "type": [
          "number",
        ],
        "value": "gt",
      },
      "Gte": {
        "label": "GTE (>=)",
        "type": [
          "number",
        ],
        "value": "ge",
      },
      "Is": {
        "label": "is ",
        "type": [
          "string",
          "number",
          "boolean",
        ],
        "value": "eq",
      },
      "IsNot": {
        "label": "is not",
        "type": [
          "string",
          "number",
        ],
        "value": "!eq",
      },
      "IsNotPresent": {
        "label": "is not present",
        "type": [
          "string",
          "number",
          "boolean",
        ],
        "value": "!pr",
      },
      "IsPresent": {
        "label": "is present",
        "type": [
          "string",
          "number",
          "boolean",
        ],
        "value": "pr",
      },
      "Lt": {
        "label": "LT (<)",
        "type": [
          "number",
        ],
        "value": "lt",
      },
      "Lte": {
        "label": "LTE (<=)",
        "type": [
          "number",
        ],
        "value": "le",
      },
      "StartsWith": {
        "label": "starts with",
        "type": [
          "string",
        ],
        "value": "sw",
      },
    },
    "depth=0",
    "index=0",
    " ...",
    ">",
    "
",
    " at <VTUROOT>",
  ],
]
`;

exports[`FilterBuilderRow should emit the rule-change and then clear the value input through the props: console-warn-snapshot 1`] = `
[
  [
    "[Vue warn]: (deprecation INSTANCE_SET) vm.$set() has been removed as it is no longer needed in Vue 3. Simply use native JavaScript mutations.",
    "
",
    " at <FilterBuilderRow",
    "conditionOptions=",
    {
      "Contains": {
        "label": "contains",
        "type": [
          "string",
        ],
        "value": "co",
      },
      "DoesNotContain": {
        "label": "does not contain",
        "type": [
          "string",
        ],
        "value": "!co",
      },
      "DoesNotStartsWith": {
        "label": "does not start with",
        "type": [
          "string",
        ],
        "value": "!sw",
      },
      "Gt": {
        "label": "GT (>)",
        "type": [
          "number",
        ],
        "value": "gt",
      },
      "Gte": {
        "label": "GTE (>=)",
        "type": [
          "number",
        ],
        "value": "ge",
      },
      "Is": {
        "label": "is ",
        "type": [
          "string",
          "number",
          "boolean",
        ],
        "value": "eq",
      },
      "IsNot": {
        "label": "is not",
        "type": [
          "string",
          "number",
        ],
        "value": "!eq",
      },
      "IsNotPresent": {
        "label": "is not present",
        "type": [
          "string",
          "number",
          "boolean",
        ],
        "value": "!pr",
      },
      "IsPresent": {
        "label": "is present",
        "type": [
          "string",
          "number",
          "boolean",
        ],
        "value": "pr",
      },
      "Lt": {
        "label": "LT (<)",
        "type": [
          "number",
        ],
        "value": "lt",
      },
      "Lte": {
        "label": "LTE (<=)",
        "type": [
          "number",
        ],
        "value": "le",
      },
      "StartsWith": {
        "label": "starts with",
        "type": [
          "string",
        ],
        "value": "sw",
      },
    },
    "depth=0",
    "index=0",
    " ...",
    ">",
    "
",
    " at <VTUROOT>",
  ],
]
`;
