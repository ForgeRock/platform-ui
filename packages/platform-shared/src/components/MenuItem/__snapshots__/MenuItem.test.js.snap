// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`MenuItem Component determining whether the item is expanded Will not set its state to be expanded if the current route name does not match that of one of its sub items: console-warn-snapshot 1`] = `
[
  [
    "[Vue warn]: (deprecation ATTR_FALSE_VALUE) Attribute "aria-expanded" with v-bind value \`false\` will render aria-expanded="false" instead of removing it in Vue 3. To remove the attribute, use \`null\` or \`undefined\` instead. If the usage is intended, you can disable the compat behavior and suppress this warning with:

  configureCompat({ ATTR_FALSE_VALUE: false })

  Details: https://v3-migration.vuejs.org/breaking-changes/attribute-coercion.html",
    "
",
    " at <BButton",
    "onClick=fn",
    "class="dropdown-toggle d-flex align-items-center rounded-0"",
    "aria-expanded=false",
    " ...",
    ">",
    "
",
    " at <MenuItem",
    "displayName="bob"",
    "subItems=",
    [
      {
        "displayName": "lilBob",
        "routeTo": {
          "name": "little-bob",
        },
      },
    ],
    "ref="VTU_COMPONENT"",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation ATTR_FALSE_VALUE) Attribute "visible" with v-bind value \`false\` will render visible="false" instead of removing it in Vue 3. To remove the attribute, use \`null\` or \`undefined\` instead. If the usage is intended, you can disable the compat behavior and suppress this warning with:

  configureCompat({ ATTR_FALSE_VALUE: false })

  Details: https://v3-migration.vuejs.org/breaking-changes/attribute-coercion.html",
    "
",
    " at <BCollapse",
    "id="collapse-bob"",
    "class="fr-menu-item-submenuitems"",
    "tag="ul"",
    " ...",
    ">",
    "
",
    " at <MenuItem",
    "displayName="bob"",
    "subItems=",
    [
      {
        "displayName": "lilBob",
        "routeTo": {
          "name": "little-bob",
        },
      },
    ],
    "ref="VTU_COMPONENT"",
    ">",
    "
",
    " at <VTUROOT>",
  ],
]
`;

exports[`MenuItem Component determining whether the item is expanded Will set its state to be expanded if the current route name matches that of one of its sub items: console-warn-snapshot 1`] = `
[
  [
    "[Vue warn]: (deprecation GLOBAL_EXTEND) (2)",
    "
",
    " at <MenuItem",
    "displayName="bob"",
    "subItems=",
    [
      {
        "displayName": "lilBob",
        "routeTo": {
          "name": "little-bob",
        },
      },
      {
        "displayName": "lilBob2",
        "routeTo": {
          "name": "little-bob-2",
        },
      },
    ],
    "ref="VTU_COMPONENT"",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation COMPONENT_V_MODEL) v-model usage on component has changed in Vue 3. Component that expects to work with v-model should now use the "modelValue" prop and emit the "update:modelValue" event. You can update the usage and then opt-in to Vue 3 behavior on a per-component basis with \`compatConfig: { COMPONENT_V_MODEL: false }\`.
  Details: https://v3-migration.vuejs.org/breaking-changes/v-model.html",
    "
",
    " at <BCollapse",
    "id="collapse-bob"",
    "class="fr-menu-item-submenuitems"",
    "tag="ul"",
    " ...",
    ">",
  ],
  [
    "[Vue warn]: (deprecation ATTR_FALSE_VALUE) Attribute "active" with v-bind value \`false\` will render active="false" instead of removing it in Vue 3. To remove the attribute, use \`null\` or \`undefined\` instead. If the usage is intended, you can disable the compat behavior and suppress this warning with:

  configureCompat({ ATTR_FALSE_VALUE: false })

  Details: https://v3-migration.vuejs.org/breaking-changes/attribute-coercion.html",
    "
",
    " at <BButton",
    "onClick=fn",
    "class="dropdown-toggle d-flex align-items-center rounded-0"",
    "aria-expanded=true",
    " ...",
    ">",
    "
",
    " at <MenuItem",
    "displayName="bob"",
    "subItems=",
    [
      {
        "displayName": "lilBob",
        "routeTo": {
          "name": "little-bob",
        },
      },
      {
        "displayName": "lilBob2",
        "routeTo": {
          "name": "little-bob-2",
        },
      },
    ],
    "ref="VTU_COMPONENT"",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation ATTR_FALSE_VALUE) Attribute "block" with v-bind value \`false\` will render block="false" instead of removing it in Vue 3. To remove the attribute, use \`null\` or \`undefined\` instead. If the usage is intended, you can disable the compat behavior and suppress this warning with:

  configureCompat({ ATTR_FALSE_VALUE: false })

  Details: https://v3-migration.vuejs.org/breaking-changes/attribute-coercion.html",
    "
",
    " at <BButton",
    "onClick=fn",
    "class="dropdown-toggle d-flex align-items-center rounded-0"",
    "aria-expanded=true",
    " ...",
    ">",
    "
",
    " at <MenuItem",
    "displayName="bob"",
    "subItems=",
    [
      {
        "displayName": "lilBob",
        "routeTo": {
          "name": "little-bob",
        },
      },
      {
        "displayName": "lilBob2",
        "routeTo": {
          "name": "little-bob-2",
        },
      },
    ],
    "ref="VTU_COMPONENT"",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation ATTR_FALSE_VALUE) Attribute "disabled" with v-bind value \`false\` will render disabled="false" instead of removing it in Vue 3. To remove the attribute, use \`null\` or \`undefined\` instead. If the usage is intended, you can disable the compat behavior and suppress this warning with:

  configureCompat({ ATTR_FALSE_VALUE: false })

  Details: https://v3-migration.vuejs.org/breaking-changes/attribute-coercion.html",
    "
",
    " at <BButton",
    "onClick=fn",
    "class="dropdown-toggle d-flex align-items-center rounded-0"",
    "aria-expanded=true",
    " ...",
    ">",
    "
",
    " at <MenuItem",
    "displayName="bob"",
    "subItems=",
    [
      {
        "displayName": "lilBob",
        "routeTo": {
          "name": "little-bob",
        },
      },
      {
        "displayName": "lilBob2",
        "routeTo": {
          "name": "little-bob-2",
        },
      },
    ],
    "ref="VTU_COMPONENT"",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation ATTR_FALSE_VALUE) Attribute "exact" with v-bind value \`false\` will render exact="false" instead of removing it in Vue 3. To remove the attribute, use \`null\` or \`undefined\` instead. If the usage is intended, you can disable the compat behavior and suppress this warning with:

  configureCompat({ ATTR_FALSE_VALUE: false })

  Details: https://v3-migration.vuejs.org/breaking-changes/attribute-coercion.html",
    "
",
    " at <BButton",
    "onClick=fn",
    "class="dropdown-toggle d-flex align-items-center rounded-0"",
    "aria-expanded=true",
    " ...",
    ">",
    "
",
    " at <MenuItem",
    "displayName="bob"",
    "subItems=",
    [
      {
        "displayName": "lilBob",
        "routeTo": {
          "name": "little-bob",
        },
      },
      {
        "displayName": "lilBob2",
        "routeTo": {
          "name": "little-bob-2",
        },
      },
    ],
    "ref="VTU_COMPONENT"",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation ATTR_FALSE_VALUE) Attribute "exactPath" with v-bind value \`false\` will render exactPath="false" instead of removing it in Vue 3. To remove the attribute, use \`null\` or \`undefined\` instead. If the usage is intended, you can disable the compat behavior and suppress this warning with:

  configureCompat({ ATTR_FALSE_VALUE: false })

  Details: https://v3-migration.vuejs.org/breaking-changes/attribute-coercion.html",
    "
",
    " at <BButton",
    "onClick=fn",
    "class="dropdown-toggle d-flex align-items-center rounded-0"",
    "aria-expanded=true",
    " ...",
    ">",
    "
",
    " at <MenuItem",
    "displayName="bob"",
    "subItems=",
    [
      {
        "displayName": "lilBob",
        "routeTo": {
          "name": "little-bob",
        },
      },
      {
        "displayName": "lilBob2",
        "routeTo": {
          "name": "little-bob-2",
        },
      },
    ],
    "ref="VTU_COMPONENT"",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation ATTR_FALSE_VALUE) Attribute "noPrefetch" with v-bind value \`false\` will render noPrefetch="false" instead of removing it in Vue 3. To remove the attribute, use \`null\` or \`undefined\` instead. If the usage is intended, you can disable the compat behavior and suppress this warning with:

  configureCompat({ ATTR_FALSE_VALUE: false })

  Details: https://v3-migration.vuejs.org/breaking-changes/attribute-coercion.html",
    "
",
    " at <BButton",
    "onClick=fn",
    "class="dropdown-toggle d-flex align-items-center rounded-0"",
    "aria-expanded=true",
    " ...",
    ">",
    "
",
    " at <MenuItem",
    "displayName="bob"",
    "subItems=",
    [
      {
        "displayName": "lilBob",
        "routeTo": {
          "name": "little-bob",
        },
      },
      {
        "displayName": "lilBob2",
        "routeTo": {
          "name": "little-bob-2",
        },
      },
    ],
    "ref="VTU_COMPONENT"",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation ATTR_FALSE_VALUE) Attribute "pill" with v-bind value \`false\` will render pill="false" instead of removing it in Vue 3. To remove the attribute, use \`null\` or \`undefined\` instead. If the usage is intended, you can disable the compat behavior and suppress this warning with:

  configureCompat({ ATTR_FALSE_VALUE: false })

  Details: https://v3-migration.vuejs.org/breaking-changes/attribute-coercion.html",
    "
",
    " at <BButton",
    "onClick=fn",
    "class="dropdown-toggle d-flex align-items-center rounded-0"",
    "aria-expanded=true",
    " ...",
    ">",
    "
",
    " at <MenuItem",
    "displayName="bob"",
    "subItems=",
    [
      {
        "displayName": "lilBob",
        "routeTo": {
          "name": "little-bob",
        },
      },
      {
        "displayName": "lilBob2",
        "routeTo": {
          "name": "little-bob-2",
        },
      },
    ],
    "ref="VTU_COMPONENT"",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation ATTR_FALSE_VALUE) Attribute "replace" with v-bind value \`false\` will render replace="false" instead of removing it in Vue 3. To remove the attribute, use \`null\` or \`undefined\` instead. If the usage is intended, you can disable the compat behavior and suppress this warning with:

  configureCompat({ ATTR_FALSE_VALUE: false })

  Details: https://v3-migration.vuejs.org/breaking-changes/attribute-coercion.html",
    "
",
    " at <BButton",
    "onClick=fn",
    "class="dropdown-toggle d-flex align-items-center rounded-0"",
    "aria-expanded=true",
    " ...",
    ">",
    "
",
    " at <MenuItem",
    "displayName="bob"",
    "subItems=",
    [
      {
        "displayName": "lilBob",
        "routeTo": {
          "name": "little-bob",
        },
      },
      {
        "displayName": "lilBob2",
        "routeTo": {
          "name": "little-bob-2",
        },
      },
    ],
    "ref="VTU_COMPONENT"",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation ATTR_FALSE_VALUE) Attribute "squared" with v-bind value \`false\` will render squared="false" instead of removing it in Vue 3. To remove the attribute, use \`null\` or \`undefined\` instead. If the usage is intended, you can disable the compat behavior and suppress this warning with:

  configureCompat({ ATTR_FALSE_VALUE: false })

  Details: https://v3-migration.vuejs.org/breaking-changes/attribute-coercion.html",
    "
",
    " at <BButton",
    "onClick=fn",
    "class="dropdown-toggle d-flex align-items-center rounded-0"",
    "aria-expanded=true",
    " ...",
    ">",
    "
",
    " at <MenuItem",
    "displayName="bob"",
    "subItems=",
    [
      {
        "displayName": "lilBob",
        "routeTo": {
          "name": "little-bob",
        },
      },
      {
        "displayName": "lilBob2",
        "routeTo": {
          "name": "little-bob-2",
        },
      },
    ],
    "ref="VTU_COMPONENT"",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation ATTR_FALSE_VALUE) Attribute "appear" with v-bind value \`false\` will render appear="false" instead of removing it in Vue 3. To remove the attribute, use \`null\` or \`undefined\` instead. If the usage is intended, you can disable the compat behavior and suppress this warning with:

  configureCompat({ ATTR_FALSE_VALUE: false })

  Details: https://v3-migration.vuejs.org/breaking-changes/attribute-coercion.html",
    "
",
    " at <BCollapse",
    "id="collapse-bob"",
    "class="fr-menu-item-submenuitems"",
    "tag="ul"",
    " ...",
    ">",
    "
",
    " at <MenuItem",
    "displayName="bob"",
    "subItems=",
    [
      {
        "displayName": "lilBob",
        "routeTo": {
          "name": "little-bob",
        },
      },
      {
        "displayName": "lilBob2",
        "routeTo": {
          "name": "little-bob-2",
        },
      },
    ],
    "ref="VTU_COMPONENT"",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation ATTR_FALSE_VALUE) Attribute "isNav" with v-bind value \`false\` will render isNav="false" instead of removing it in Vue 3. To remove the attribute, use \`null\` or \`undefined\` instead. If the usage is intended, you can disable the compat behavior and suppress this warning with:

  configureCompat({ ATTR_FALSE_VALUE: false })

  Details: https://v3-migration.vuejs.org/breaking-changes/attribute-coercion.html",
    "
",
    " at <BCollapse",
    "id="collapse-bob"",
    "class="fr-menu-item-submenuitems"",
    "tag="ul"",
    " ...",
    ">",
    "
",
    " at <MenuItem",
    "displayName="bob"",
    "subItems=",
    [
      {
        "displayName": "lilBob",
        "routeTo": {
          "name": "little-bob",
        },
      },
      {
        "displayName": "lilBob2",
        "routeTo": {
          "name": "little-bob-2",
        },
      },
    ],
    "ref="VTU_COMPONENT"",
    ">",
    "
",
    " at <VTUROOT>",
  ],
]
`;

exports[`MenuItem Component showing items based on roles Determines not to show an item for a user with insufficient roles: console-warn-snapshot 1`] = `
[
  [
    "[Vue warn]: (deprecation RENDER_FUNCTION) Vue 3's render function API has changed. You can opt-in to the new API with:

  configureCompat({ RENDER_FUNCTION: false })

  (This can also be done per-component via the "compatConfig" option.)
  Details: https://v3-migration.vuejs.org/breaking-changes/render-function-api.html",
    "
",
    " at <VTUROOT>",
  ],
]
`;
