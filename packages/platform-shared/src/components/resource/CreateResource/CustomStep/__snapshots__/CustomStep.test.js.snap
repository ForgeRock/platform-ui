// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CustomStep.vue handles changes to query filter: console-warn-snapshot 1`] = `
[
  [
    "[Vue warn]: (deprecation RENDER_FUNCTION) Vue 3's render function API has changed. You can opt-in to the new API with:

  configureCompat({ RENDER_FUNCTION: false })

  (This can also be done per-component via the "compatConfig" option.)
  Details: https://v3-migration.vuejs.org/breaking-changes/render-function-api.html",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation WATCH_ARRAY) (2)",
    "
",
    " at <CustomStep",
    "property=",
    {
      "default": "testDefault",
      "field": "password",
      "isConditional": true,
      "isTemporalConstraint": false,
      "key": "privileges",
      "type": "string",
      "value": "privilegesValue",
    },
    "resourceName="testName"",
    "ref="VTU_COMPONENT"",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation ATTR_FALSE_VALUE) Attribute "canEnterPlaceholders" with v-bind value \`false\` will render canEnterPlaceholders="false" instead of removing it in Vue 3. To remove the attribute, use \`null\` or \`undefined\` instead. If the usage is intended, you can disable the compat behavior and suppress this warning with:

  configureCompat({ ATTR_FALSE_VALUE: false })

  Details: https://v3-migration.vuejs.org/breaking-changes/attribute-coercion.html",
    "
",
    " at <FrField",
    "value=false",
    "type="boolean"",
    "label=undefined",
    " ...",
    ">",
    "
",
    " at <CustomStep",
    "property=",
    {
      "default": "testDefault",
      "field": "password",
      "isConditional": true,
      "isTemporalConstraint": false,
      "key": "privileges",
      "type": "string",
      "value": "privilegesValue",
    },
    "resourceName="testName"",
    "ref="VTU_COMPONENT"",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation ATTR_FALSE_VALUE) Attribute "value" with v-bind value \`false\` will render value="false" instead of removing it in Vue 3. To remove the attribute, use \`null\` or \`undefined\` instead. If the usage is intended, you can disable the compat behavior and suppress this warning with:

  configureCompat({ ATTR_FALSE_VALUE: false })

  Details: https://v3-migration.vuejs.org/breaking-changes/attribute-coercion.html",
    "
",
    " at <FrField",
    "value=false",
    "type="boolean"",
    "label=undefined",
    " ...",
    ">",
    "
",
    " at <CustomStep",
    "property=",
    {
      "default": "testDefault",
      "field": "password",
      "isConditional": true,
      "isTemporalConstraint": false,
      "key": "privileges",
      "type": "string",
      "value": "privilegesValue",
    },
    "resourceName="testName"",
    "ref="VTU_COMPONENT"",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation ATTR_FALSE_VALUE) Attribute "disabled" with v-bind value \`false\` will render disabled="false" instead of removing it in Vue 3. To remove the attribute, use \`null\` or \`undefined\` instead. If the usage is intended, you can disable the compat behavior and suppress this warning with:

  configureCompat({ ATTR_FALSE_VALUE: false })

  Details: https://v3-migration.vuejs.org/breaking-changes/attribute-coercion.html",
    "
",
    " at <FrQueryFilterBuilder",
    "key=0",
    "onChange=fn<bound queryFilterChange>",
    "query-filter-string=""",
    " ...",
    ">",
    "
",
    " at <CustomStep",
    "property=",
    {
      "default": "testDefault",
      "field": "password",
      "isConditional": true,
      "isTemporalConstraint": false,
      "key": "privileges",
      "type": "string",
      "value": "privilegesValue",
    },
    "resourceName="testName"",
    "ref="VTU_COMPONENT"",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation ATTR_FALSE_VALUE) Attribute "hideAdvanced" with v-bind value \`false\` will render hideAdvanced="false" instead of removing it in Vue 3. To remove the attribute, use \`null\` or \`undefined\` instead. If the usage is intended, you can disable the compat behavior and suppress this warning with:

  configureCompat({ ATTR_FALSE_VALUE: false })

  Details: https://v3-migration.vuejs.org/breaking-changes/attribute-coercion.html",
    "
",
    " at <FrQueryFilterBuilder",
    "key=0",
    "onChange=fn<bound queryFilterChange>",
    "query-filter-string=""",
    " ...",
    ">",
    "
",
    " at <CustomStep",
    "property=",
    {
      "default": "testDefault",
      "field": "password",
      "isConditional": true,
      "isTemporalConstraint": false,
      "key": "privileges",
      "type": "string",
      "value": "privilegesValue",
    },
    "resourceName="testName"",
    "ref="VTU_COMPONENT"",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation ATTR_FALSE_VALUE) Attribute "hideGroup" with v-bind value \`false\` will render hideGroup="false" instead of removing it in Vue 3. To remove the attribute, use \`null\` or \`undefined\` instead. If the usage is intended, you can disable the compat behavior and suppress this warning with:

  configureCompat({ ATTR_FALSE_VALUE: false })

  Details: https://v3-migration.vuejs.org/breaking-changes/attribute-coercion.html",
    "
",
    " at <FrQueryFilterBuilder",
    "key=0",
    "onChange=fn<bound queryFilterChange>",
    "query-filter-string=""",
    " ...",
    ">",
    "
",
    " at <CustomStep",
    "property=",
    {
      "default": "testDefault",
      "field": "password",
      "isConditional": true,
      "isTemporalConstraint": false,
      "key": "privileges",
      "type": "string",
      "value": "privilegesValue",
    },
    "resourceName="testName"",
    "ref="VTU_COMPONENT"",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation ATTR_FALSE_VALUE) Attribute "loading" with v-bind value \`false\` will render loading="false" instead of removing it in Vue 3. To remove the attribute, use \`null\` or \`undefined\` instead. If the usage is intended, you can disable the compat behavior and suppress this warning with:

  configureCompat({ ATTR_FALSE_VALUE: false })

  Details: https://v3-migration.vuejs.org/breaking-changes/attribute-coercion.html",
    "
",
    " at <FrAddPrivileges",
    "key=2",
    "privileges-field=",
    {
      "default": "testDefault",
      "field": "password",
      "isConditional": true,
      "isTemporalConstraint": false,
      "key": "privileges",
      "type": "string",
      "value": "privilegesValue",
    },
    "schema-map=",
    {
      "testId": {
        "_id": "testId",
        "properties": {
          "test": "testProperties",
        },
        "resourceCollection": "test",
      },
      "undefined": {
        "order": [
          "test",
          "test2",
        ],
        "properties": {
          "test": {
            "order": [
              "innerTest",
            ],
            "propName": "testPropName",
            "properties": {
              "innerTest": "innerPropTest",
            },
            "title": "testTitle",
            "type": "object",
            "value": "test",
            "viewable": true,
          },
          "test2": {
            "propName": "test2PropName",
            "title": "test2Title",
            "type": "string",
            "value": "test2",
            "viewable": true,
          },
        },
        "result": [
          {
            "_id": "testId",
            "properties": {
              "test": "testProperties",
            },
            "resourceCollection": "test",
          },
        ],
      },
    },
    " ...",
    ">",
    "
",
    " at <CustomStep",
    "property=",
    {
      "default": "testDefault",
      "field": "password",
      "isConditional": true,
      "isTemporalConstraint": false,
      "key": "privileges",
      "type": "string",
      "value": "privilegesValue",
    },
    "resourceName="testName"",
    "ref="VTU_COMPONENT"",
    ">",
    "
",
    " at <VTUROOT>",
  ],
]
`;
