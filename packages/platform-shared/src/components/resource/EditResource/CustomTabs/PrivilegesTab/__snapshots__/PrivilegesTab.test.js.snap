// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PrivilegesTab saves privilege: console-warn-snapshot 1`] = `
[
  [
    "[Vue warn]: (deprecation ATTR_FALSE_VALUE) Attribute "bordered" with v-bind value \`false\` will render bordered="false" instead of removing it in Vue 3. To remove the attribute, use \`null\` or \`undefined\` instead. If the usage is intended, you can disable the compat behavior and suppress this warning with:

  configureCompat({ ATTR_FALSE_VALUE: false })

  Details: https://v3-migration.vuejs.org/breaking-changes/attribute-coercion.html",
    "
",
    " at <BTable",
    "key=0",
    "ref="privilegesGrid"",
    "class="mb-0 border-top"",
    " ...",
    ">",
    "
",
    " at <BTab",
    "title=undefined",
    ">",
    "
",
    " at <PrivilegesTab",
    "privilegesField=",
    {
      "value": [
        {
          "filter": "",
          "name": "testValue",
        },
      ],
    },
    "resourceName="resourceName"",
    "ref="VTU_COMPONENT"",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation ATTR_FALSE_VALUE) Attribute "borderless" with v-bind value \`false\` will render borderless="false" instead of removing it in Vue 3. To remove the attribute, use \`null\` or \`undefined\` instead. If the usage is intended, you can disable the compat behavior and suppress this warning with:

  configureCompat({ ATTR_FALSE_VALUE: false })

  Details: https://v3-migration.vuejs.org/breaking-changes/attribute-coercion.html",
    "
",
    " at <BTable",
    "key=0",
    "ref="privilegesGrid"",
    "class="mb-0 border-top"",
    " ...",
    ">",
    "
",
    " at <BTab",
    "title=undefined",
    ">",
    "
",
    " at <PrivilegesTab",
    "privilegesField=",
    {
      "value": [
        {
          "filter": "",
          "name": "testValue",
        },
      ],
    },
    "resourceName="resourceName"",
    "ref="VTU_COMPONENT"",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation ATTR_FALSE_VALUE) Attribute "captionTop" with v-bind value \`false\` will render captionTop="false" instead of removing it in Vue 3. To remove the attribute, use \`null\` or \`undefined\` instead. If the usage is intended, you can disable the compat behavior and suppress this warning with:

  configureCompat({ ATTR_FALSE_VALUE: false })

  Details: https://v3-migration.vuejs.org/breaking-changes/attribute-coercion.html",
    "
",
    " at <BTable",
    "key=0",
    "ref="privilegesGrid"",
    "class="mb-0 border-top"",
    " ...",
    ">",
    "
",
    " at <BTab",
    "title=undefined",
    ">",
    "
",
    " at <PrivilegesTab",
    "privilegesField=",
    {
      "value": [
        {
          "filter": "",
          "name": "testValue",
        },
      ],
    },
    "resourceName="resourceName"",
    "ref="VTU_COMPONENT"",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation ATTR_FALSE_VALUE) Attribute "dark" with v-bind value \`false\` will render dark="false" instead of removing it in Vue 3. To remove the attribute, use \`null\` or \`undefined\` instead. If the usage is intended, you can disable the compat behavior and suppress this warning with:

  configureCompat({ ATTR_FALSE_VALUE: false })

  Details: https://v3-migration.vuejs.org/breaking-changes/attribute-coercion.html",
    "
",
    " at <BTable",
    "key=0",
    "ref="privilegesGrid"",
    "class="mb-0 border-top"",
    " ...",
    ">",
    "
",
    " at <BTab",
    "title=undefined",
    ">",
    "
",
    " at <PrivilegesTab",
    "privilegesField=",
    {
      "value": [
        {
          "filter": "",
          "name": "testValue",
        },
      ],
    },
    "resourceName="resourceName"",
    "ref="VTU_COMPONENT"",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation ATTR_FALSE_VALUE) Attribute "fixed" with v-bind value \`false\` will render fixed="false" instead of removing it in Vue 3. To remove the attribute, use \`null\` or \`undefined\` instead. If the usage is intended, you can disable the compat behavior and suppress this warning with:

  configureCompat({ ATTR_FALSE_VALUE: false })

  Details: https://v3-migration.vuejs.org/breaking-changes/attribute-coercion.html",
    "
",
    " at <BTable",
    "key=0",
    "ref="privilegesGrid"",
    "class="mb-0 border-top"",
    " ...",
    ">",
    "
",
    " at <BTab",
    "title=undefined",
    ">",
    "
",
    " at <PrivilegesTab",
    "privilegesField=",
    {
      "value": [
        {
          "filter": "",
          "name": "testValue",
        },
      ],
    },
    "resourceName="resourceName"",
    "ref="VTU_COMPONENT"",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation ATTR_FALSE_VALUE) Attribute "hover" with v-bind value \`false\` will render hover="false" instead of removing it in Vue 3. To remove the attribute, use \`null\` or \`undefined\` instead. If the usage is intended, you can disable the compat behavior and suppress this warning with:

  configureCompat({ ATTR_FALSE_VALUE: false })

  Details: https://v3-migration.vuejs.org/breaking-changes/attribute-coercion.html",
    "
",
    " at <BTable",
    "key=0",
    "ref="privilegesGrid"",
    "class="mb-0 border-top"",
    " ...",
    ">",
    "
",
    " at <BTab",
    "title=undefined",
    ">",
    "
",
    " at <PrivilegesTab",
    "privilegesField=",
    {
      "value": [
        {
          "filter": "",
          "name": "testValue",
        },
      ],
    },
    "resourceName="resourceName"",
    "ref="VTU_COMPONENT"",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation ATTR_FALSE_VALUE) Attribute "noBorderCollapse" with v-bind value \`false\` will render noBorderCollapse="false" instead of removing it in Vue 3. To remove the attribute, use \`null\` or \`undefined\` instead. If the usage is intended, you can disable the compat behavior and suppress this warning with:

  configureCompat({ ATTR_FALSE_VALUE: false })

  Details: https://v3-migration.vuejs.org/breaking-changes/attribute-coercion.html",
    "
",
    " at <BTable",
    "key=0",
    "ref="privilegesGrid"",
    "class="mb-0 border-top"",
    " ...",
    ">",
    "
",
    " at <BTab",
    "title=undefined",
    ">",
    "
",
    " at <PrivilegesTab",
    "privilegesField=",
    {
      "value": [
        {
          "filter": "",
          "name": "testValue",
        },
      ],
    },
    "resourceName="resourceName"",
    "ref="VTU_COMPONENT"",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation ATTR_FALSE_VALUE) (2)",
    "
",
    " at <BTable",
    "key=0",
    "ref="privilegesGrid"",
    "class="mb-0 border-top"",
    " ...",
    ">",
    "
",
    " at <BTab",
    "title=undefined",
    ">",
    "
",
    " at <PrivilegesTab",
    "privilegesField=",
    {
      "value": [
        {
          "filter": "",
          "name": "testValue",
        },
      ],
    },
    "resourceName="resourceName"",
    "ref="VTU_COMPONENT"",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation ATTR_FALSE_VALUE) Attribute "responsive" with v-bind value \`false\` will render responsive="false" instead of removing it in Vue 3. To remove the attribute, use \`null\` or \`undefined\` instead. If the usage is intended, you can disable the compat behavior and suppress this warning with:

  configureCompat({ ATTR_FALSE_VALUE: false })

  Details: https://v3-migration.vuejs.org/breaking-changes/attribute-coercion.html",
    "
",
    " at <BTable",
    "key=0",
    "ref="privilegesGrid"",
    "class="mb-0 border-top"",
    " ...",
    ">",
    "
",
    " at <BTab",
    "title=undefined",
    ">",
    "
",
    " at <PrivilegesTab",
    "privilegesField=",
    {
      "value": [
        {
          "filter": "",
          "name": "testValue",
        },
      ],
    },
    "resourceName="resourceName"",
    "ref="VTU_COMPONENT"",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation ATTR_FALSE_VALUE) Attribute "small" with v-bind value \`false\` will render small="false" instead of removing it in Vue 3. To remove the attribute, use \`null\` or \`undefined\` instead. If the usage is intended, you can disable the compat behavior and suppress this warning with:

  configureCompat({ ATTR_FALSE_VALUE: false })

  Details: https://v3-migration.vuejs.org/breaking-changes/attribute-coercion.html",
    "
",
    " at <BTable",
    "key=0",
    "ref="privilegesGrid"",
    "class="mb-0 border-top"",
    " ...",
    ">",
    "
",
    " at <BTab",
    "title=undefined",
    ">",
    "
",
    " at <PrivilegesTab",
    "privilegesField=",
    {
      "value": [
        {
          "filter": "",
          "name": "testValue",
        },
      ],
    },
    "resourceName="resourceName"",
    "ref="VTU_COMPONENT"",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation ATTR_FALSE_VALUE) Attribute "stickyHeader" with v-bind value \`false\` will render stickyHeader="false" instead of removing it in Vue 3. To remove the attribute, use \`null\` or \`undefined\` instead. If the usage is intended, you can disable the compat behavior and suppress this warning with:

  configureCompat({ ATTR_FALSE_VALUE: false })

  Details: https://v3-migration.vuejs.org/breaking-changes/attribute-coercion.html",
    "
",
    " at <BTable",
    "key=0",
    "ref="privilegesGrid"",
    "class="mb-0 border-top"",
    " ...",
    ">",
    "
",
    " at <BTab",
    "title=undefined",
    ">",
    "
",
    " at <PrivilegesTab",
    "privilegesField=",
    {
      "value": [
        {
          "filter": "",
          "name": "testValue",
        },
      ],
    },
    "resourceName="resourceName"",
    "ref="VTU_COMPONENT"",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation ATTR_FALSE_VALUE) Attribute "striped" with v-bind value \`false\` will render striped="false" instead of removing it in Vue 3. To remove the attribute, use \`null\` or \`undefined\` instead. If the usage is intended, you can disable the compat behavior and suppress this warning with:

  configureCompat({ ATTR_FALSE_VALUE: false })

  Details: https://v3-migration.vuejs.org/breaking-changes/attribute-coercion.html",
    "
",
    " at <BTable",
    "key=0",
    "ref="privilegesGrid"",
    "class="mb-0 border-top"",
    " ...",
    ">",
    "
",
    " at <BTab",
    "title=undefined",
    ">",
    "
",
    " at <PrivilegesTab",
    "privilegesField=",
    {
      "value": [
        {
          "filter": "",
          "name": "testValue",
        },
      ],
    },
    "resourceName="resourceName"",
    "ref="VTU_COMPONENT"",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation ATTR_FALSE_VALUE) Attribute "stacked" with v-bind value \`false\` will render stacked="false" instead of removing it in Vue 3. To remove the attribute, use \`null\` or \`undefined\` instead. If the usage is intended, you can disable the compat behavior and suppress this warning with:

  configureCompat({ ATTR_FALSE_VALUE: false })

  Details: https://v3-migration.vuejs.org/breaking-changes/attribute-coercion.html",
    "
",
    " at <BTable",
    "key=0",
    "ref="privilegesGrid"",
    "class="mb-0 border-top"",
    " ...",
    ">",
    "
",
    " at <BTab",
    "title=undefined",
    ">",
    "
",
    " at <PrivilegesTab",
    "privilegesField=",
    {
      "value": [
        {
          "filter": "",
          "name": "testValue",
        },
      ],
    },
    "resourceName="resourceName"",
    "ref="VTU_COMPONENT"",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation ATTR_FALSE_VALUE) Attribute "footClone" with v-bind value \`false\` will render footClone="false" instead of removing it in Vue 3. To remove the attribute, use \`null\` or \`undefined\` instead. If the usage is intended, you can disable the compat behavior and suppress this warning with:

  configureCompat({ ATTR_FALSE_VALUE: false })

  Details: https://v3-migration.vuejs.org/breaking-changes/attribute-coercion.html",
    "
",
    " at <BTable",
    "key=0",
    "ref="privilegesGrid"",
    "class="mb-0 border-top"",
    " ...",
    ">",
    "
",
    " at <BTab",
    "title=undefined",
    ">",
    "
",
    " at <PrivilegesTab",
    "privilegesField=",
    {
      "value": [
        {
          "filter": "",
          "name": "testValue",
        },
      ],
    },
    "resourceName="resourceName"",
    "ref="VTU_COMPONENT"",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation ATTR_FALSE_VALUE) Attribute "noFooterSorting" with v-bind value \`false\` will render noFooterSorting="false" instead of removing it in Vue 3. To remove the attribute, use \`null\` or \`undefined\` instead. If the usage is intended, you can disable the compat behavior and suppress this warning with:

  configureCompat({ ATTR_FALSE_VALUE: false })

  Details: https://v3-migration.vuejs.org/breaking-changes/attribute-coercion.html",
    "
",
    " at <BTable",
    "key=0",
    "ref="privilegesGrid"",
    "class="mb-0 border-top"",
    " ...",
    ">",
    "
",
    " at <BTab",
    "title=undefined",
    ">",
    "
",
    " at <PrivilegesTab",
    "privilegesField=",
    {
      "value": [
        {
          "filter": "",
          "name": "testValue",
        },
      ],
    },
    "resourceName="resourceName"",
    "ref="VTU_COMPONENT"",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation ATTR_FALSE_VALUE) Attribute "noSortReset" with v-bind value \`false\` will render noSortReset="false" instead of removing it in Vue 3. To remove the attribute, use \`null\` or \`undefined\` instead. If the usage is intended, you can disable the compat behavior and suppress this warning with:

  configureCompat({ ATTR_FALSE_VALUE: false })

  Details: https://v3-migration.vuejs.org/breaking-changes/attribute-coercion.html",
    "
",
    " at <BTable",
    "key=0",
    "ref="privilegesGrid"",
    "class="mb-0 border-top"",
    " ...",
    ">",
    "
",
    " at <BTab",
    "title=undefined",
    ">",
    "
",
    " at <PrivilegesTab",
    "privilegesField=",
    {
      "value": [
        {
          "filter": "",
          "name": "testValue",
        },
      ],
    },
    "resourceName="resourceName"",
    "ref="VTU_COMPONENT"",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation ATTR_FALSE_VALUE) Attribute "sortDesc" with v-bind value \`false\` will render sortDesc="false" instead of removing it in Vue 3. To remove the attribute, use \`null\` or \`undefined\` instead. If the usage is intended, you can disable the compat behavior and suppress this warning with:

  configureCompat({ ATTR_FALSE_VALUE: false })

  Details: https://v3-migration.vuejs.org/breaking-changes/attribute-coercion.html",
    "
",
    " at <BTable",
    "key=0",
    "ref="privilegesGrid"",
    "class="mb-0 border-top"",
    " ...",
    ">",
    "
",
    " at <BTab",
    "title=undefined",
    ">",
    "
",
    " at <PrivilegesTab",
    "privilegesField=",
    {
      "value": [
        {
          "filter": "",
          "name": "testValue",
        },
      ],
    },
    "resourceName="resourceName"",
    "ref="VTU_COMPONENT"",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation ATTR_FALSE_VALUE) Attribute "sortIconLeft" with v-bind value \`false\` will render sortIconLeft="false" instead of removing it in Vue 3. To remove the attribute, use \`null\` or \`undefined\` instead. If the usage is intended, you can disable the compat behavior and suppress this warning with:

  configureCompat({ ATTR_FALSE_VALUE: false })

  Details: https://v3-migration.vuejs.org/breaking-changes/attribute-coercion.html",
    "
",
    " at <BTable",
    "key=0",
    "ref="privilegesGrid"",
    "class="mb-0 border-top"",
    " ...",
    ">",
    "
",
    " at <BTab",
    "title=undefined",
    ">",
    "
",
    " at <PrivilegesTab",
    "privilegesField=",
    {
      "value": [
        {
          "filter": "",
          "name": "testValue",
        },
      ],
    },
    "resourceName="resourceName"",
    "ref="VTU_COMPONENT"",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation ATTR_FALSE_VALUE) Attribute "sortNullLast" with v-bind value \`false\` will render sortNullLast="false" instead of removing it in Vue 3. To remove the attribute, use \`null\` or \`undefined\` instead. If the usage is intended, you can disable the compat behavior and suppress this warning with:

  configureCompat({ ATTR_FALSE_VALUE: false })

  Details: https://v3-migration.vuejs.org/breaking-changes/attribute-coercion.html",
    "
",
    " at <BTable",
    "key=0",
    "ref="privilegesGrid"",
    "class="mb-0 border-top"",
    " ...",
    ">",
    "
",
    " at <BTab",
    "title=undefined",
    ">",
    "
",
    " at <PrivilegesTab",
    "privilegesField=",
    {
      "value": [
        {
          "filter": "",
          "name": "testValue",
        },
      ],
    },
    "resourceName="resourceName"",
    "ref="VTU_COMPONENT"",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation ATTR_FALSE_VALUE) Attribute "noSelectOnClick" with v-bind value \`false\` will render noSelectOnClick="false" instead of removing it in Vue 3. To remove the attribute, use \`null\` or \`undefined\` instead. If the usage is intended, you can disable the compat behavior and suppress this warning with:

  configureCompat({ ATTR_FALSE_VALUE: false })

  Details: https://v3-migration.vuejs.org/breaking-changes/attribute-coercion.html",
    "
",
    " at <BTable",
    "key=0",
    "ref="privilegesGrid"",
    "class="mb-0 border-top"",
    " ...",
    ">",
    "
",
    " at <BTab",
    "title=undefined",
    ">",
    "
",
    " at <PrivilegesTab",
    "privilegesField=",
    {
      "value": [
        {
          "filter": "",
          "name": "testValue",
        },
      ],
    },
    "resourceName="resourceName"",
    "ref="VTU_COMPONENT"",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation ATTR_FALSE_VALUE) Attribute "selectable" with v-bind value \`false\` will render selectable="false" instead of removing it in Vue 3. To remove the attribute, use \`null\` or \`undefined\` instead. If the usage is intended, you can disable the compat behavior and suppress this warning with:

  configureCompat({ ATTR_FALSE_VALUE: false })

  Details: https://v3-migration.vuejs.org/breaking-changes/attribute-coercion.html",
    "
",
    " at <BTable",
    "key=0",
    "ref="privilegesGrid"",
    "class="mb-0 border-top"",
    " ...",
    ">",
    "
",
    " at <BTab",
    "title=undefined",
    ">",
    "
",
    " at <PrivilegesTab",
    "privilegesField=",
    {
      "value": [
        {
          "filter": "",
          "name": "testValue",
        },
      ],
    },
    "resourceName="resourceName"",
    "ref="VTU_COMPONENT"",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation ATTR_FALSE_VALUE) Attribute "busy" with v-bind value \`false\` will render busy="false" instead of removing it in Vue 3. To remove the attribute, use \`null\` or \`undefined\` instead. If the usage is intended, you can disable the compat behavior and suppress this warning with:

  configureCompat({ ATTR_FALSE_VALUE: false })

  Details: https://v3-migration.vuejs.org/breaking-changes/attribute-coercion.html",
    "
",
    " at <BTable",
    "key=0",
    "ref="privilegesGrid"",
    "class="mb-0 border-top"",
    " ...",
    ">",
    "
",
    " at <BTab",
    "title=undefined",
    ">",
    "
",
    " at <PrivilegesTab",
    "privilegesField=",
    {
      "value": [
        {
          "filter": "",
          "name": "testValue",
        },
      ],
    },
    "resourceName="resourceName"",
    "ref="VTU_COMPONENT"",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation ATTR_FALSE_VALUE) Attribute "noProviderFiltering" with v-bind value \`false\` will render noProviderFiltering="false" instead of removing it in Vue 3. To remove the attribute, use \`null\` or \`undefined\` instead. If the usage is intended, you can disable the compat behavior and suppress this warning with:

  configureCompat({ ATTR_FALSE_VALUE: false })

  Details: https://v3-migration.vuejs.org/breaking-changes/attribute-coercion.html",
    "
",
    " at <BTable",
    "key=0",
    "ref="privilegesGrid"",
    "class="mb-0 border-top"",
    " ...",
    ">",
    "
",
    " at <BTab",
    "title=undefined",
    ">",
    "
",
    " at <PrivilegesTab",
    "privilegesField=",
    {
      "value": [
        {
          "filter": "",
          "name": "testValue",
        },
      ],
    },
    "resourceName="resourceName"",
    "ref="VTU_COMPONENT"",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation ATTR_FALSE_VALUE) Attribute "noProviderPaging" with v-bind value \`false\` will render noProviderPaging="false" instead of removing it in Vue 3. To remove the attribute, use \`null\` or \`undefined\` instead. If the usage is intended, you can disable the compat behavior and suppress this warning with:

  configureCompat({ ATTR_FALSE_VALUE: false })

  Details: https://v3-migration.vuejs.org/breaking-changes/attribute-coercion.html",
    "
",
    " at <BTable",
    "key=0",
    "ref="privilegesGrid"",
    "class="mb-0 border-top"",
    " ...",
    ">",
    "
",
    " at <BTab",
    "title=undefined",
    ">",
    "
",
    " at <PrivilegesTab",
    "privilegesField=",
    {
      "value": [
        {
          "filter": "",
          "name": "testValue",
        },
      ],
    },
    "resourceName="resourceName"",
    "ref="VTU_COMPONENT"",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation ATTR_FALSE_VALUE) Attribute "noProviderSorting" with v-bind value \`false\` will render noProviderSorting="false" instead of removing it in Vue 3. To remove the attribute, use \`null\` or \`undefined\` instead. If the usage is intended, you can disable the compat behavior and suppress this warning with:

  configureCompat({ ATTR_FALSE_VALUE: false })

  Details: https://v3-migration.vuejs.org/breaking-changes/attribute-coercion.html",
    "
",
    " at <BTable",
    "key=0",
    "ref="privilegesGrid"",
    "class="mb-0 border-top"",
    " ...",
    ">",
    "
",
    " at <BTab",
    "title=undefined",
    ">",
    "
",
    " at <PrivilegesTab",
    "privilegesField=",
    {
      "value": [
        {
          "filter": "",
          "name": "testValue",
        },
      ],
    },
    "resourceName="resourceName"",
    "ref="VTU_COMPONENT"",
    ">",
    "
",
    " at <VTUROOT>",
  ],
]
`;

exports[`PrivilegesTab shows edit & confirm remove modal: console-warn-snapshot 1`] = `
[
  [
    "[Vue warn]: (deprecation INSTANCE_SCOPED_SLOTS) vm.$scopedSlots has been removed. Use vm.$slots instead.
  Details: https://v3-migration.vuejs.org/breaking-changes/slots-unification.html",
    "
",
    " at <BModal",
    "id="editPrivilegeModal"",
    "ref="editPrivilegeModal"",
    "no-close-on-esc=true",
    " ...",
    ">",
    "
",
    " at <Form",
    "ref="observer"",
    "as="span"",
    ">",
    "
",
    " at <BTab",
    "title=undefined",
    ">",
    "
",
    " at <PrivilegesTab",
    "privilegesField=",
    {
      "value": [
        {
          "filter": "",
          "name": "testValue",
        },
      ],
    },
    "resourceName="resourceName"",
    "ref="VTU_COMPONENT"",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation GLOBAL_EXTEND) (3)",
    "
",
    " at <BModal",
    "id="editPrivilegeModal"",
    "ref="editPrivilegeModal"",
    "no-close-on-esc=true",
    " ...",
    ">",
    "
",
    " at <Form",
    "ref="observer"",
    "as="span"",
    ">",
    "
",
    " at <BTab",
    "title=undefined",
    ">",
    "
",
    " at <PrivilegesTab",
    "privilegesField=",
    {
      "value": [
        {
          "filter": "",
          "name": "testValue",
        },
      ],
    },
    "resourceName="resourceName"",
    "ref="VTU_COMPONENT"",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation ATTR_FALSE_VALUE) (3)",
    "
",
    " at <BButtonClose",
    "onClick=fn<bound onClose>",
    "ref="close-button"",
    "content="&times;"",
    " ...",
    ">",
    "
",
    " at <Transition",
    "onBeforeEnter=fn<bound onBeforeEnter>",
    "onEnter=fn<bound onEnter>",
    "onAfterEnter=fn<bound onAfterEnter>",
    " ...",
    ">",
    "
",
    " at <BVTransporter>",
    "
",
    " at <BModal",
    "id="editPrivilegeModal"",
    "ref="editPrivilegeModal"",
    "no-close-on-esc=true",
    " ...",
    ">",
    "
",
    " at <Form",
    "ref="observer"",
    "as="span"",
    ">",
    "
",
    " at <BTab",
    "title=undefined",
    ">",
    "
",
    " at <PrivilegesTab",
    "privilegesField=",
    {
      "value": [
        {
          "filter": "",
          "name": "testValue",
        },
      ],
    },
    "resourceName="resourceName"",
    "ref="VTU_COMPONENT"",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation ATTR_FALSE_VALUE) (4)",
    "
",
    " at <FrPrivilegeEditor",
    "key=0",
    "privilege=",
    {
      "filter": "",
    },
    "identity-object-schema=undefined",
    " ...",
    ">",
    "
",
    " at <Transition",
    "onBeforeEnter=fn<bound onBeforeEnter>",
    "onEnter=fn<bound onEnter>",
    "onAfterEnter=fn<bound onAfterEnter>",
    " ...",
    ">",
    "
",
    " at <BVTransporter>",
    "
",
    " at <BModal",
    "id="editPrivilegeModal"",
    "ref="editPrivilegeModal"",
    "no-close-on-esc=true",
    " ...",
    ">",
    "
",
    " at <Form",
    "ref="observer"",
    "as="span"",
    ">",
    "
",
    " at <BTab",
    "title=undefined",
    ">",
    "
",
    " at <PrivilegesTab",
    "privilegesField=",
    {
      "value": [
        {
          "filter": "",
          "name": "testValue",
        },
      ],
    },
    "resourceName="resourceName"",
    "ref="VTU_COMPONENT"",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation ATTR_FALSE_VALUE) Attribute "showDelete" with v-bind value \`false\` will render showDelete="false" instead of removing it in Vue 3. To remove the attribute, use \`null\` or \`undefined\` instead. If the usage is intended, you can disable the compat behavior and suppress this warning with:

  configureCompat({ ATTR_FALSE_VALUE: false })

  Details: https://v3-migration.vuejs.org/breaking-changes/attribute-coercion.html",
    "
",
    " at <FrPrivilegeEditor",
    "key=0",
    "privilege=",
    {
      "filter": "",
    },
    "identity-object-schema=undefined",
    " ...",
    ">",
    "
",
    " at <Transition",
    "onBeforeEnter=fn<bound onBeforeEnter>",
    "onEnter=fn<bound onEnter>",
    "onAfterEnter=fn<bound onAfterEnter>",
    " ...",
    ">",
    "
",
    " at <BVTransporter>",
    "
",
    " at <BModal",
    "id="editPrivilegeModal"",
    "ref="editPrivilegeModal"",
    "no-close-on-esc=true",
    " ...",
    ">",
    "
",
    " at <Form",
    "ref="observer"",
    "as="span"",
    ">",
    "
",
    " at <BTab",
    "title=undefined",
    ">",
    "
",
    " at <PrivilegesTab",
    "privilegesField=",
    {
      "value": [
        {
          "filter": "",
          "name": "testValue",
        },
      ],
    },
    "resourceName="resourceName"",
    "ref="VTU_COMPONENT"",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation ATTR_FALSE_VALUE) Attribute "appear" with v-bind value \`false\` will render appear="false" instead of removing it in Vue 3. To remove the attribute, use \`null\` or \`undefined\` instead. If the usage is intended, you can disable the compat behavior and suppress this warning with:

  configureCompat({ ATTR_FALSE_VALUE: false })

  Details: https://v3-migration.vuejs.org/breaking-changes/attribute-coercion.html",
    "
",
    " at <Transition",
    "onBeforeEnter=fn<bound onBeforeEnter>",
    "onEnter=fn<bound onEnter>",
    "onAfterEnter=fn<bound onAfterEnter>",
    " ...",
    ">",
    "
",
    " at <BVTransporter>",
    "
",
    " at <BModal",
    "id="editPrivilegeModal"",
    "ref="editPrivilegeModal"",
    "no-close-on-esc=true",
    " ...",
    ">",
    "
",
    " at <Form",
    "ref="observer"",
    "as="span"",
    ">",
    "
",
    " at <BTab",
    "title=undefined",
    ">",
    "
",
    " at <PrivilegesTab",
    "privilegesField=",
    {
      "value": [
        {
          "filter": "",
          "name": "testValue",
        },
      ],
    },
    "resourceName="resourceName"",
    "ref="VTU_COMPONENT"",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation ATTR_FALSE_VALUE) Attribute "persisted" with v-bind value \`false\` will render persisted="false" instead of removing it in Vue 3. To remove the attribute, use \`null\` or \`undefined\` instead. If the usage is intended, you can disable the compat behavior and suppress this warning with:

  configureCompat({ ATTR_FALSE_VALUE: false })

  Details: https://v3-migration.vuejs.org/breaking-changes/attribute-coercion.html",
    "
",
    " at <Transition",
    "onBeforeEnter=fn<bound onBeforeEnter>",
    "onEnter=fn<bound onEnter>",
    "onAfterEnter=fn<bound onAfterEnter>",
    " ...",
    ">",
    "
",
    " at <BVTransporter>",
    "
",
    " at <BModal",
    "id="editPrivilegeModal"",
    "ref="editPrivilegeModal"",
    "no-close-on-esc=true",
    " ...",
    ">",
    "
",
    " at <Form",
    "ref="observer"",
    "as="span"",
    ">",
    "
",
    " at <BTab",
    "title=undefined",
    ">",
    "
",
    " at <PrivilegesTab",
    "privilegesField=",
    {
      "value": [
        {
          "filter": "",
          "name": "testValue",
        },
      ],
    },
    "resourceName="resourceName"",
    "ref="VTU_COMPONENT"",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation ATTR_FALSE_VALUE) (2)",
    "
",
    " at <BVTransition",
    "noFade=false",
    ">",
    "
",
    " at <BVTransporter>",
    "
",
    " at <BModal",
    "id="editPrivilegeModal"",
    "ref="editPrivilegeModal"",
    "no-close-on-esc=true",
    " ...",
    ">",
    "
",
    " at <Form",
    "ref="observer"",
    "as="span"",
    ">",
    "
",
    " at <BTab",
    "title=undefined",
    ">",
    "
",
    " at <PrivilegesTab",
    "privilegesField=",
    {
      "value": [
        {
          "filter": "",
          "name": "testValue",
        },
      ],
    },
    "resourceName="resourceName"",
    "ref="VTU_COMPONENT"",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation ATTR_FALSE_VALUE) Attribute "noFade" with v-bind value \`false\` will render noFade="false" instead of removing it in Vue 3. To remove the attribute, use \`null\` or \`undefined\` instead. If the usage is intended, you can disable the compat behavior and suppress this warning with:

  configureCompat({ ATTR_FALSE_VALUE: false })

  Details: https://v3-migration.vuejs.org/breaking-changes/attribute-coercion.html",
    "
",
    " at <BVTransition",
    "noFade=false",
    ">",
    "
",
    " at <BVTransporter>",
    "
",
    " at <BModal",
    "id="editPrivilegeModal"",
    "ref="editPrivilegeModal"",
    "no-close-on-esc=true",
    " ...",
    ">",
    "
",
    " at <Form",
    "ref="observer"",
    "as="span"",
    ">",
    "
",
    " at <BTab",
    "title=undefined",
    ">",
    "
",
    " at <PrivilegesTab",
    "privilegesField=",
    {
      "value": [
        {
          "filter": "",
          "name": "testValue",
        },
      ],
    },
    "resourceName="resourceName"",
    "ref="VTU_COMPONENT"",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation ATTR_FALSE_VALUE) (5)",
    "
",
    " at <BVTransporter>",
    "
",
    " at <BModal",
    "id="editPrivilegeModal"",
    "ref="editPrivilegeModal"",
    "no-close-on-esc=true",
    " ...",
    ">",
    "
",
    " at <Form",
    "ref="observer"",
    "as="span"",
    ">",
    "
",
    " at <BTab",
    "title=undefined",
    ">",
    "
",
    " at <PrivilegesTab",
    "privilegesField=",
    {
      "value": [
        {
          "filter": "",
          "name": "testValue",
        },
      ],
    },
    "resourceName="resourceName"",
    "ref="VTU_COMPONENT"",
    ">",
    "
",
    " at <VTUROOT>",
  ],
]
`;

exports[`PrivilegesTab updates privilege: console-warn-snapshot 1`] = `
[
  [
    "[Vue warn]: (deprecation RENDER_FUNCTION) Vue 3's render function API has changed. You can opt-in to the new API with:

  configureCompat({ RENDER_FUNCTION: false })

  (This can also be done per-component via the "compatConfig" option.)
  Details: https://v3-migration.vuejs.org/breaking-changes/render-function-api.html",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation GLOBAL_EXTEND) (2)",
    "
",
    " at <PrivilegesTab",
    "privilegesField=",
    {
      "value": [
        {
          "filter": "",
          "name": "testValue",
        },
      ],
    },
    "resourceName="resourceName"",
    "ref="VTU_COMPONENT"",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation ATTR_FALSE_VALUE) Attribute "outlined" with v-bind value \`false\` will render outlined="false" instead of removing it in Vue 3. To remove the attribute, use \`null\` or \`undefined\` instead. If the usage is intended, you can disable the compat behavior and suppress this warning with:

  configureCompat({ ATTR_FALSE_VALUE: false })

  Details: https://v3-migration.vuejs.org/breaking-changes/attribute-coercion.html",
    "
",
    " at <FrIcon",
    "class="mr-2"",
    "outlined=false",
    "name="add"",
    ">",
    "
",
    " at <BButton",
    "variant="primary"",
    "class="mr-1"",
    "onClick=fn",
    " ...",
    ">",
    "
",
    " at <BCol",
    "md="7"",
    "class="my-1"",
    ">",
    "
",
    " at <BRow>",
    "
",
    " at <BTab",
    "title=undefined",
    ">",
    "
",
    " at <PrivilegesTab",
    "privilegesField=",
    {
      "value": [
        {
          "filter": "",
          "name": "testValue",
        },
      ],
    },
    "resourceName="resourceName"",
    "ref="VTU_COMPONENT"",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation ATTR_FALSE_VALUE) Attribute "active" with v-bind value \`false\` will render active="false" instead of removing it in Vue 3. To remove the attribute, use \`null\` or \`undefined\` instead. If the usage is intended, you can disable the compat behavior and suppress this warning with:

  configureCompat({ ATTR_FALSE_VALUE: false })

  Details: https://v3-migration.vuejs.org/breaking-changes/attribute-coercion.html",
    "
",
    " at <BButton",
    "variant="primary"",
    "class="mr-1"",
    "onClick=fn",
    " ...",
    ">",
    "
",
    " at <BCol",
    "md="7"",
    "class="my-1"",
    ">",
    "
",
    " at <BRow>",
    "
",
    " at <BTab",
    "title=undefined",
    ">",
    "
",
    " at <PrivilegesTab",
    "privilegesField=",
    {
      "value": [
        {
          "filter": "",
          "name": "testValue",
        },
      ],
    },
    "resourceName="resourceName"",
    "ref="VTU_COMPONENT"",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation ATTR_FALSE_VALUE) Attribute "block" with v-bind value \`false\` will render block="false" instead of removing it in Vue 3. To remove the attribute, use \`null\` or \`undefined\` instead. If the usage is intended, you can disable the compat behavior and suppress this warning with:

  configureCompat({ ATTR_FALSE_VALUE: false })

  Details: https://v3-migration.vuejs.org/breaking-changes/attribute-coercion.html",
    "
",
    " at <BButton",
    "variant="primary"",
    "class="mr-1"",
    "onClick=fn",
    " ...",
    ">",
    "
",
    " at <BCol",
    "md="7"",
    "class="my-1"",
    ">",
    "
",
    " at <BRow>",
    "
",
    " at <BTab",
    "title=undefined",
    ">",
    "
",
    " at <PrivilegesTab",
    "privilegesField=",
    {
      "value": [
        {
          "filter": "",
          "name": "testValue",
        },
      ],
    },
    "resourceName="resourceName"",
    "ref="VTU_COMPONENT"",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation ATTR_FALSE_VALUE) Attribute "disabled" with v-bind value \`false\` will render disabled="false" instead of removing it in Vue 3. To remove the attribute, use \`null\` or \`undefined\` instead. If the usage is intended, you can disable the compat behavior and suppress this warning with:

  configureCompat({ ATTR_FALSE_VALUE: false })

  Details: https://v3-migration.vuejs.org/breaking-changes/attribute-coercion.html",
    "
",
    " at <BButton",
    "variant="primary"",
    "class="mr-1"",
    "onClick=fn",
    " ...",
    ">",
    "
",
    " at <BCol",
    "md="7"",
    "class="my-1"",
    ">",
    "
",
    " at <BRow>",
    "
",
    " at <BTab",
    "title=undefined",
    ">",
    "
",
    " at <PrivilegesTab",
    "privilegesField=",
    {
      "value": [
        {
          "filter": "",
          "name": "testValue",
        },
      ],
    },
    "resourceName="resourceName"",
    "ref="VTU_COMPONENT"",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation ATTR_FALSE_VALUE) Attribute "exact" with v-bind value \`false\` will render exact="false" instead of removing it in Vue 3. To remove the attribute, use \`null\` or \`undefined\` instead. If the usage is intended, you can disable the compat behavior and suppress this warning with:

  configureCompat({ ATTR_FALSE_VALUE: false })

  Details: https://v3-migration.vuejs.org/breaking-changes/attribute-coercion.html",
    "
",
    " at <BButton",
    "variant="primary"",
    "class="mr-1"",
    "onClick=fn",
    " ...",
    ">",
    "
",
    " at <BCol",
    "md="7"",
    "class="my-1"",
    ">",
    "
",
    " at <BRow>",
    "
",
    " at <BTab",
    "title=undefined",
    ">",
    "
",
    " at <PrivilegesTab",
    "privilegesField=",
    {
      "value": [
        {
          "filter": "",
          "name": "testValue",
        },
      ],
    },
    "resourceName="resourceName"",
    "ref="VTU_COMPONENT"",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation ATTR_FALSE_VALUE) Attribute "exactPath" with v-bind value \`false\` will render exactPath="false" instead of removing it in Vue 3. To remove the attribute, use \`null\` or \`undefined\` instead. If the usage is intended, you can disable the compat behavior and suppress this warning with:

  configureCompat({ ATTR_FALSE_VALUE: false })

  Details: https://v3-migration.vuejs.org/breaking-changes/attribute-coercion.html",
    "
",
    " at <BButton",
    "variant="primary"",
    "class="mr-1"",
    "onClick=fn",
    " ...",
    ">",
    "
",
    " at <BCol",
    "md="7"",
    "class="my-1"",
    ">",
    "
",
    " at <BRow>",
    "
",
    " at <BTab",
    "title=undefined",
    ">",
    "
",
    " at <PrivilegesTab",
    "privilegesField=",
    {
      "value": [
        {
          "filter": "",
          "name": "testValue",
        },
      ],
    },
    "resourceName="resourceName"",
    "ref="VTU_COMPONENT"",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation ATTR_FALSE_VALUE) Attribute "noPrefetch" with v-bind value \`false\` will render noPrefetch="false" instead of removing it in Vue 3. To remove the attribute, use \`null\` or \`undefined\` instead. If the usage is intended, you can disable the compat behavior and suppress this warning with:

  configureCompat({ ATTR_FALSE_VALUE: false })

  Details: https://v3-migration.vuejs.org/breaking-changes/attribute-coercion.html",
    "
",
    " at <BButton",
    "variant="primary"",
    "class="mr-1"",
    "onClick=fn",
    " ...",
    ">",
    "
",
    " at <BCol",
    "md="7"",
    "class="my-1"",
    ">",
    "
",
    " at <BRow>",
    "
",
    " at <BTab",
    "title=undefined",
    ">",
    "
",
    " at <PrivilegesTab",
    "privilegesField=",
    {
      "value": [
        {
          "filter": "",
          "name": "testValue",
        },
      ],
    },
    "resourceName="resourceName"",
    "ref="VTU_COMPONENT"",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation ATTR_FALSE_VALUE) Attribute "pill" with v-bind value \`false\` will render pill="false" instead of removing it in Vue 3. To remove the attribute, use \`null\` or \`undefined\` instead. If the usage is intended, you can disable the compat behavior and suppress this warning with:

  configureCompat({ ATTR_FALSE_VALUE: false })

  Details: https://v3-migration.vuejs.org/breaking-changes/attribute-coercion.html",
    "
",
    " at <BButton",
    "variant="primary"",
    "class="mr-1"",
    "onClick=fn",
    " ...",
    ">",
    "
",
    " at <BCol",
    "md="7"",
    "class="my-1"",
    ">",
    "
",
    " at <BRow>",
    "
",
    " at <BTab",
    "title=undefined",
    ">",
    "
",
    " at <PrivilegesTab",
    "privilegesField=",
    {
      "value": [
        {
          "filter": "",
          "name": "testValue",
        },
      ],
    },
    "resourceName="resourceName"",
    "ref="VTU_COMPONENT"",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation ATTR_FALSE_VALUE) Attribute "replace" with v-bind value \`false\` will render replace="false" instead of removing it in Vue 3. To remove the attribute, use \`null\` or \`undefined\` instead. If the usage is intended, you can disable the compat behavior and suppress this warning with:

  configureCompat({ ATTR_FALSE_VALUE: false })

  Details: https://v3-migration.vuejs.org/breaking-changes/attribute-coercion.html",
    "
",
    " at <BButton",
    "variant="primary"",
    "class="mr-1"",
    "onClick=fn",
    " ...",
    ">",
    "
",
    " at <BCol",
    "md="7"",
    "class="my-1"",
    ">",
    "
",
    " at <BRow>",
    "
",
    " at <BTab",
    "title=undefined",
    ">",
    "
",
    " at <PrivilegesTab",
    "privilegesField=",
    {
      "value": [
        {
          "filter": "",
          "name": "testValue",
        },
      ],
    },
    "resourceName="resourceName"",
    "ref="VTU_COMPONENT"",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation ATTR_FALSE_VALUE) Attribute "squared" with v-bind value \`false\` will render squared="false" instead of removing it in Vue 3. To remove the attribute, use \`null\` or \`undefined\` instead. If the usage is intended, you can disable the compat behavior and suppress this warning with:

  configureCompat({ ATTR_FALSE_VALUE: false })

  Details: https://v3-migration.vuejs.org/breaking-changes/attribute-coercion.html",
    "
",
    " at <BButton",
    "variant="primary"",
    "class="mr-1"",
    "onClick=fn",
    " ...",
    ">",
    "
",
    " at <BCol",
    "md="7"",
    "class="my-1"",
    ">",
    "
",
    " at <BRow>",
    "
",
    " at <BTab",
    "title=undefined",
    ">",
    "
",
    " at <PrivilegesTab",
    "privilegesField=",
    {
      "value": [
        {
          "filter": "",
          "name": "testValue",
        },
      ],
    },
    "resourceName="resourceName"",
    "ref="VTU_COMPONENT"",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation ATTR_FALSE_VALUE) Attribute "col" with v-bind value \`false\` will render col="false" instead of removing it in Vue 3. To remove the attribute, use \`null\` or \`undefined\` instead. If the usage is intended, you can disable the compat behavior and suppress this warning with:

  configureCompat({ ATTR_FALSE_VALUE: false })

  Details: https://v3-migration.vuejs.org/breaking-changes/attribute-coercion.html",
    "
",
    " at <BCol",
    "md="7"",
    "class="my-1"",
    ">",
    "
",
    " at <BRow>",
    "
",
    " at <BTab",
    "title=undefined",
    ">",
    "
",
    " at <PrivilegesTab",
    "privilegesField=",
    {
      "value": [
        {
          "filter": "",
          "name": "testValue",
        },
      ],
    },
    "resourceName="resourceName"",
    "ref="VTU_COMPONENT"",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation ATTR_FALSE_VALUE) Attribute "noGutters" with v-bind value \`false\` will render noGutters="false" instead of removing it in Vue 3. To remove the attribute, use \`null\` or \`undefined\` instead. If the usage is intended, you can disable the compat behavior and suppress this warning with:

  configureCompat({ ATTR_FALSE_VALUE: false })

  Details: https://v3-migration.vuejs.org/breaking-changes/attribute-coercion.html",
    "
",
    " at <BRow>",
    "
",
    " at <BTab",
    "title=undefined",
    ">",
    "
",
    " at <PrivilegesTab",
    "privilegesField=",
    {
      "value": [
        {
          "filter": "",
          "name": "testValue",
        },
      ],
    },
    "resourceName="resourceName"",
    "ref="VTU_COMPONENT"",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation RENDER_FUNCTION) (2)",
    "
",
    " at <BModal",
    "id="editPrivilegeModal"",
    "ref="editPrivilegeModal"",
    "no-close-on-esc=true",
    " ...",
    ">",
    "
",
    " at <Form",
    "ref="observer"",
    "as="span"",
    ">",
    "
",
    " at <BTab",
    "title=undefined",
    ">",
    "
",
    " at <PrivilegesTab",
    "privilegesField=",
    {
      "value": [
        {
          "filter": "",
          "name": "testValue",
        },
      ],
    },
    "resourceName="resourceName"",
    "ref="VTU_COMPONENT"",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation OPTIONS_BEFORE_DESTROY) \`beforeDestroy\` has been renamed to \`beforeUnmount\`.",
    "
",
    " at <BModal",
    "id="editPrivilegeModal"",
    "ref="editPrivilegeModal"",
    "no-close-on-esc=true",
    " ...",
    ">",
    "
",
    " at <Form",
    "ref="observer"",
    "as="span"",
    ">",
    "
",
    " at <BTab",
    "title=undefined",
    ">",
    "
",
    " at <PrivilegesTab",
    "privilegesField=",
    {
      "value": [
        {
          "filter": "",
          "name": "testValue",
        },
      ],
    },
    "resourceName="resourceName"",
    "ref="VTU_COMPONENT"",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation ATTR_FALSE_VALUE) (2)",
    "
",
    " at <BTab",
    "title=undefined",
    ">",
    "
",
    " at <PrivilegesTab",
    "privilegesField=",
    {
      "value": [
        {
          "filter": "",
          "name": "testValue",
        },
      ],
    },
    "resourceName="resourceName"",
    "ref="VTU_COMPONENT"",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation ATTR_FALSE_VALUE) (2)",
    "
",
    " at <BTab",
    "title=undefined",
    ">",
    "
",
    " at <PrivilegesTab",
    "privilegesField=",
    {
      "value": [
        {
          "filter": "",
          "name": "testValue",
        },
      ],
    },
    "resourceName="resourceName"",
    "ref="VTU_COMPONENT"",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation ATTR_FALSE_VALUE) Attribute "lazy" with v-bind value \`false\` will render lazy="false" instead of removing it in Vue 3. To remove the attribute, use \`null\` or \`undefined\` instead. If the usage is intended, you can disable the compat behavior and suppress this warning with:

  configureCompat({ ATTR_FALSE_VALUE: false })

  Details: https://v3-migration.vuejs.org/breaking-changes/attribute-coercion.html",
    "
",
    " at <BTab",
    "title=undefined",
    ">",
    "
",
    " at <PrivilegesTab",
    "privilegesField=",
    {
      "value": [
        {
          "filter": "",
          "name": "testValue",
        },
      ],
    },
    "resourceName="resourceName"",
    "ref="VTU_COMPONENT"",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation ATTR_FALSE_VALUE) Attribute "noBody" with v-bind value \`false\` will render noBody="false" instead of removing it in Vue 3. To remove the attribute, use \`null\` or \`undefined\` instead. If the usage is intended, you can disable the compat behavior and suppress this warning with:

  configureCompat({ ATTR_FALSE_VALUE: false })

  Details: https://v3-migration.vuejs.org/breaking-changes/attribute-coercion.html",
    "
",
    " at <BTab",
    "title=undefined",
    ">",
    "
",
    " at <PrivilegesTab",
    "privilegesField=",
    {
      "value": [
        {
          "filter": "",
          "name": "testValue",
        },
      ],
    },
    "resourceName="resourceName"",
    "ref="VTU_COMPONENT"",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation INSTANCE_EVENT_EMITTER) vm.$on/$once/$off() have been removed. Use an external event emitter library instead.
  Details: https://v3-migration.vuejs.org/breaking-changes/events-api.html",
  ],
]
`;
