// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SettingsTab disables save button: console-warn-snapshot 1`] = `
[
  [
    "[Vue warn]: (deprecation RENDER_FUNCTION) Vue 3's render function API has changed. You can opt-in to the new API with:

  configureCompat({ RENDER_FUNCTION: false })

  (This can also be done per-component via the "compatConfig" option.)
  Details: https://v3-migration.vuejs.org/breaking-changes/render-function-api.html",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation GLOBAL_EXTEND) (2)",
    "
",
    " at <SettingsTab",
    "properties=",
    {
      "condition": {
        "disabled": false,
      },
      "temporalConstraints": {
        "disabled": true,
      },
    },
    "resourcePath="resourcePath"",
    "resourceName="resourceName"",
    " ...",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation ATTR_FALSE_VALUE) Attribute "active" with v-bind value \`false\` will render active="false" instead of removing it in Vue 3. To remove the attribute, use \`null\` or \`undefined\` instead. If the usage is intended, you can disable the compat behavior and suppress this warning with:

  configureCompat({ ATTR_FALSE_VALUE: false })

  Details: https://v3-migration.vuejs.org/breaking-changes/attribute-coercion.html",
    "
",
    " at <BButton",
    "variant="outline-primary"",
    "onClick=fn<onClick>",
    ">",
    "
",
    " at <BTab",
    "title=undefined",
    ">",
    "
",
    " at <SettingsTab",
    "properties=",
    {
      "condition": {
        "disabled": false,
      },
      "temporalConstraints": {
        "disabled": true,
      },
    },
    "resourcePath="resourcePath"",
    "resourceName="resourceName"",
    " ...",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation ATTR_FALSE_VALUE) Attribute "block" with v-bind value \`false\` will render block="false" instead of removing it in Vue 3. To remove the attribute, use \`null\` or \`undefined\` instead. If the usage is intended, you can disable the compat behavior and suppress this warning with:

  configureCompat({ ATTR_FALSE_VALUE: false })

  Details: https://v3-migration.vuejs.org/breaking-changes/attribute-coercion.html",
    "
",
    " at <BButton",
    "variant="outline-primary"",
    "onClick=fn<onClick>",
    ">",
    "
",
    " at <BTab",
    "title=undefined",
    ">",
    "
",
    " at <SettingsTab",
    "properties=",
    {
      "condition": {
        "disabled": false,
      },
      "temporalConstraints": {
        "disabled": true,
      },
    },
    "resourcePath="resourcePath"",
    "resourceName="resourceName"",
    " ...",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation ATTR_FALSE_VALUE) Attribute "disabled" with v-bind value \`false\` will render disabled="false" instead of removing it in Vue 3. To remove the attribute, use \`null\` or \`undefined\` instead. If the usage is intended, you can disable the compat behavior and suppress this warning with:

  configureCompat({ ATTR_FALSE_VALUE: false })

  Details: https://v3-migration.vuejs.org/breaking-changes/attribute-coercion.html",
    "
",
    " at <BButton",
    "variant="outline-primary"",
    "onClick=fn<onClick>",
    ">",
    "
",
    " at <BTab",
    "title=undefined",
    ">",
    "
",
    " at <SettingsTab",
    "properties=",
    {
      "condition": {
        "disabled": false,
      },
      "temporalConstraints": {
        "disabled": true,
      },
    },
    "resourcePath="resourcePath"",
    "resourceName="resourceName"",
    " ...",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation ATTR_FALSE_VALUE) Attribute "exact" with v-bind value \`false\` will render exact="false" instead of removing it in Vue 3. To remove the attribute, use \`null\` or \`undefined\` instead. If the usage is intended, you can disable the compat behavior and suppress this warning with:

  configureCompat({ ATTR_FALSE_VALUE: false })

  Details: https://v3-migration.vuejs.org/breaking-changes/attribute-coercion.html",
    "
",
    " at <BButton",
    "variant="outline-primary"",
    "onClick=fn<onClick>",
    ">",
    "
",
    " at <BTab",
    "title=undefined",
    ">",
    "
",
    " at <SettingsTab",
    "properties=",
    {
      "condition": {
        "disabled": false,
      },
      "temporalConstraints": {
        "disabled": true,
      },
    },
    "resourcePath="resourcePath"",
    "resourceName="resourceName"",
    " ...",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation ATTR_FALSE_VALUE) Attribute "exactPath" with v-bind value \`false\` will render exactPath="false" instead of removing it in Vue 3. To remove the attribute, use \`null\` or \`undefined\` instead. If the usage is intended, you can disable the compat behavior and suppress this warning with:

  configureCompat({ ATTR_FALSE_VALUE: false })

  Details: https://v3-migration.vuejs.org/breaking-changes/attribute-coercion.html",
    "
",
    " at <BButton",
    "variant="outline-primary"",
    "onClick=fn<onClick>",
    ">",
    "
",
    " at <BTab",
    "title=undefined",
    ">",
    "
",
    " at <SettingsTab",
    "properties=",
    {
      "condition": {
        "disabled": false,
      },
      "temporalConstraints": {
        "disabled": true,
      },
    },
    "resourcePath="resourcePath"",
    "resourceName="resourceName"",
    " ...",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation ATTR_FALSE_VALUE) Attribute "noPrefetch" with v-bind value \`false\` will render noPrefetch="false" instead of removing it in Vue 3. To remove the attribute, use \`null\` or \`undefined\` instead. If the usage is intended, you can disable the compat behavior and suppress this warning with:

  configureCompat({ ATTR_FALSE_VALUE: false })

  Details: https://v3-migration.vuejs.org/breaking-changes/attribute-coercion.html",
    "
",
    " at <BButton",
    "variant="outline-primary"",
    "onClick=fn<onClick>",
    ">",
    "
",
    " at <BTab",
    "title=undefined",
    ">",
    "
",
    " at <SettingsTab",
    "properties=",
    {
      "condition": {
        "disabled": false,
      },
      "temporalConstraints": {
        "disabled": true,
      },
    },
    "resourcePath="resourcePath"",
    "resourceName="resourceName"",
    " ...",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation ATTR_FALSE_VALUE) Attribute "pill" with v-bind value \`false\` will render pill="false" instead of removing it in Vue 3. To remove the attribute, use \`null\` or \`undefined\` instead. If the usage is intended, you can disable the compat behavior and suppress this warning with:

  configureCompat({ ATTR_FALSE_VALUE: false })

  Details: https://v3-migration.vuejs.org/breaking-changes/attribute-coercion.html",
    "
",
    " at <BButton",
    "variant="outline-primary"",
    "onClick=fn<onClick>",
    ">",
    "
",
    " at <BTab",
    "title=undefined",
    ">",
    "
",
    " at <SettingsTab",
    "properties=",
    {
      "condition": {
        "disabled": false,
      },
      "temporalConstraints": {
        "disabled": true,
      },
    },
    "resourcePath="resourcePath"",
    "resourceName="resourceName"",
    " ...",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation ATTR_FALSE_VALUE) Attribute "replace" with v-bind value \`false\` will render replace="false" instead of removing it in Vue 3. To remove the attribute, use \`null\` or \`undefined\` instead. If the usage is intended, you can disable the compat behavior and suppress this warning with:

  configureCompat({ ATTR_FALSE_VALUE: false })

  Details: https://v3-migration.vuejs.org/breaking-changes/attribute-coercion.html",
    "
",
    " at <BButton",
    "variant="outline-primary"",
    "onClick=fn<onClick>",
    ">",
    "
",
    " at <BTab",
    "title=undefined",
    ">",
    "
",
    " at <SettingsTab",
    "properties=",
    {
      "condition": {
        "disabled": false,
      },
      "temporalConstraints": {
        "disabled": true,
      },
    },
    "resourcePath="resourcePath"",
    "resourceName="resourceName"",
    " ...",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation ATTR_FALSE_VALUE) Attribute "squared" with v-bind value \`false\` will render squared="false" instead of removing it in Vue 3. To remove the attribute, use \`null\` or \`undefined\` instead. If the usage is intended, you can disable the compat behavior and suppress this warning with:

  configureCompat({ ATTR_FALSE_VALUE: false })

  Details: https://v3-migration.vuejs.org/breaking-changes/attribute-coercion.html",
    "
",
    " at <BButton",
    "variant="outline-primary"",
    "onClick=fn<onClick>",
    ">",
    "
",
    " at <BTab",
    "title=undefined",
    ">",
    "
",
    " at <SettingsTab",
    "properties=",
    {
      "condition": {
        "disabled": false,
      },
      "temporalConstraints": {
        "disabled": true,
      },
    },
    "resourcePath="resourcePath"",
    "resourceName="resourceName"",
    " ...",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation RENDER_FUNCTION) (2)",
    "
",
    " at <BModal",
    "id="settingsModal"",
    "ref="settingsModal"",
    "size="lg"",
    " ...",
    ">",
    "
",
    " at <BTab",
    "title=undefined",
    ">",
    "
",
    " at <SettingsTab",
    "properties=",
    {
      "condition": {
        "disabled": false,
      },
      "temporalConstraints": {
        "disabled": true,
      },
    },
    "resourcePath="resourcePath"",
    "resourceName="resourceName"",
    " ...",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation OPTIONS_BEFORE_DESTROY) \`beforeDestroy\` has been renamed to \`beforeUnmount\`.",
    "
",
    " at <BModal",
    "id="settingsModal"",
    "ref="settingsModal"",
    "size="lg"",
    " ...",
    ">",
    "
",
    " at <BTab",
    "title=undefined",
    ">",
    "
",
    " at <SettingsTab",
    "properties=",
    {
      "condition": {
        "disabled": false,
      },
      "temporalConstraints": {
        "disabled": true,
      },
    },
    "resourcePath="resourcePath"",
    "resourceName="resourceName"",
    " ...",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation ATTR_FALSE_VALUE) (2)",
    "
",
    " at <BTab",
    "title=undefined",
    ">",
    "
",
    " at <SettingsTab",
    "properties=",
    {
      "condition": {
        "disabled": false,
      },
      "temporalConstraints": {
        "disabled": true,
      },
    },
    "resourcePath="resourcePath"",
    "resourceName="resourceName"",
    " ...",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation ATTR_FALSE_VALUE) (2)",
    "
",
    " at <BTab",
    "title=undefined",
    ">",
    "
",
    " at <SettingsTab",
    "properties=",
    {
      "condition": {
        "disabled": false,
      },
      "temporalConstraints": {
        "disabled": true,
      },
    },
    "resourcePath="resourcePath"",
    "resourceName="resourceName"",
    " ...",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation ATTR_FALSE_VALUE) Attribute "lazy" with v-bind value \`false\` will render lazy="false" instead of removing it in Vue 3. To remove the attribute, use \`null\` or \`undefined\` instead. If the usage is intended, you can disable the compat behavior and suppress this warning with:

  configureCompat({ ATTR_FALSE_VALUE: false })

  Details: https://v3-migration.vuejs.org/breaking-changes/attribute-coercion.html",
    "
",
    " at <BTab",
    "title=undefined",
    ">",
    "
",
    " at <SettingsTab",
    "properties=",
    {
      "condition": {
        "disabled": false,
      },
      "temporalConstraints": {
        "disabled": true,
      },
    },
    "resourcePath="resourcePath"",
    "resourceName="resourceName"",
    " ...",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation ATTR_FALSE_VALUE) Attribute "noBody" with v-bind value \`false\` will render noBody="false" instead of removing it in Vue 3. To remove the attribute, use \`null\` or \`undefined\` instead. If the usage is intended, you can disable the compat behavior and suppress this warning with:

  configureCompat({ ATTR_FALSE_VALUE: false })

  Details: https://v3-migration.vuejs.org/breaking-changes/attribute-coercion.html",
    "
",
    " at <BTab",
    "title=undefined",
    ">",
    "
",
    " at <SettingsTab",
    "properties=",
    {
      "condition": {
        "disabled": false,
      },
      "temporalConstraints": {
        "disabled": true,
      },
    },
    "resourcePath="resourcePath"",
    "resourceName="resourceName"",
    " ...",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation INSTANCE_EVENT_EMITTER) vm.$on/$once/$off() have been removed. Use an external event emitter library instead.
  Details: https://v3-migration.vuejs.org/breaking-changes/events-api.html",
  ],
]
`;

exports[`SettingsTab shows modal: console-warn-snapshot 1`] = `
[
  [
    "[Vue warn]: (deprecation INSTANCE_SCOPED_SLOTS) vm.$scopedSlots has been removed. Use vm.$slots instead.
  Details: https://v3-migration.vuejs.org/breaking-changes/slots-unification.html",
    "
",
    " at <BModal",
    "id="settingsModal"",
    "ref="settingsModal"",
    "size="lg"",
    " ...",
    ">",
    "
",
    " at <BTab",
    "title=undefined",
    ">",
    "
",
    " at <SettingsTab",
    "properties=",
    {
      "condition": {
        "disabled": false,
      },
      "temporalConstraints": {
        "disabled": true,
      },
    },
    "resourcePath="resourcePath"",
    "resourceName="resourceName"",
    " ...",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation GLOBAL_EXTEND) (3)",
    "
",
    " at <BModal",
    "id="settingsModal"",
    "ref="settingsModal"",
    "size="lg"",
    " ...",
    ">",
    "
",
    " at <BTab",
    "title=undefined",
    ">",
    "
",
    " at <SettingsTab",
    "properties=",
    {
      "condition": {
        "disabled": false,
      },
      "temporalConstraints": {
        "disabled": true,
      },
    },
    "resourcePath="resourcePath"",
    "resourceName="resourceName"",
    " ...",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation ATTR_FALSE_VALUE) (3)",
    "
",
    " at <BButtonClose",
    "onClick=fn<bound onClose>",
    "ref="close-button"",
    "content="&times;"",
    " ...",
    ">",
    "
",
    " at <Transition",
    "onBeforeEnter=fn<bound onBeforeEnter>",
    "onEnter=fn<bound onEnter>",
    "onAfterEnter=fn<bound onAfterEnter>",
    " ...",
    ">",
    "
",
    " at <BVTransporter>",
    "
",
    " at <BModal",
    "id="settingsModal"",
    "ref="settingsModal"",
    "size="lg"",
    " ...",
    ">",
    "
",
    " at <BTab",
    "title=undefined",
    ">",
    "
",
    " at <SettingsTab",
    "properties=",
    {
      "condition": {
        "disabled": false,
      },
      "temporalConstraints": {
        "disabled": true,
      },
    },
    "resourcePath="resourcePath"",
    "resourceName="resourceName"",
    " ...",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation ATTR_FALSE_VALUE) Attribute "canEnterPlaceholders" with v-bind value \`false\` will render canEnterPlaceholders="false" instead of removing it in Vue 3. To remove the attribute, use \`null\` or \`undefined\` instead. If the usage is intended, you can disable the compat behavior and suppress this warning with:

  configureCompat({ ATTR_FALSE_VALUE: false })

  Details: https://v3-migration.vuejs.org/breaking-changes/attribute-coercion.html",
    "
",
    " at <FrField",
    "value=false",
    "class="mb-4"",
    "type="boolean"",
    " ...",
    ">",
    "
",
    " at <Transition",
    "onBeforeEnter=fn<bound onBeforeEnter>",
    "onEnter=fn<bound onEnter>",
    "onAfterEnter=fn<bound onAfterEnter>",
    " ...",
    ">",
    "
",
    " at <BVTransporter>",
    "
",
    " at <BModal",
    "id="settingsModal"",
    "ref="settingsModal"",
    "size="lg"",
    " ...",
    ">",
    "
",
    " at <BTab",
    "title=undefined",
    ">",
    "
",
    " at <SettingsTab",
    "properties=",
    {
      "condition": {
        "disabled": false,
      },
      "temporalConstraints": {
        "disabled": true,
      },
    },
    "resourcePath="resourcePath"",
    "resourceName="resourceName"",
    " ...",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation ATTR_FALSE_VALUE) Attribute "value" with v-bind value \`false\` will render value="false" instead of removing it in Vue 3. To remove the attribute, use \`null\` or \`undefined\` instead. If the usage is intended, you can disable the compat behavior and suppress this warning with:

  configureCompat({ ATTR_FALSE_VALUE: false })

  Details: https://v3-migration.vuejs.org/breaking-changes/attribute-coercion.html",
    "
",
    " at <FrField",
    "value=false",
    "class="mb-4"",
    "type="boolean"",
    " ...",
    ">",
    "
",
    " at <Transition",
    "onBeforeEnter=fn<bound onBeforeEnter>",
    "onEnter=fn<bound onEnter>",
    "onAfterEnter=fn<bound onAfterEnter>",
    " ...",
    ">",
    "
",
    " at <BVTransporter>",
    "
",
    " at <BModal",
    "id="settingsModal"",
    "ref="settingsModal"",
    "size="lg"",
    " ...",
    ">",
    "
",
    " at <BTab",
    "title=undefined",
    ">",
    "
",
    " at <SettingsTab",
    "properties=",
    {
      "condition": {
        "disabled": false,
      },
      "temporalConstraints": {
        "disabled": true,
      },
    },
    "resourcePath="resourcePath"",
    "resourceName="resourceName"",
    " ...",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation ATTR_FALSE_VALUE) Attribute "appear" with v-bind value \`false\` will render appear="false" instead of removing it in Vue 3. To remove the attribute, use \`null\` or \`undefined\` instead. If the usage is intended, you can disable the compat behavior and suppress this warning with:

  configureCompat({ ATTR_FALSE_VALUE: false })

  Details: https://v3-migration.vuejs.org/breaking-changes/attribute-coercion.html",
    "
",
    " at <Transition",
    "onBeforeEnter=fn<bound onBeforeEnter>",
    "onEnter=fn<bound onEnter>",
    "onAfterEnter=fn<bound onAfterEnter>",
    " ...",
    ">",
    "
",
    " at <BVTransporter>",
    "
",
    " at <BModal",
    "id="settingsModal"",
    "ref="settingsModal"",
    "size="lg"",
    " ...",
    ">",
    "
",
    " at <BTab",
    "title=undefined",
    ">",
    "
",
    " at <SettingsTab",
    "properties=",
    {
      "condition": {
        "disabled": false,
      },
      "temporalConstraints": {
        "disabled": true,
      },
    },
    "resourcePath="resourcePath"",
    "resourceName="resourceName"",
    " ...",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation ATTR_FALSE_VALUE) Attribute "persisted" with v-bind value \`false\` will render persisted="false" instead of removing it in Vue 3. To remove the attribute, use \`null\` or \`undefined\` instead. If the usage is intended, you can disable the compat behavior and suppress this warning with:

  configureCompat({ ATTR_FALSE_VALUE: false })

  Details: https://v3-migration.vuejs.org/breaking-changes/attribute-coercion.html",
    "
",
    " at <Transition",
    "onBeforeEnter=fn<bound onBeforeEnter>",
    "onEnter=fn<bound onEnter>",
    "onAfterEnter=fn<bound onAfterEnter>",
    " ...",
    ">",
    "
",
    " at <BVTransporter>",
    "
",
    " at <BModal",
    "id="settingsModal"",
    "ref="settingsModal"",
    "size="lg"",
    " ...",
    ">",
    "
",
    " at <BTab",
    "title=undefined",
    ">",
    "
",
    " at <SettingsTab",
    "properties=",
    {
      "condition": {
        "disabled": false,
      },
      "temporalConstraints": {
        "disabled": true,
      },
    },
    "resourcePath="resourcePath"",
    "resourceName="resourceName"",
    " ...",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation ATTR_FALSE_VALUE) (2)",
    "
",
    " at <BVTransition",
    "noFade=false",
    ">",
    "
",
    " at <BVTransporter>",
    "
",
    " at <BModal",
    "id="settingsModal"",
    "ref="settingsModal"",
    "size="lg"",
    " ...",
    ">",
    "
",
    " at <BTab",
    "title=undefined",
    ">",
    "
",
    " at <SettingsTab",
    "properties=",
    {
      "condition": {
        "disabled": false,
      },
      "temporalConstraints": {
        "disabled": true,
      },
    },
    "resourcePath="resourcePath"",
    "resourceName="resourceName"",
    " ...",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation ATTR_FALSE_VALUE) Attribute "noFade" with v-bind value \`false\` will render noFade="false" instead of removing it in Vue 3. To remove the attribute, use \`null\` or \`undefined\` instead. If the usage is intended, you can disable the compat behavior and suppress this warning with:

  configureCompat({ ATTR_FALSE_VALUE: false })

  Details: https://v3-migration.vuejs.org/breaking-changes/attribute-coercion.html",
    "
",
    " at <BVTransition",
    "noFade=false",
    ">",
    "
",
    " at <BVTransporter>",
    "
",
    " at <BModal",
    "id="settingsModal"",
    "ref="settingsModal"",
    "size="lg"",
    " ...",
    ">",
    "
",
    " at <BTab",
    "title=undefined",
    ">",
    "
",
    " at <SettingsTab",
    "properties=",
    {
      "condition": {
        "disabled": false,
      },
      "temporalConstraints": {
        "disabled": true,
      },
    },
    "resourcePath="resourcePath"",
    "resourceName="resourceName"",
    " ...",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation ATTR_FALSE_VALUE) (4)",
    "
",
    " at <BVTransporter>",
    "
",
    " at <BModal",
    "id="settingsModal"",
    "ref="settingsModal"",
    "size="lg"",
    " ...",
    ">",
    "
",
    " at <BTab",
    "title=undefined",
    ">",
    "
",
    " at <SettingsTab",
    "properties=",
    {
      "condition": {
        "disabled": false,
      },
      "temporalConstraints": {
        "disabled": true,
      },
    },
    "resourcePath="resourcePath"",
    "resourceName="resourceName"",
    " ...",
    ">",
    "
",
    " at <VTUROOT>",
  ],
]
`;
