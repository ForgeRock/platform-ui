// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TimeInput builds a formatted time: console-warn-snapshot 1`] = `
[
  [
    "[Vue warn]: (deprecation RENDER_FUNCTION) Vue 3's render function API has changed. You can opt-in to the new API with:

  configureCompat({ RENDER_FUNCTION: false })

  (This can also be done per-component via the "compatConfig" option.)
  Details: https://v3-migration.vuejs.org/breaking-changes/render-function-api.html",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation WATCH_ARRAY) (2)",
    "
",
    " at <TimeInput",
    "id=""",
    "errorMessages=",
    [],
    "name=""",
    " ...",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation GLOBAL_EXTEND) (2)",
    "
",
    " at <TimeInput",
    "id=""",
    "errorMessages=",
    [],
    "name=""",
    " ...",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation COMPONENT_V_MODEL) v-model usage on component has changed in Vue 3. Component that expects to work with v-model should now use the "modelValue" prop and emit the "update:modelValue" event. You can update the usage and then opt-in to Vue 3 behavior on a per-component basis with \`compatConfig: { COMPONENT_V_MODEL: false }\`.
  Details: https://v3-migration.vuejs.org/breaking-changes/v-model.html",
    "
",
    " at <BFormTimepicker",
    "modelValue=""",
    "onUpdate:modelValue=fn",
    "dropleft=true",
    " ...",
    ">",
  ],
  [
    "[Vue warn]: (deprecation ATTR_FALSE_VALUE) Attribute "isHtml" with v-bind value \`false\` will render isHtml="false" instead of removing it in Vue 3. To remove the attribute, use \`null\` or \`undefined\` instead. If the usage is intended, you can disable the compat behavior and suppress this warning with:

  configureCompat({ ATTR_FALSE_VALUE: false })

  Details: https://v3-migration.vuejs.org/breaking-changes/attribute-coercion.html",
    "
",
    " at <FrInputLayout",
    "id="floatingLabelInput3"",
    "name=""",
    "description=""",
    " ...",
    ">",
    "
",
    " at <TimeInput",
    "id=""",
    "errorMessages=",
    [],
    "name=""",
    " ...",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation ATTR_FALSE_VALUE) Attribute "readonlyLabel" with v-bind value \`false\` will render readonlyLabel="false" instead of removing it in Vue 3. To remove the attribute, use \`null\` or \`undefined\` instead. If the usage is intended, you can disable the compat behavior and suppress this warning with:

  configureCompat({ ATTR_FALSE_VALUE: false })

  Details: https://v3-migration.vuejs.org/breaking-changes/attribute-coercion.html",
    "
",
    " at <FrInputLayout",
    "id="floatingLabelInput3"",
    "name=""",
    "description=""",
    " ...",
    ">",
    "
",
    " at <TimeInput",
    "id=""",
    "errorMessages=",
    [],
    "name=""",
    " ...",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation ATTR_FALSE_VALUE) Attribute "showLengthCount" with v-bind value \`false\` will render showLengthCount="false" instead of removing it in Vue 3. To remove the attribute, use \`null\` or \`undefined\` instead. If the usage is intended, you can disable the compat behavior and suppress this warning with:

  configureCompat({ ATTR_FALSE_VALUE: false })

  Details: https://v3-migration.vuejs.org/breaking-changes/attribute-coercion.html",
    "
",
    " at <FrInputLayout",
    "id="floatingLabelInput3"",
    "name=""",
    "description=""",
    " ...",
    ">",
    "
",
    " at <TimeInput",
    "id=""",
    "errorMessages=",
    [],
    "name=""",
    " ...",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation ATTR_FALSE_VALUE) Attribute "disabled" with v-bind value \`false\` will render disabled="false" instead of removing it in Vue 3. To remove the attribute, use \`null\` or \`undefined\` instead. If the usage is intended, you can disable the compat behavior and suppress this warning with:

  configureCompat({ ATTR_FALSE_VALUE: false })

  Details: https://v3-migration.vuejs.org/breaking-changes/attribute-coercion.html",
    "
",
    " at <BFormTimepicker",
    "dropleft=true",
    "button-only=""",
    "label-help=""",
    " ...",
    ">",
    "
",
    " at <TimeInput",
    "id=""",
    "errorMessages=",
    [],
    "name=""",
    " ...",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation ATTR_FALSE_VALUE) Attribute "dropright" with v-bind value \`false\` will render dropright="false" instead of removing it in Vue 3. To remove the attribute, use \`null\` or \`undefined\` instead. If the usage is intended, you can disable the compat behavior and suppress this warning with:

  configureCompat({ ATTR_FALSE_VALUE: false })

  Details: https://v3-migration.vuejs.org/breaking-changes/attribute-coercion.html",
    "
",
    " at <BFormTimepicker",
    "dropleft=true",
    "button-only=""",
    "label-help=""",
    " ...",
    ">",
    "
",
    " at <TimeInput",
    "id=""",
    "errorMessages=",
    [],
    "name=""",
    " ...",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation ATTR_FALSE_VALUE) Attribute "dropup" with v-bind value \`false\` will render dropup="false" instead of removing it in Vue 3. To remove the attribute, use \`null\` or \`undefined\` instead. If the usage is intended, you can disable the compat behavior and suppress this warning with:

  configureCompat({ ATTR_FALSE_VALUE: false })

  Details: https://v3-migration.vuejs.org/breaking-changes/attribute-coercion.html",
    "
",
    " at <BFormTimepicker",
    "dropleft=true",
    "button-only=""",
    "label-help=""",
    " ...",
    ">",
    "
",
    " at <TimeInput",
    "id=""",
    "errorMessages=",
    [],
    "name=""",
    " ...",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation ATTR_FALSE_VALUE) Attribute "hideHeader" with v-bind value \`false\` will render hideHeader="false" instead of removing it in Vue 3. To remove the attribute, use \`null\` or \`undefined\` instead. If the usage is intended, you can disable the compat behavior and suppress this warning with:

  configureCompat({ ATTR_FALSE_VALUE: false })

  Details: https://v3-migration.vuejs.org/breaking-changes/attribute-coercion.html",
    "
",
    " at <BFormTimepicker",
    "dropleft=true",
    "button-only=""",
    "label-help=""",
    " ...",
    ">",
    "
",
    " at <TimeInput",
    "id=""",
    "errorMessages=",
    [],
    "name=""",
    " ...",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation ATTR_FALSE_VALUE) Attribute "noFlip" with v-bind value \`false\` will render noFlip="false" instead of removing it in Vue 3. To remove the attribute, use \`null\` or \`undefined\` instead. If the usage is intended, you can disable the compat behavior and suppress this warning with:

  configureCompat({ ATTR_FALSE_VALUE: false })

  Details: https://v3-migration.vuejs.org/breaking-changes/attribute-coercion.html",
    "
",
    " at <BFormTimepicker",
    "dropleft=true",
    "button-only=""",
    "label-help=""",
    " ...",
    ">",
    "
",
    " at <TimeInput",
    "id=""",
    "errorMessages=",
    [],
    "name=""",
    " ...",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation ATTR_FALSE_VALUE) Attribute "nowButton" with v-bind value \`false\` will render nowButton="false" instead of removing it in Vue 3. To remove the attribute, use \`null\` or \`undefined\` instead. If the usage is intended, you can disable the compat behavior and suppress this warning with:

  configureCompat({ ATTR_FALSE_VALUE: false })

  Details: https://v3-migration.vuejs.org/breaking-changes/attribute-coercion.html",
    "
",
    " at <BFormTimepicker",
    "dropleft=true",
    "button-only=""",
    "label-help=""",
    " ...",
    ">",
    "
",
    " at <TimeInput",
    "id=""",
    "errorMessages=",
    [],
    "name=""",
    " ...",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation ATTR_FALSE_VALUE) Attribute "required" with v-bind value \`false\` will render required="false" instead of removing it in Vue 3. To remove the attribute, use \`null\` or \`undefined\` instead. If the usage is intended, you can disable the compat behavior and suppress this warning with:

  configureCompat({ ATTR_FALSE_VALUE: false })

  Details: https://v3-migration.vuejs.org/breaking-changes/attribute-coercion.html",
    "
",
    " at <BFormTimepicker",
    "dropleft=true",
    "button-only=""",
    "label-help=""",
    " ...",
    ">",
    "
",
    " at <TimeInput",
    "id=""",
    "errorMessages=",
    [],
    "name=""",
    " ...",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation ATTR_FALSE_VALUE) Attribute "resetButton" with v-bind value \`false\` will render resetButton="false" instead of removing it in Vue 3. To remove the attribute, use \`null\` or \`undefined\` instead. If the usage is intended, you can disable the compat behavior and suppress this warning with:

  configureCompat({ ATTR_FALSE_VALUE: false })

  Details: https://v3-migration.vuejs.org/breaking-changes/attribute-coercion.html",
    "
",
    " at <BFormTimepicker",
    "dropleft=true",
    "button-only=""",
    "label-help=""",
    " ...",
    ">",
    "
",
    " at <TimeInput",
    "id=""",
    "errorMessages=",
    [],
    "name=""",
    " ...",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation ATTR_FALSE_VALUE) Attribute "right" with v-bind value \`false\` will render right="false" instead of removing it in Vue 3. To remove the attribute, use \`null\` or \`undefined\` instead. If the usage is intended, you can disable the compat behavior and suppress this warning with:

  configureCompat({ ATTR_FALSE_VALUE: false })

  Details: https://v3-migration.vuejs.org/breaking-changes/attribute-coercion.html",
    "
",
    " at <BFormTimepicker",
    "dropleft=true",
    "button-only=""",
    "label-help=""",
    " ...",
    ">",
    "
",
    " at <TimeInput",
    "id=""",
    "errorMessages=",
    [],
    "name=""",
    " ...",
    ">",
    "
",
    " at <VTUROOT>",
  ],
]
`;
