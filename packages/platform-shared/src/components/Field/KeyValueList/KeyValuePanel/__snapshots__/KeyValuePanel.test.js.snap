// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`KeyValuePanel Can override default labels: console-warn-snapshot 1`] = `
[
  [
    "[Vue warn]: (deprecation RENDER_FUNCTION) Vue 3's render function API has changed. You can opt-in to the new API with:

  configureCompat({ RENDER_FUNCTION: false })

  (This can also be done per-component via the "compatConfig" option.)
  Details: https://v3-migration.vuejs.org/breaking-changes/render-function-api.html",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation WATCH_ARRAY) (2)",
    "
",
    " at <KeyValuePanel",
    "value=",
    {
      "key": "",
      "keyLabel": "test key label",
      "value": "",
      "valueLabel": "test value label",
    },
    "ref="VTU_COMPONENT"",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation GLOBAL_EXTEND) (2)",
    "
",
    " at <Form",
    "as="span"",
    ">",
    "
",
    " at <KeyValuePanel",
    "value=",
    {
      "key": "",
      "keyLabel": "test key label",
      "value": "",
      "valueLabel": "test value label",
    },
    "ref="VTU_COMPONENT"",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation COMPONENT_FUNCTIONAL) Functional component <BButton> should be defined as a plain function in Vue 3. The "functional" option has been removed. NOTE: Before migrating to use plain functions for functional components, first make sure that all async components usage have been migrated and its compat behavior has been disabled.
  Details: https://v3-migration.vuejs.org/breaking-changes/functional-components.html",
    "
",
    " at <Form",
    "as="span"",
    ">",
    "
",
    " at <KeyValuePanel",
    "value=",
    {
      "key": "",
      "keyLabel": "test key label",
      "value": "",
      "valueLabel": "test value label",
    },
    "ref="VTU_COMPONENT"",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation RENDER_FUNCTION) (2)",
    "
",
    " at <BFormGroup",
    "class="mb-3"",
    ">",
    "
",
    " at <Form",
    "as="span"",
    ">",
    "
",
    " at <KeyValuePanel",
    "value=",
    {
      "key": "",
      "keyLabel": "test key label",
      "value": "",
      "valueLabel": "test value label",
    },
    "ref="VTU_COMPONENT"",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation INSTANCE_SCOPED_SLOTS) vm.$scopedSlots has been removed. Use vm.$slots instead.
  Details: https://v3-migration.vuejs.org/breaking-changes/slots-unification.html",
    "
",
    " at <BFormGroup",
    "class="mb-3"",
    ">",
    "
",
    " at <Form",
    "as="span"",
    ">",
    "
",
    " at <KeyValuePanel",
    "value=",
    {
      "key": "",
      "keyLabel": "test key label",
      "value": "",
      "valueLabel": "test value label",
    },
    "ref="VTU_COMPONENT"",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation COMPONENT_V_MODEL) v-model usage on component has changed in Vue 3. Component that expects to work with v-model should now use the "modelValue" prop and emit the "update:modelValue" event. You can update the usage and then opt-in to Vue 3 behavior on a per-component basis with \`compatConfig: { COMPONENT_V_MODEL: false }\`.
  Details: https://v3-migration.vuejs.org/breaking-changes/v-model.html",
    "
",
    " at <BasicInput",
    "key=1",
    "modelValue=""",
    "onUpdate:modelValue=fn",
    " ...",
    ">",
  ],
  [
    "[Vue warn]: (deprecation ATTR_FALSE_VALUE) Attribute "placeholder" with v-bind value \`false\` will render placeholder="false" instead of removing it in Vue 3. To remove the attribute, use \`null\` or \`undefined\` instead. If the usage is intended, you can disable the compat behavior and suppress this warning with:

  configureCompat({ ATTR_FALSE_VALUE: false })

  Details: https://v3-migration.vuejs.org/breaking-changes/attribute-coercion.html",
    "
",
    " at <InputLayout",
    "id="floatingLabelInput6"",
    "name="test key label"",
    "description=""",
    " ...",
    ">",
    "
",
    " at <BasicInput",
    "key=1",
    "type="string"",
    "autofocus=true",
    " ...",
    ">",
    "
",
    " at <BFormGroup",
    "class="mb-3"",
    ">",
    "
",
    " at <Form",
    "as="span"",
    ">",
    "
",
    " at <KeyValuePanel",
    "value=",
    {
      "key": "",
      "keyLabel": "test key label",
      "value": "",
      "valueLabel": "test value label",
    },
    "ref="VTU_COMPONENT"",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation ATTR_FALSE_VALUE) Attribute "aria-describedby" with v-bind value \`false\` will render aria-describedby="false" instead of removing it in Vue 3. To remove the attribute, use \`null\` or \`undefined\` instead. If the usage is intended, you can disable the compat behavior and suppress this warning with:

  configureCompat({ ATTR_FALSE_VALUE: false })

  Details: https://v3-migration.vuejs.org/breaking-changes/attribute-coercion.html",
    "
",
    " at <InputLayout",
    "id="floatingLabelInput6"",
    "name="test key label"",
    "description=""",
    " ...",
    ">",
    "
",
    " at <BasicInput",
    "key=1",
    "type="string"",
    "autofocus=true",
    " ...",
    ">",
    "
",
    " at <BFormGroup",
    "class="mb-3"",
    ">",
    "
",
    " at <Form",
    "as="span"",
    ">",
    "
",
    " at <KeyValuePanel",
    "value=",
    {
      "key": "",
      "keyLabel": "test key label",
      "value": "",
      "valueLabel": "test value label",
    },
    "ref="VTU_COMPONENT"",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation COMPONENT_V_MODEL) (2)",
    "
",
    " at <TextArea",
    "modelValue=""",
    "onUpdate:modelValue=fn",
    "validation="required"",
    " ...",
    ">",
  ],
  [
    "[Vue warn]: (deprecation INSTANCE_LISTENERS) vm.$listeners has been removed. In Vue 3, parent v-on listeners are included in vm.$attrs and it is no longer necessary to separately use v-on="$listeners" if you are already using v-bind="$attrs". (Note: the Vue 3 behavior only applies if this compat config is disabled)
  Details: https://v3-migration.vuejs.org/breaking-changes/listeners-removed.html",
    "
",
    " at <BButton",
    "onClick=fn",
    "disabled=false",
    "variant="outline-primary"",
    ">",
    "
",
    " at <Form",
    "as="span"",
    ">",
    "
",
    " at <KeyValuePanel",
    "value=",
    {
      "key": "",
      "keyLabel": "test key label",
      "value": "",
      "valueLabel": "test value label",
    },
    "ref="VTU_COMPONENT"",
    ">",
    "
",
    " at <VTUROOT>",
  ],
]
`;

exports[`KeyValuePanel Will have a select with options when keyOptions prop is provided: console-warn-snapshot 1`] = `
[
  [
    "[Vue warn]: (deprecation COMPONENT_V_MODEL) (3)",
    "
",
    " at <SelectInput",
    "key=0",
    "ref="select"",
    "modelValue=""",
    " ...",
    ">",
  ],
  [
    "[Vue warn]: (deprecation WATCH_ARRAY) (3)",
    "
",
    " at <SelectInput",
    "key=0",
    "ref="select"",
    "name="common.key"",
    " ...",
    ">",
    "
",
    " at <BFormGroup",
    "class="mb-3"",
    ">",
    "
",
    " at <Form",
    "as="span"",
    ">",
    "
",
    " at <KeyValuePanel",
    "value=",
    {
      "key": "",
      "value": "",
    },
    "keyOptions=",
    [
      "option 1",
      "option 2",
    ],
    "ref="VTU_COMPONENT"",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation WATCH_ARRAY) (4)",
    "
",
    " at <VueMultiselect",
    "id="floatingLabelInput32"",
    "ref="vms"",
    "value=""",
    " ...",
    ">",
    "
",
    " at <InputLayout",
    "id="floatingLabelInput32"",
    "name="common.key"",
    "description=""",
    " ...",
    ">",
    "
",
    " at <SelectInput",
    "key=0",
    "ref="select"",
    "name="common.key"",
    " ...",
    ">",
    "
",
    " at <BFormGroup",
    "class="mb-3"",
    ">",
    "
",
    " at <Form",
    "as="span"",
    ">",
    "
",
    " at <KeyValuePanel",
    "value=",
    {
      "key": "",
      "value": "",
    },
    "keyOptions=",
    [
      "option 1",
      "option 2",
    ],
    "ref="VTU_COMPONENT"",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation ATTR_FALSE_VALUE) Attribute "appear" with v-bind value \`false\` will render appear="false" instead of removing it in Vue 3. To remove the attribute, use \`null\` or \`undefined\` instead. If the usage is intended, you can disable the compat behavior and suppress this warning with:

  configureCompat({ ATTR_FALSE_VALUE: false })

  Details: https://v3-migration.vuejs.org/breaking-changes/attribute-coercion.html",
    "
",
    " at <Transition",
    "name="multiselect__loading"",
    ">",
    "
",
    " at <VueMultiselect",
    "id="floatingLabelInput32"",
    "ref="vms"",
    "value=""",
    " ...",
    ">",
    "
",
    " at <InputLayout",
    "id="floatingLabelInput32"",
    "name="common.key"",
    "description=""",
    " ...",
    ">",
    "
",
    " at <SelectInput",
    "key=0",
    "ref="select"",
    "name="common.key"",
    " ...",
    ">",
    "
",
    " at <BFormGroup",
    "class="mb-3"",
    ">",
    "
",
    " at <Form",
    "as="span"",
    ">",
    "
",
    " at <KeyValuePanel",
    "value=",
    {
      "key": "",
      "value": "",
    },
    "keyOptions=",
    [
      "option 1",
      "option 2",
    ],
    "ref="VTU_COMPONENT"",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation ATTR_FALSE_VALUE) Attribute "persisted" with v-bind value \`false\` will render persisted="false" instead of removing it in Vue 3. To remove the attribute, use \`null\` or \`undefined\` instead. If the usage is intended, you can disable the compat behavior and suppress this warning with:

  configureCompat({ ATTR_FALSE_VALUE: false })

  Details: https://v3-migration.vuejs.org/breaking-changes/attribute-coercion.html",
    "
",
    " at <Transition",
    "name="multiselect__loading"",
    ">",
    "
",
    " at <VueMultiselect",
    "id="floatingLabelInput32"",
    "ref="vms"",
    "value=""",
    " ...",
    ">",
    "
",
    " at <InputLayout",
    "id="floatingLabelInput32"",
    "name="common.key"",
    "description=""",
    " ...",
    ">",
    "
",
    " at <SelectInput",
    "key=0",
    "ref="select"",
    "name="common.key"",
    " ...",
    ">",
    "
",
    " at <BFormGroup",
    "class="mb-3"",
    ">",
    "
",
    " at <Form",
    "as="span"",
    ">",
    "
",
    " at <KeyValuePanel",
    "value=",
    {
      "key": "",
      "value": "",
    },
    "keyOptions=",
    [
      "option 1",
      "option 2",
    ],
    "ref="VTU_COMPONENT"",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation ATTR_ENUMERATED_COERCION) Enumerated attribute "spellcheck" with v-bind value \`false\` will render the value as-is instead of coercing the value to "true" in Vue 3. Always use explicit "true" or "false" values for enumerated attributes. If the usage is intended, you can disable the compat behavior and suppress this warning with:

  configureCompat({ ATTR_ENUMERATED_COERCION: false })

  Details: https://v3-migration.vuejs.org/breaking-changes/attribute-coercion.html",
    "
",
    " at <VueMultiselect",
    "id="floatingLabelInput32"",
    "ref="vms"",
    "value=""",
    " ...",
    ">",
    "
",
    " at <InputLayout",
    "id="floatingLabelInput32"",
    "name="common.key"",
    "description=""",
    " ...",
    ">",
    "
",
    " at <SelectInput",
    "key=0",
    "ref="select"",
    "name="common.key"",
    " ...",
    ">",
    "
",
    " at <BFormGroup",
    "class="mb-3"",
    ">",
    "
",
    " at <Form",
    "as="span"",
    ">",
    "
",
    " at <KeyValuePanel",
    "value=",
    {
      "key": "",
      "value": "",
    },
    "keyOptions=",
    [
      "option 1",
      "option 2",
    ],
    "ref="VTU_COMPONENT"",
    ">",
    "
",
    " at <VTUROOT>",
  ],
]
`;

exports[`KeyValuePanel validateKey method prevents tagging if new key is already present in KeyValueList: console-warn-snapshot 1`] = `
[
  [
    "[Vue warn]: (deprecation ATTR_FALSE_VALUE) Attribute "taggable" with v-bind value \`false\` will render taggable="false" instead of removing it in Vue 3. To remove the attribute, use \`null\` or \`undefined\` instead. If the usage is intended, you can disable the compat behavior and suppress this warning with:

  configureCompat({ ATTR_FALSE_VALUE: false })

  Details: https://v3-migration.vuejs.org/breaking-changes/attribute-coercion.html",
    "
",
    " at <InputLayout",
    "id="floatingLabelInput61"",
    "name="common.key"",
    "description=""",
    " ...",
    ">",
    "
",
    " at <SelectInput",
    "key=0",
    "ref="select"",
    "name="common.key"",
    " ...",
    ">",
    "
",
    " at <BFormGroup",
    "class="mb-3"",
    ">",
    "
",
    " at <Form",
    "as="span"",
    ">",
    "
",
    " at <KeyValuePanel",
    "value=",
    {
      "key": "",
      "value": "",
    },
    "allKeyOptions=",
    [
      "option 1",
      "option 2",
    ],
    "keyOptions=",
    [
      "option 1",
    ],
    " ...",
    ">",
    "
",
    " at <VTUROOT>",
  ],
]
`;
