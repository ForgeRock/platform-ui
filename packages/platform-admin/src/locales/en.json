{
  "common": {
      "name": "Name",
      "description": "Description",
      "delete": "Delete",
      "save": "Save",
      "confirmDelete": "Confirm Delete",
      "cancel": "Cancel",
      "required": "Required"
  },
  "sideMenu": {
    "signOut": "Sign Out",
    "toggleSidebar": "Toggle sidebar",
    "dashboard": "Dashboard"
  },
  "application": {
    "errors": {
      "failedLogout": "Failed to logout of platform session"
    }
  },
  "authentication": {
    "title": "Authentication",
    "description": "Sign in users to your applicaiton using any of the out-of-the-box authentication services or customize them to suit your specific requirements.",
    "newAuthService": "New Authentication Service",
    "service": "Service",
    "duplicate": "Duplicate",
    "preview": "Preview",
    "confirmDeleteAuthService": "Are you sure you want to delete the \"{treeId}\" authentication service?",
    "authServiceDeleteSuccess": "\"{treeId}\" authentication service successfully deleted.",
    "noAuthServices": "No Authentication Services",
    "noAuthSercicesMessage": "Sign in users to your application by creating authentication services",
    "mustBeUnique": "Name must be a unique.",
    "errorRetrievingAuthServices": "Error retrieving authentication services",
    "errorCreatingAuthService": "Error creating authentication service",
    "errorDeletingAuthService": "Error deleting authentication service",
    "errorRetrievingAuthServiceTemplate": "Error retrieving authentication service template"
  },
  "dashboard": {
    "managedAccess": {
      "title": "Manage Access",
      "description": "Manage how your users can authenticate and gain access to your systems."
    },
    "managedIdentity": {
      "title": "Manage Identities",
      "description": "Manage where, when and how your users can change their information."
    },
    "welcome": {
      "title": "Welcome to ForgeRock!",
      "description": "With the Forgerock platform you can control access, identity management and much more.",
      "footer": "Get Started"
    }
  },
  "trees": {
    "nodeTypeList": {
      "failedNodeTypeList": "Failed to get available node types",
      "title": "Nodes"
    }
  },
  "components": {
    "noData": "No group data provided"
  }
}
