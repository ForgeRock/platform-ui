{
  "routeNames": {
    "Applications": "Applications",
    "BulkImport": "Import",
    "ConfigureManaged": "Configure Managed",
    "Connect": "Connect",
    "EditApplication": "Edit Application",
    "EditConnectorServer": "Edit Connector Server",
    "EditEmailTemplate": "Edit Email Template",
    "EditResource": "Edit Resource",
    "EditServerCluster": "Edit Server Cluster",
    "EditServerClusterServers": "Edit Server Cluster Servers",
    "EmailProvider": "Email Provider",
    "EmailTemplates": "Email Templates",
    "EmailTemplatePreview": "Email Template Preview",
    "ESV": "Environment Secrets & Variables",
    "HostedPages": "Hosted Pages",
    "Journeys": "Journeys",
    "JourneyTree": "Journey Tree",
    "ManagedIdentities": "Manage Identities",
    "ManagedObjectSettings": "Managed Object Settings",
    "PasswordPolicy": "Password Policy",
    "Profile": "Profile",
    "Realm": "Realm Settings",
    "TermsAndConditions": "Terms & Conditions"
  },
  "pageTitles": {
    "Applications": "Applications",
    "AutoAccessRisk": "Risk",
    "AutoAccessPipelines": "Pipelines",
    "AutoAccessRiskConfig": "RiskConfig",
    "AutoAccessDataSources": "Data Sources",
    "BulkImport": "Bulk Import",
    "ConfigureManaged": "Configure Managed",
    "Connect": "Connect",
    "Cors": "CORS",
    "CustomEndpoints": "Custom Endpoints",
    "Dashboard": "Dashboard",
    "EditApplication": "Edit Application",
    "EditConnectorServer": "Edit Connector Server",
    "EditEmailTemplate": "Edit Email Template",
    "EditGatewayOrAgent": "Edit Gateway Or Agent",
    "EditResource": "Edit Resource",
    "EditServerCluster": "Edit Server Cluster",
    "EditServerClusterServers": "Edit Server Cluster Servers",
    "EditTermsAndConditions": "Edit Terms And Conditions",
    "EmailProvider": "Email Provider",
    "EmailTemplates": "Email Templates",
    "EmailTemplatePreview": "Email Template Preview",
    "ESV": "Environment Secrets & Variables",
    "Events": "Event Hooks",
    "Forbidden": "Forbidden",
    "GatewaysAndAgents": "Gateways And Agents",
    "HostedPages": "Hosted Pages",
    "HostedPagesEdit": "Edit Hosted Pages",
    "hostedPagesSettings": "Hosted Pages Settings",
    "Journeys": "Journeys",
    "JourneyTree": "Journey Tree",
    "LogApiKeys": "Log API Keys",
    "ManagedIdentities": "Managed Identities",
    "ManagedObjectSettings": "Managed Object Settings",
    "NotFound": "Not Found",
    "pageTitle": "Platform Admin - {page}",
    "PasswordPolicy": "Password Policy",
    "Profile": "Profile",
    "Realm": "Realm",
    "Scripts": "Scripts",
    "SecurityQuestions": "Security Questions",
    "TenantAdmins": "Tenant Admins",
    "TenantSettings": "Tenant Settings",
    "TermsAndConditions": "Terms & Conditions"
  },
  "sideMenu": {
    "accessManagement": "Access Management",
    "applications": "Applications",
    "authentication": "Authentication",
    "authorizationRole": "Internal Role",
    "bulkImport": "Import",
    "configureManaged": "Configure",
    "connect": "Connect",
    "dataSources": "Data Sources",
    "email": "Email",
    "hostedPages": "Hosted Pages",
    "identities": "Identities",
    "identityManagement": "Identity Management",
    "journeys": "Journeys",
    "managed": "Manage",
    "nativeConsoles": "Native Consoles",
    "provider": "Provider",
    "pipelines": "Pipelines",
    "riskAdministration": "Risk Administration",
    "riskConfig": "Risk Config",
    "security": "Security",
    "scripts": "Scripts",
    "provisioningRole": "External Role",
    "securityQuestions": "Security Questions",
    "settings": "Settings",
    "templates": "Templates",
    "authScripts": "Auth Scripts",
    "customEndpoints": "Custom Endpoints",
    "realmOverview": "Realm Overview",
    "risk": "Risk"
  },
  "connect": {
    "connectIdentities": "Connect Identities",
    "subtitle": "Connect to identity sources by installing connector servers.",
    "connectors": {
      "title": "Connectors",
      "noConnectors": "No Configured Connectors"
    }
  },
  "application": {
    "errors": {
      "failedLogout": "Failed to logout of platform session",
      "downloadCsvImportFailureError": "There was an error downloading CSV import failures.",
      "reconDetailError": "There was an error getting recon details.",
      "importDetailError": "There was an error getting import details",
      "configDetailError": "There was an error getting configuration details",
      "fileUploadError": "There was an error uploading the file",
      "getImportsError": "There was an error getting the list of imports",
      "configUploadCsvError": "There was an error saving upload-csv config",
      "errorDeletingResource": "There was an error deleting the requested resource.",
      "errorLoadingRealm": "There was an error loading a realm",
      "errorSavingRealm": "There was an error saving realm details",
      "errorDeletingRealm": "There was an error deleting a realm",
      "errorGettingRealmAuthenticationConfig": "There was an error getting realm authentication config",
      "errorSwitchingRealm": "There was an error switching realm",
      "errorLoadingMenusFile": "There was an error loading site configuration",
      "errorLoadingRoutes": "Error loading route definitions."
    }
  },
  "hostedPages": {
    "settings": {
      "description": "Activate or deactivate hosted account and delegated administration pages."
    },
    "title": "Hosted Pages",
    "theme": {
      "accountPages": "Account Pages",
      "accountTab": {
        "accountCardBackgroundColor": "Card Background Color",
        "accountCardHeaderColor": "Card Header Color",
        "accountCardInnerBorderColor": "Card Inner Border Color",
        "accountCardInputBackgroundColor": "Card Input Background Color",
        "accountCardInputBorderColor": "Card Input Border Color",
        "accountCardInputLabelColor": "Card Input Label Color",
        "accountCardInputSelectColor": "Card Input Select Color",
        "accountCardInputTextColor": "Card Input Text Color",
        "accountCardOuterBorderColor": "Card Outer Border Color",
        "accountCardShadow": "Card Shadow: {pixelValue}px",
        "accountCardTabActiveColor": "Card Tab Active Color",
        "accountCardTabActiveBorderColor": "Card Tab Active Border Color",
        "accountCardTextColor": "Card Text Color",
        "accountControls": "Account Controls",
        "accountFooterDescription": "Place a footer below the page content on all account pages.",
        "accountNavigationBackgroundColor": "Navigation Background Color",
        "accountNavigationTextColor": "Navigation Text Color",
        "accountNavigationToggleBorderColor": "Navigation Toggle Border Color",
        "accountPagesDescription": "Customize the customer-facing pages such as account profile and dashboard.",
        "accountSecurity": "Sign-in & Security",
        "accountTableRowHoverColor": "Table Row Hover Color",
        "bodyText": "Page Text Color",
        "cards": "Cards",
        "consent": "Consent",
        "logoAltTextDescription": "Alt text rendered for both collapsed and expanded versions of the logo",
        "logoHelp": "Logo to display on sign-in and registration pages.",
        "logoProfile": "Expanded Version",
        "logoProfileCollapsed": "Collapsed Version",
        "logoProfileCollapsedHelp": "Logo to display on all account pages when navigation is collapsed.",
        "logoProfileHelp": "Logo to display on all account pages when navigation is expanded.",
        "logoProfileModalTitle": "Update Expanded Logo Image",
        "logoProfileCollapsedModalTitle": "Update Collapsed Logo Image",
        "navigation": "Navigation",
        "oauthApplications": "Authorized Applications",
        "pageStyles": "Page Styles",
        "password": "Password",
        "personalInformation": "Personal Information",
        "preferences": "Preferences",
        "pageTitle": "Page Title Color",
        "profileBackgroundColor": "Page Background Color",
        "profileMenuHighlightColor": "Navigation Active Color",
        "profileMenuHoverColor": "Navigation Hover Color",
        "profileMenuHoverTextColor": "Navigation Hover Text Color",
        "profileMenuTextHighlightColor": "Navigation Active Text Color",
        "profilePage": "Profile Page",
        "profilePageDescription": "Customize the components that appear on a userâ€™s profile page.",
        "securityQuestions": "Security Questions",
        "social": "Social Sign In",
        "topBar": "Top Bar",
        "topBarBackgroundColor": "Top Bar Background Color",
        "topBarBorderColor": "Top Bar Border Color",
        "topBarHeaderColor": "Top Bar Header Color",
        "topBarTextColor": "Top Bar Text Color",
        "trustedDevices": "Trusted Devices",
        "twoStepVerification": "2-Step Verification",
        "userCompany": "Company",
        "username": "Username"
      },
      "configurationLoadingFail": "Configuration Not Found",
      "confirmResetModal": {
        "title": "Reset Theme",
        "confirmation": "Are you sure you want to reset your theme?"
      },
      "copyOfTheme": "Copy of {themeName}",
      "createModalDescription": "Name for this theme.",
      "description": "Create custom-branded themes to apply to customer authentication journeys and account management pages.",
      "duplicateThemeTitle": "Duplicate Theme",
      "editCode": "Edit Code",
      "errorDeletingTheme": "There was an error deleting a theme",
      "errorRetrievingList": "There was an error retrieving the list of themes.",
      "errorSavingTheme": "There was an error saving a theme",
      "footer": "Footer",
      "global": {
        "boldLinks": "Bold Links",
        "brandColor": "Brand Colors",
        "buttonRounded": "Button Radius: {radius}px",
        "buttons": "Buttons",
        "dangerColor": "Danger Color",
        "dangerColorDescription": "Color used to indicate a high-level alert.",
        "description": "Styles applied across all journey and user account pages.",
        "favicon": "Favicon",
        "faviconHelp": "Favicon logo displayed for all journey and account pages.",
        "faviconModalTitle": "Update Favicon Image",
        "faviconModalLabel": "Favicon URL",
        "faviconModalDescription": "Enter a URL where your favicon is hosted (eg. http://mysite.com/img/profile.jpg). Should be either png or jpg format.",
        "fontFamily": "Font Family",
        "fontFamilyDescription": "Font applied to all journeys and customer-facing pages.",
        "linkActiveColor": "Link Hover Color",
        "linkColor": "Link Color",
        "linkedTrees": "Linked Trees",
        "linkedTreesDescription": "Trees using this theme.",
        "links": "Links",
        "primaryColor": "Brand Color",
        "primaryColorDescription": "Primary brand color used for buttons, checkboxes, and switches.",
        "primaryOffColor": "Brand Hover Color",
        "secondaryColor": "Secondary Color",
        "secondaryColorDescription": "Color used for muted text.",
        "settings": "Settings",
        "switchBackgroundColor": "Switch Background Color",
        "switches": "Switches",
        "textColor": "Button Text Color",
        "themeName": "Theme Name",
        "themeNameDescription": "Name for this theme.",
        "title": "Global Settings",
        "typography": "Typography"
      },
      "globalTabTitle": "Global",
      "htmlNote": "HTML/CSS",
      "inputLabel": "Input Label",
      "inputText": "Input Text",
      "itemType": "Theme",
      "journeyPages": "Journey Pages",
      "journeyTab": {
        "backgroundColor": "Page Background Color",
        "backgroundUrlHelp": "URL to optionally display a background image on sign-in pages.",
        "centeredCard": "Centered Card",
        "globalStyles": "Global Styles",
        "header": "Header",
        "headerDescription": "Place a header above the sign-in card.",
        "journeyCardBackgroundColor": "Card Background Color",
        "journeyCardShadow": "Card Shadow: {pixelValue}px",
        "journeyCardBorderRadius": "Border Radius: {pixelValue}px",
        "journeyCardTextColor": "Card Text Color",
        "journeyCardTextColorDescription": "Color used for body text across all pages.",
        "journeyCardTitleColor": "Card Title Color",
        "journeyCardTitleColorDescription": "Color used for page title text.",
        "journeyFooterDescription": "Place a footer below the sign-in card.",
        "journeyInputBackgroundColor": "Sign-in Input Background Color",
        "journeyInputBorderColor": "Sign-in Input Border Color",
        "journeyInputLabelColor": "Sign-in Input Label Color",
        "journeyInputSelectColor": "Sign-in Input Select Color",
        "journeyInputTextColor": "Sign-in Input Text Color",
        "journeyJustifiedContent": "Message",
        "journeyJustifiedContentDescription": "Message to display to the left or right of the sign-in card.",
        "journeyPagesDescription": "Customize the authentication and registration journey pages.",
        "journeyTheaterMode": "Theater Mode",
        "journeyTheaterModeDescription": "Expand the UI using the available space in your browser window.",
        "journeyText": "Journey Text",
        "leftJustified": "Left Justified",
        "logoModalTitle": "Update Logo Image",
        "pageBackground": "Page Background",
        "rightJustified": "Right Justified",
        "signInBackgroundUrl": "Page Background URL (optional)",
        "signinCard": "Sign-in Card"
      },
      "layout": "Layout",
      "logo": "Logo",
      "logoAltText": "Alt Text",
      "logoHeight": "Logo Height: {height}px",
      "logoModalLabel": "Logo URL",
      "logoModalDescription": "Enter a URL where your logo is hosted (eg. http://mysite.com/img/profile.jpg). Should be either png or jpg format.",
      "managedObjectPage": {
        "tabOne": "Details",
        "tabThree": "Authorization Roles",
        "tabTwo": "Preferences",
        "managedObject": "User",
        "managedObjectName": "Full Name",
        "managedObjectSubtitle": "username",
        "resetManagedObject": "Reset Password"
      },
      "modalThemeName": "Name",
      "newTheme": "New Theme",
      "noHostedPagesText": "There are no themes matching the search term.",
      "profilePage": {
        "mockEmail": "bjensen@example.com",
        "mockName": "Barbara Jensen",
        "profile": "Profile",
        "oauthApplicationsPlaceholder": "(Authorized applications will appear here)",
        "preferencesPlaceholder": "(Preferences will appear here)",
        "trustedDevicesPlaceholder": "(Trusted devices will appear here)",
        "socialPlaceholder": "(Social identity providers will appear here)"
      },
      "realmDefault": "Realm Default",
      "saveBeforeLeavingModal": {
        "leaveWithoutSaving": "Leave Without Saving",
        "content": "There are unsaved changes. Would you like to save these before leaving?",
        "reallyLeave": "Really Leave?",
        "saveAndLeave": "Save and Leave"
      },
      "setAsRealmDefault": "Set as Realm Default",
      "styles": "Styles",
      "successDelete": "Theme successfully deleted",
      "successSave": "Theme successfully saved"
    }
  },
  "journey": {
    "allJourneysCategory": "All Journeys",
    "inputFieldCategoryLabel": "Tags (optional)",
    "title": "Journeys",
    "journey": "Journey",
    "journeyName": "Journey Name",
    "identityResource": "Identity Object",
    "previewInputLabel": "Preview URL",
    "previewHelp": "Copy and paste into an incognito window to preview journey.",
    "usageInputLabel": "Tree ID",
    "usageHelp": "Use when configuring the <a target=\"_blank\" href=\"https://sdks.forgerock.com/\">ForgeRock SDK</a> or calling the REST APIs.",
    "description": "Sign in users to your application using any of the out-of-the-box journeys or customize them to suit your specific requirements.",
    "newJourney": "New Journey",
    "duplicateJourney": "Duplicate Journey",
    "editJourney": "Edit Journey",
    "service": "Service",
    "duplicate": "Duplicate",
    "deleteSelectedJourneys": "Are you sure you want to delete the selected journeys?",
    "deleteJourneys": "Delete Journeys",
    "journeysSuccessfullyDeleted": "Journeys successfully deleted",
    "deletingJourneys": "Deleting journeys",
    "editDetails": "Edit Details",
    "copyOf": "Copy of {treeId}",
    "preview": "Preview",
    "returnToPreviousTree": "Return to parent",
    "adminDefault": "Admin Default",
    "setAsAdminDefault": "Set as Admin Default",
    "setAsDefault": "Set as Default",
    "export": "Export",
    "exportJourneys": "Export Journeys",
    "importJourneys": "Import Journeys",
    "import": "Import",
    "defaultCheckboxTitle": "Default journey for end users",
    "defaultAdminCheckboxTitle": "Default journey for admins",
    "journeyDeleteSuccess": "\"{treeId}\" journey successfully deleted.",
    "journeyEditSuccess": "\"{treeId}\" journey successfully updated.",
    "defaultJourneyUpdated": "\"{treeId}\" successfully set as Default Journey.",
    "noJourney": "You haven't created any journeys",
    "noJourneySearchResults": "There are no journeys matching the search term.",
    "noJourneySubtitle": "Configure journeys to allow users to sign in, register and perform self-service functions like reset their password or recover their username.",
    "noAuthServicesMessage": "Sign in users to your application by creating journeys",
    "overrideThemeCheckboxTitle": "Override theme",
    "errorRetrievingJourney": "Error retrieving journey",
    "errorRetrievingJourneys": "Error retrieving journeys",
    "errorRetrievingDefaultJourneys": "Error retrieving default journey information",
    "errorCreatingJourney": "Error creating journey",
    "errorDuplicatingJourney": "Error duplicating journey",
    "errorUpdatingJourney": "Error updating journey",
    "errorDeletingJourney": "Error deleting journey",
    "errorRetrievingDebugTemplate": "Error retrieving debug node template",
    "errorRetrievingJourneyTemplate": "Error retrieving journey template",
    "errorRetrievingTableData": "Error retrieving journey data",
    "errorSettingDefault": "Error setting journey as default",
    "errorLoadingThemeDetails": "Error loading theme details",
    "unableToEditResource": "Unable to edit {resource}",
    "unableToDeleteResource": "Unable to delete {resource}",
    "filterNodes": "Filter nodes",
    "theme": "Theme",
    "editModal": {
      "treeCategoryDescription": "Use tags to allow categorization and enhance searchability.",
      "treeNameDescription": "Human-friendly name for this user flow.",
      "treeManagedIdentityDescription": "Managed identity to authenticate using this journey.",
      "treeDescriptionDescription": "Provide consumers of your flow a brief description of this flow.",
      "treeThemeDescription": "Theme that will appear when using this tree."
    },
    "setDefaultModal": {
      "okText": "Save Default",
      "adminTitle": "Set as Default Admin Journey",
      "title": "Set as Default Journey",
      "adminBody": "Set this journey as the default for admin identities authenticating to this realm?",
      "body": "Set this journey as the default for identities authenticating to this realm?"
    },
    "tag": {
      "autonomousAccess": "Autonomous Access",
      "basicAuthentication": "Basic Authentication",
      "mfa": "Multi Factor Auth",
      "risk": "Risk",
      "behavioral": "Behavioral",
      "contextual": "Contextual",
      "federation": "Federation",
      "identityManagement": "Identity Management",
      "utilities": "Utilities",
      "uncategorized": "Uncategorized"
    },
    "treeImportExport": {
      "dependencies": "Dependencies",
      "dependencyTypes": {
        "trees": "Journeys",
        "scripts": "Scripts",
        "emailTemplates": "Email Templates",
        "socialIdentityProviders": "Social Identity Providers",
        "themes": "Themes",
        "saml2Entities": "SAML2 Entities",
        "circlesOfTrust": "Circles of Trust"
      },
      "components": {
        "conflictsView": {
          "keepExisting": "Keep Existing",
          "replace": "Replace",
          "selectAll": "Select all"
        },
        "exportDetails": {
          "gatheringData": "Gathering export data...",
          "requiredDependenciesDescription": "In addition to the journeys themselves, the following required dependencies will be exported.",
          "optionalDependencies": "Optional Dependencies",
          "optionalDependenciesDescription": "These dependencies are also required for the exported journeys to function, but can be omitted from this export if the importing environment already contains matching configurations.",
          "journeyWillFail": "Note: Journey import will fail if any nested journeys do not exist.",
          "nestedJourneys": "Nested Journeys"
        },
        "previewList": {
          "renamed": "Renamed",
          "replace": "Replace"
        }
      },
      "import": {
        "importing": "Importing",
        "imported": "Imported",
        "journey": "journey",
        "journeys": "journeys",
        "skipBackupConfirm": "Are you sure you want to skip backup? There will be no way to restore after import without it.",
        "chooseFile": "Choose a JSON file containing the journey configurations to import.",
        "invalidImportFile": "Invalid import file",
        "missingEsvs": "Import cannot be processed. Import file contains environment specific variable and/or secret replacement strings (ESV's) which are missing corresponding definitions in this tenant. The following ESV's are undefined: ",
        "identityResourceDescription": "Managed identity to use for all journeys being imported.",
        "overwriteAll": "Overwrite all conflicts (default)",
        "manuallyPick": "Manually pick conflict resolution",
        "treeConflictsDescription": "You are trying to import the following journeys that already exist in this realm. Choose whether to keep the existing journeys or overwrite with the imported versions.",
        "dependencyConflictsDescription": "The following items already exist in this realm. What would you like to do?",
        "noJourneysSelected": "You haven't selected any journeys to import",
        "backToPrevious": "Go back to previous screen and choose at least one journey to import to continue.",
        "importComplete": "Import Complete",
        "treesWithErrors": "The following trees had one or more errors during import:",
        "gatheringBackupData": "Gathering backup data...",
        "skipBackup": "Skip Backup",
        "downloadBackup": "Download Backup",
        "next": "Next",
        "tryAgain": "Try Again",
        "done": "Done",
        "startImport": "Start Import",
        "processing": "Processing",
        "importInProgress": "Import in progress. Do not close this window until import is complete.",
        "importSummary": "Import Summary",
        "importFailed": "Import Failed",
        "resolveJourneyConflicts": "Resolve Journey Conflicts",
        "noJourneys": "No Journeys to Import",
        "resolveDependencyConflicts": "Resolve Dependency Conflicts",
        "conflictResolution": "Conflict Resolution",
        "steps": {
          "backupTrees": {
            "description": "This process will import journeys and any required dependencies and can overwrite existing configuration if you choose to do so. As such, before importing any journeys, you must first download a backup of your existing journeys to restore in case of errors or unexpected behaviors during or after import.",
            "important": "Important",
            "notice": "Make sure you keep this backup as there will be no way to restore after import without it.",
            "hide": "Hide",
            "show": "Show",
            "backupSummary": "backup summary"
          },
          "missingInnerTrees": {
            "importFailed": "Import Failed",
            "failureReason": "This import failed because the following nested journeys are missing from both the import file and currently existing journeys.",
            "importAgain": "Re-export with the missing journeys and then try import again."
          },
          "previewImport": {
            "inAddition": "In addition to journeys, the following dependencies will be imported."
          }
        }
      }
    }
  },
  "bulkImport": {
    "title": "Import Identities",
    "noDataTitle": "Bulk Import",
    "description": "Bulk import identity data from CSV files.",
    "cancelImport": "Cancel Import",
    "continueImport": "Continue Import",
    "newImport": "New Import",
    "import": "Import",
    "users": "Users",
    "file": "File",
    "date": "Date",
    "formatCsv": "Format your CSV file (max {maxImportSize}MB) according to this ",
    "csvTemplate": "CSV Template",
    "csvFile": "CSV File",
    "matchUsing": "Match Using",
    "matchUsingHelp": "Select one or more properties for unique record match.",
    "viewDetails": "View Details",
    "uploadingFile": "Uploading file {uploadPercentage}% complete",
    "importComplete": "Import Complete",
    "complete": "Complete",
    "error": "Error",
    "importInProgress": "Import In progress",
    "inProgress": "In progress",
    "inMinutes": "in {timeElapsed} minutes",
    "inSeconds": "in {timeElapsed} seconds",
    "inMilliseconds": "in {timeElapsed} milliseconds",
    "failed": "Failed",
    "updated": "Updated",
    "unchanged": "Unchanged",
    "downloadCsv": "Download CSV",
    "done": "Done",
    "continue": "Continue",
    "cancelImportDescription": "Are you sure you want to cancel your import? If you cancel, pending records will not be processed.",
    "uploadedEntries": "Uploaded {current}/{total} entries",
    "importingEntries": "Importing {numEntries} entries",
    "importedEntries": "Imported {current}/{total} entries",
    "importCancelled": "Import Cancelled",
    "cancelled": "Cancelled",
    "importCancelledDuringUpload": "Import cancelled during upload",
    "uploadCSV": "Upload CSV",
    "selectIdentity": "Select the managed identity object into which you want to import your CSV identities.",
    "importTo": "Import to",
    "deleteImportConfirmation": "If you delete this import the entries imported will remain, but import record will be deleted from the list.",
    "successDelete": "Successfully deleted import",
    "uploadingMessage": "Your file is being uploaded. Please do not close this window or navigate away from this page until the uploading process completes."
  },
  "configure": {
    "managedListView": {
      "id": "Id",
      "title": "Configure Identities",
      "description": "Configure the properties and settings for each identity profile",
      "profile": "Profile",
      "tableEmpty": "No identity profiles created",
      "getTableDataFail": "Failed to load identity profiless"
    },
    "managedObjectSettings": {
      "configurationLoadingFail": "Configuration Not Found",
      "minimumCharacters": "Minimum Characters",
      "minimumFilter": "minimumFilter",
      "minimumFilterDescription": "Minimum number of characters required to search.",
      "saveFilterSuccess": "Updated Identity Profile settings",
      "saveFilterFail": "Unable to save filter settings",
      "identityProfile": "Identity Profile",
      "requireSearch": "Require UI Search Filter",
      "filterHelpText": "Optimize performance by requiring administrators to type a minimum length search before displaying sorted identities.",
      "disableRelationshipSortAndSearch": "Disable sorting and searching on grids that use this object as a resource collection."
    }
  },
  "dashboard": {
    "analytics": {
      "beta": "Beta",
      "compareLastPeriodLabel": "Compare to last period",
      "dateRangeLast7Days": "Last 7 Days",
      "dateRangeLast30Days": "Last 30 Days",
      "dateRangeToday": "Today",
      "dateRangeYesterday": "Yesterday",
      "description": "Trend data is updated every 2-3 hours. All times are UTC.",
      "title": "Trends",
      "charts": {
        "chartLegendFail": "Fail",
        "chartLegendSuccess": "Success",
        "filterJourneysDescription": "Add filters to narrow journeys shown.",
        "filterJourneysLabel": "Filter Journeys",
        "loadUsersError": "Error retrieving {error}",
        "journeysActiveTitle": "Journeys",
        "journeysActiveDescription": "Successful or failed journey outcomes (timeout are not currently shown) in this realm for a given time period.",
        "journeysFilterButtonTitle": "View:",
        "journeysModalSelected": "Show {count} journeys",
        "journeysModalSelectedNone": "No filters applied",
        "journeysModalDescription": "Clear filters and show all journeys",
        "journeysModalTitle": "Filter Journeys",
        "userActiveTitle": "Total Users Trend",
        "userActiveDescription": "Trend of total number of users in this realm for the given time period",
        "userEngagementTitle": "User Engagement",
        "userEngagementDescription": "Unique user count with at least one activity like sign-in, set or update password, or token issuance/validation/refresh performed in this realm for a given time period.",
        "userNewTitle": "Sign Ups",
        "userNewDescription": "Trend of new user sign-ups in this realm for a given time period"
      }
    },
    "cardCount": {
      "applications": "Applications",
      "applicationsRequestError": "Unable to retrieve applications count",
      "applicationsTooltip": "Total number of applications in this realm",
      "organizations": "Organizations",
      "organizationsRequestError": "Unable to retrieve organizations count",
      "organizationsTooltip": "Total number of organizations in this realm",
      "realmOverview": "Realm Overview",
      "totalUsers": "Total Users",
      "totalUsersRequestError": "Unable to retrieve total number of users count",
      "totalUsersTooltip": "Total number of users in this realm"
    },
    "createApplication": {
      "title": "Add a New Application",
      "altText": "Application Icon",
      "description": "Add your application to the platform, and integrate the app with ForgeRock authentication."
    },
    "connectIdentities": {
      "title": "Connect Identities",
      "altText": "Identities Icon",
      "description": "Create and manage identity profiles across applications and IT infrastructure."
    },
    "managedAccess": {
      "title": "Manage Access",
      "description": "Manage how your users can authenticate and gain access to your systems."
    },
    "managedIdentities": {
      "title": "Manage Identities",
      "description": "Control where, when, and how your users can change their information."
    },
    "welcome": {
      "title": "ForgeRock Identity Platform",
      "description": "Helps your customers, workforce, and IoT identities access the connected world â€“ safely and simply.",
      "footer": "Get Started"
    }
  },
  "connectorServers": {
    "activating": "Activating...",
    "bypassAgent": "Connect directly to ForgeRock",
    "bypassAgentDescription": "Bypass the recommended agent connection and configure the connector server to connect directly to ForgeRock.",
    "connectorName": "Connector Name",
    "connectors": "Connectors",
    "connectorServer": "Connector Server",
    "deactivating": "Deactivating...",
    "errorAlreadyExists": "Server name is already in use, please specify a different name",
    "errorDeleting": "Error deleting connector server.",
    "errorRetrievingConnectionStatus": "Error retrieving connection status.",
    "errorRetrievingConnectors": "Error retrieving connectors.",
    "errorRetrievingList": "Error retrieving connector server list.",
    "errorRetrievingSpecificItem": "Error retrieving specified connector server.",
    "errorSaving": "Error saving connector server.",
    "newConnectorServer": "New Connector Server",
    "noConnectorServersSubtitle": "Connect to identities on your resource servers.",
    "noConnectorServersTitle": "No connector servers yet",
    "quickStart": "Quick Start",
    "secretWarning": "Remember or write down your secret as we wonâ€™t show it again.",
    "serverCredentials": "Server Credentials",
    "serverCredentialsDescription": "Use these credentials during installation and configuration of the connector server.",
    "successDelete": "Successfully deleted connector server.",
    "successSave": "Successfully saved connector server.",
    "title": "Connector Servers",
    "version": "Version",
    "waitingToConnect": "Waiting to connect...",
    "newServerModal": {
      "alphaNumDashOnly": "Must only contain letters, numbers, hyphens and underscores",
      "clientIdInUse": "That Client ID is already in use, please choose a different ID",
      "connectorServerApp": "for the connector server application.",
      "connectorServerRegistered": "Connector server registered!",
      "downloadRemote": "<a href='{url}' target='_blank'>Download a connector server</a> based on your needs.",
      "editConnectorServer": "Edit Connector Server",
      "errorUpdatingAuth": "Error adding the user mapping to the Authentication config",
      "lowerAlphaNumOnly": "Must only contain lowercase letters and numbers",
      "newConnectorServer": "New Connector Server",
      "nextSteps": "Next Steps",
      "registerConnectorServer": "Register your connector server by providing a name and connection settings.",
      "resetSecret": "Reset the client secret",
      "serverDetails": "Server Details",
      "stepByStep": "Follow the <a href='{url}' target='_blank'>step-by-step instructions</a> to install and configure the connector server."
    }
  },
  "serverClusters": {
    "addServers": "Add Servers",
    "addServersToCluster": "Add Servers to an Existing Cluster",
    "addToCluster": "Add to cluster",
    "addingToCluster": "Adding to cluster...",
    "agent": "Agent",
    "algorithm": "Algorithm",
    "algorithmDescription": "Failover ensures that if the primary server fails, service falls back to a designated server. Round robin continuously balances the load among two or more servers.",
    "chooseClusterType": "Choose whether you are clustering connector servers that connect through an agent or directly.",
    "chooseLikeServers": "Choose only servers that have the same connectors installed.",
    "chooseServers": "Choose Servers",
    "confirmDeleteServer": "Are you sure you want to remove this server?",
    "connectorServerCluster": "Connector Server Cluster",
    "createCluster": "Create Cluster",
    "creatingCluster": "Creating Cluster...",
    "direct": "Direct",
    "errorAlreadyExists": "Server Cluster name is already in use, please specify a different name",
    "errorDeleting": "Error deleting server cluster.",
    "errorRetrievingList": "Error retrieving server clusters list.",
    "errorRetrievingSpecificItem": "Error retrieving specified connector server cluster.",
    "errorSaving": "Error saving server cluster.",
    "failover": "Failover",
    "nameDescription": "The name to display in the Server Clusters list.",
    "newServerCluster": "New Server Cluster",
    "noServerClustersSubtitle": "Cluster configured connector servers to activate scaling and fallback across resources.",
    "noServerClustersTitle": "No server clusters yet",
    "noServers": "No Servers Available",
    "removeServer": "Remove server",
    "removeServerQ": "Remove Server?",
    "removingServer": "Removing server...",
    "roundRobin": "Round Robin",
    "selectServers": "Select any connected server to add it to the cluster.",
    "serverCluster": "Server Cluster",
    "serverClusterDetails": "Server Cluster Details",
    "servers": "Servers",
    "successDelete": "Successfully deleted server cluster.",
    "successSave": "Successfully saved server cluster.",
    "title": "Server Clusters"
  },
  "trees": {
    "treeSaveSuccessful": "All Changes Saved",
    "failedToGetNodeType": "Failed to gather node type details",
    "failedToGetNodeData": "Failed to gather node data",
    "failedToUpdateNodeOutcomes": "Failed to update node type outcomes",
    "configurationRequired": "Requires Configuration",
    "editPanel": {
      "confirmPassword": "Confirm Password",
      "confirmPasswordDescription": "User must enter identical password in second field to validate.",
      "displayChoiceType": "Field Display Type",
      "displayChoiceTypeDescription": "Specifies the field format that the choice collector is displayed in.",
      "displayChoiceRadio": "radio",
      "displayChoiceSelect": "select",
      "name": "Name",
      "none": "none",
      "minimumRequired": "At Least {minItems} Value(s) Required",
      "showOnlyPositiveAnswer": "Only Positive Answer",
      "showOnlyPositiveAnswerDescription": "Only show one the positive answer button on node.",
      "submitButtonText": "Submit Button Text",
      "submitButtonTextDescription": "Text to show within node's submit button.",
      "theme": "Theme",
      "themeDescription": "If using hosted pages, specify a theme to override this journey's UI theme."
    },
    "debugWarningTitle": "Debug warning",
    "debugWarning": "<b>Debug mode is active.</b> Make sure you deactivate before promoting your environment configuration.",
    "debugPanel": {
      "name": "Debug",
      "description": "Activate debug mode to output journey data to debug logs. Optionally, enable the debug popup to display debug logs as you traverse the nodes in your journey.",
      "debugEnabledLabel": "Debug mode",
      "popupEnabledLabel": "Enable Debug Popup",
      "popupEnabledHelp": "If enabled, a popup window will display debug logs as you step through the login journey"
    },
    "pageNode": {
      "dragHere": "Drag nodes here"
    },
    "kbaCreateNode": {
      "title": "Questions",
      "description": "Localized questions from which the user can pick when defining security questions."
    },
    "nodeTypeList": {
      "addNodes": "Add Nodes",
      "failedNodeTypeList": "Failed to get available node types",
      "title": "Nodes",
      "toggleNodeList": "Toggle Node List",
      "deleteSelectedNode": "Delete Selected Node"
    },
    "toolbar": {
      "autoLayout": "Auto Layout",
      "fullscreen": "Toggle Fullscreen",
      "zoomIn": "Zoom In",
      "zoomOut": "Zoom Out"
    }
  },
  "components": {
    "noData": "No group data provided"
  },
  "pages": {
    "app": {
      "notifications": {
        "noNotifications": "No notifications available",
        "title": "Notifications"
      }
    },
    "identities": {
      "managedIdentities": "Manage Identities",
      "subTitle": "Create and configure ForgeRock-hosted identity resources.",
      "deleteResource": {
        "title": "Delete {resource}?",
        "body": "Are you sure you want to delete this {resource}?",
        "primaryButton": "Delete {resource}"
      }
    }
  },
  "passwordPolicy": {
    "title": "Password Policy",
    "subtitle": "Define password rules for identities.",
    "managedError": "Error retrieving managed objects",
    "passwordLength": "Password length",
    "minLength": "Minimum",
    "characters": "characters",
    "minCharacters": "Minimum characters",
    "numMinCharacters": "Number of minimum characters",
    "cannotInclude": "Cannot include",
    "restrictRepetitive": "Repetitive characters (e.g. aaa)",
    "restrictCommon": "Commonly used passwords (e.g. p@ssw0rd, etc.)",
    "restrictAttributes": "Part of {resourceName} attributes",
    "restrictAttributesPlaceholder": "Forbidden {resourceName} attributes",
    "mustContain": "Must contain",
    "reqUpper": "Upper case letter (English)",
    "reqLower": "Lower case letter (English)",
    "reqNumber": "Number (0-9)",
    "reqSymbol": "Special character (e.g., !@#$%^&*)",
    "ofTheFollowing": "of the following:",
    "showAdvanced": "Show advanced options",
    "showBasic": "Show basic options",
    "minNumCharacterSets": "Minimum number of character sets required",
    "minCharacterSetsAll": "All",
    "minCharacterSets": "At least {minSets}",
    "restrictForbiddenPlaceholder": "Forbidden characters",
    "cannotReuse": "Cannot reuse",
    "last": "Last",
    "passwords": "passwords",
    "restrictLastPasswords": "Restrict last passwords",
    "forcePasswordChange": "Force Password Change",
    "forcePasswordChangeTime": "Force password change after a certain time",
    "after": "After",
    "days": "days",
    "months": "months",
    "years": "years",
    "updateSuccess": "Updated {resourceName} password policy successfully",
    "updateFailed": "Error updating {resourceName} password policy"
  },
  "applications": {
    "application": "Application",
    "listView": {
      "addApp": "Add Application",
      "tableEmpty": "No available applications",
      "app": "Application",
      "title": "Applications",
      "subTitle": "Set up your applications to use ForgeRock authentication.",
      "active": "Active",
      "inactive": "Inactive",
      "name": "Name"
    },
    "addAppModal": {
      "appAltText": "{appType} App",
      "appClientId": "Client ID",
      "chooseAppType": "Choose an application type",
      "enterprise": "Enterprise",
      "enterpriseHelpText": "Set up SSO to an application like Google, Salesforce, or Office365",
      "consumer": "Consumer",
      "consumerHelpText": "Integrate authentication with your web, native, or service app",
      "consumerAppType": "Choose a consumer application type",
      "nativeTitle": "Native / SPA",
      "nativeExample": "iOS, Android, React",
      "webTitle": "Web",
      "webExample": "Node.js, Java",
      "serviceTitle": "Service",
      "serviceExample": "Machine-to-machine",
      "createCredentials": "Create a client ID for your application.",
      "createCredentialsWithSecret": "Create a client ID and secret for your application.",
      "createApp": "Create Application",
      "defaultModalTitle": "New Application",
      "appTypeModalTitle": "New {appType} App",
      "consumerAppModalTitle": "{appType} Application Credentials",
      "errorCreatingApp": "Could not create application",
      "clientSecretWarning": "Make sure you copy <small class=\"text-monospace alert-link\">Client Secret</small> as it won't be shown again."
    }
  },
  "oauth": {
    "editApp": {
      "schemaFail": "Unable to get application properties",
      "updateSuccess": "Application updated",
      "updateFail": "Application update failed",
      "deleteFail": "Unable to delete application",
      "resetSecretSuccess": "Client secret reset",
      "resetSecretFail": "Unable to reset client secret"
    },
    "listApps": {
      "getAppDataFail": "Unable to retrieve applications data",
      "deleteAppFail": "Unable to delete application",
      "noDataTitle": "You haven't added any applications yet",
      "noDataSubtitle": "Set up an application to use ForgeRock authentication."
    },
    "nativeApp": {
      "alt": "Native App",
      "super": "Native / SPA",
      "newApp": "New App"
    },
    "webApp": {
      "alt": "Web App",
      "super": "Web Application"
    },
    "serviceApp": {
      "alt": "Service App",
      "super": "Service Application"
    },
    "customApp": {
      "alt": "Custom App",
      "super": "Custom Application"
    },
    "accessTab": {
      "title": "Access",
      "defaultScopesLabel": "Default Scopes",
      "defaultScopesHelp": "Scopes automatically given to tokens.",
      "responseTypesLabel": "Response Types",
      "responseTypesHelp": "Response types this client will support and use.",
      "claimsLabel": "Claims",
      "claimsHelp": "List of claim name translations, which will override those specified for the authorization server. Claims are values that are presented to the user to inform them what data is being made available to the Client.",
      "loopbackInterfaceRedirectionLabel": "Allow wildcard ports in redirect URLs",
      "loopbackInterfaceRedirectionHelp": "This flag indicates whether wildcards can be used for port numbers in redirect URIs. For example - <code>https://127.0.0.1:{port}/{path}</code> for IPv4 and <code>https://[::1]:{port}/{path}</code> for IPv6."
    },
    "authenticationTab": {
      "title": "Authentication",
      "tokenEndpointAuthMethodLabel": "Token Endpoint Authentication Method",
      "tokenEndpointAuthMethodHelp": "The authentication method with which a client authenticates to the authorization server at the token endpoint. The authentication method applies to OIDC requests with the openid scope.",
      "clientTypeLabel": "Client Type",
      "clientTypeHelp": "Type of OAuth 2.0 client. Confidential clients can keep their password secret, and are typically web apps or other server-based clients. Public clients run the risk of exposing their password to a host or user agent, such as rich browser applications or desktop clients.",
      "isConsentImpliedLabel": "Implied Consent",
      "isConsentImpliedHelp": "When active, the resource owner will not be asked for consent during authorization flows. The OAuth2 Provider must be configured to allow clients to skip consent.",
      "mixUpMitigationLabel": "OAuth 2.0 Mix-Up Mitigation active",
      "mixUpMitigationHelp": "Enables OAuth 2.0 mix-up mitigation on the authorization server side. Enable this setting only if this OAuth 2.0 client supports the OAuth 2.0 Mix-Up Mitigation draft, otherwise AM will fail to validate access token requests received from this client.",
      "defaultAcrValuesLabel": "Default ACR values",
      "defaultAcrValuesHelp": "Default requested Authentication Context Class Reference values.",
      "requestUrisLabel": "Request URIs",
      "requestUrisHelp": "Array of request_uri values that are pre-registered by the RP for use at the OP.",
      "clientJwtPublicKeyLabel": "Client JWT Bearer Public Key",
      "subjectTypeLabel": "Subject Type",
      "subjectTypeHelp": "The subject type added to responses for this client.",
      "defaultMaxAgeEnabledLabel": "Default Max Age",
      "defaultMaxAgeEnabledHelp": "Whether or not the default max age is enforced.",
      "defaultMaxAgeLabel": "Default Max Age",
      "mTLSCertificateBoundAccessTokensLabel": "Use Certificate-Bound Access Tokens",
      "mTLSTrustedCertLabel": "mTLS Self-Signed Certificate",
      "mTLSTrustedCertHelp": "Self-signed PEM-encoded X.509 certificate for mTLS client certificate authentication.",
      "mTLSSubjectDNLabel": "mTLS Subject DN",
      "mTLSSubjectDNHelp": "Expected Subject DN of certificate used for mTLS client certificate authentication. Defaults to CN=client_id. Only applicable when using CA-signed certificates."
    },
    "clientManagementTab": {
      "title": "Client Management",
      "updateAccessTokenLabel": "Access Token",
      "updateAccessTokenHelp": "The access token used to update the client."
    },
    "consentScreenTab": {
      "title": "Consent Screen",
      "nameLabel": "Display Name",
      "nameHelp": "A client name that may be relevant to the resource owner when considering approval.",
      "descriptionsLabel": "Display Description",
      "descriptionsHelp": "A description of the client or other information that may be relevant to the resource owner when considering approval.",
      "policyUriLabel": "Privacy Policy URI",
      "policyUriHelp": "The URI for the client's privacy policy, for use in user-facing consent pages."
    },
    "endpointResponseFormatsTab": {
      "title": "Endpoint Response Formats",
      "userinfoResponseFormatLabel": "User info response format",
      "userinfoResponseFormatHelp": "The user info endpoint offers different output format. See <a href='http://openid.net/specs/openid-connect-core-1_0.html#UserInfoResponse'>http://openid.net/specs/openid-connect-core-1_0.html#UserInfoResponse</a>",
      "tokenIntrospectionResponseFormatLabel": "Token Introspection Response Format",
      "tokenIntrospectionResponseFormatHelp": "The token introspection endpoint offers different output format. see <a href='https://tools.ietf.org/html/draft-ietf-oauth-jwt-introspection-response-03'>https://tools.ietf.org/html/draft-ietf-oauth-jwt-introspection-response-03</a>"
    },
    "sessionManagementTab": {
      "title": "Session Management",
      "clientSessionUriLabel": "Client Session URI",
      "clientSessionUriHelp": "This is the URI that will be used to check messages sent to the session management endpoints. This URI must match the origin of the message."
    },
    "signingAndEncryptionTab": {
      "title": "Signing and Encryption",
      "publicKeyLocationLabel": "Public key selector",
      "publicKeyLocationHelp": "Select the public key for this client to come from either the jwks_uri, manual jwks or X509 field.",
      "jwksUriLabel": "Json Web Key URI",
      "jwksUriHelp": "The uri that contains the client's public keys in Json Web Key format.",
      "jwkSetLabel": "Json Web Key",
      "jwkSetHelp": "Raw JSON Web Key value containing the client's public keys.",
      "idTokenPublicEncryptionKeyLabel": "Client ID Token Public Encryption Key",
      "idTokenPublicEncryptionKeyHelp": "A Base64 encoded public key for encrypting ID Tokens.",
      "idTokenEncryptionEnabledLabel": "Enable ID Token Encryption"
    },
    "tokenLifetimesTab": {
      "title": "Token Lifetimes",
      "authorizationCodeLifetimeLabel": "Authorization code lifetime (seconds)",
      "accessTokenLifetimeLabel": "Access token lifetime (seconds)",
      "refreshTokenLifetimeLabel": "Refresh token lifetime (seconds)",
      "jwtTokenLifetimeLabel": "JWT token lifetime (seconds)"
    },
    "clientCredentials": {
      "cardTitle": "Client Credentials",
      "discoveryURILabel": "Discovery URI",
      "discoveryURIDescription": "Use to retrieve the OpenID Provider information for this realm from within the application. If using a custom domain remove the <code>/am/oauth2</code> and structure the call as follows: <code>https://{yourdomain}/.well-known/openid-configuration</code>.",
      "clientIDLabel": "Client ID",
      "userpasswordLabel": "Client Secret"
    },
    "generalSettings": {
      "footerButtonText": "Try it out",
      "cardTitle": "General Settings",
      "clientNameLabel": "Name",
      "descriptionsLabel": "Description",
      "redirectionUrisLabel": "Sign-in URLs",
      "redirectionUrisHelp": "Whitelist for sign-in redirect URLs. eg. http://www.example.com/signin",
      "postLogoutRedirectUriLabel": "Sign-out URLs",
      "postLogoutRedirectUriHelp": "Whitelist for sign-out redirect URLs. eg. http://www.example.com/signout",
      "grantTypesLabel": "Grant Types",
      "grantTypesHelp": "Authorization Code is required for SPA/Native apps.",
      "scopesLabel": "Scopes",
      "scopesHelp": "Scopes are strings that are presented to the user for approval and included in tokens so that the protected resource may make decisions about what to give access to.",
      "logoUriLabel": "App Logo URI",
      "logoUriHelp": "Application logo URI for use in user-facing UIs such as consent pages and application pages."
    }
  },
  "realm": {
    "title": "Realm",
    "saveRealm": "Save Realm",
    "topLevelRealm": "Top Level Realm",
    "switchLink": "Switch",
    "switchRealm": "Switch realm...",
    "switchRealmModal": "Switch Realm",
    "switchSuccessful": "Successfully switched realm to '{realmName}'",
    "searchRealms": "Search realms...",
    "searchRealmsNoMatch": "There are no realms available.",
    "newRealm": "New Realm",
    "realmSettings": "Realm Settings",
    "dnsAliases": "DNS Aliases (optional)",
    "dnsAliasesDescription": "List of fully-qualified DNS aliases for the realm.",
    "useClientBasedSessions": "Use Client-based Sessions",
    "useClientBasedSessionsDescription": "Client-based sessions provide elastic scalability by storing all session state as a JWT in a cookie stored on the client. It is highly recommended to enable signing and encryption of the JWT in the global session service.",
    "successfullyCreated": "'{realmName}' realm successfully created",
    "successfullyDeleted": "'{realmName}' realm successfully deleted",
    "successfullySaved": "'{realmName}' realm successfully saved",
    "typeToAddDnsAlias": "Type and press enter to add a DNS alias",
    "Status": "Status",
    "active": "Active",
    "details": "Details",
    "theme": "Theme",
    "inactive": "Inactive",
    "activate": "Activate",
    "deactivate": "Deactivate",
    "deactivateModalTitle": "Deactivate Realm?",
    "deactivateModalText": "If you deactivate this realm users will be prevented from signing in. Are you sure you want to deactivate this realm?",
    "deleteModalTitle": "Delete Realm?",
    "activeRealmMessage": "<p>This is an active realm. All configuration data will be lost if deleted. You can set the realm as inactive to prevent login but retain configuration data.</p><p>Are you sure you want to permanently delete this realm? <strong>This action cannot be undone.</strong></p>"
  },
  "customDomain": {
    "active": "Active",
    "addDomain": "Add a Custom Domain",
    "addModal": {
      "cName": "CNAME",
      "content": "Enter the fully qualified domain name that you want as your ForgeRock realmâ€™s URL.",
      "data": "Data",
      "domain": "Domain",
      "domainFieldDescription": "For example, mycompany.com or example.mycompany.com.",
      "host": "Host",
      "secondStageDescription1": "Before ForgeRock can serve traffic over your domain, you need to add an alias from your custom domain to the ForgeRock subdomain of your ForgeRock realm. You do this by creating or modifying a <code>CNAME</code> record for your custom domain name.<br/><br/><h5>To create a CNAME record:</h5>",
      "secondStageDescription2": "Sign in to your Domain Name Registrar.",
      "secondStageDescription3": "Find the option to modify your DNS Records.",
      "secondStageDescription4": "Create a <code>CNAME</code> record with the following values for <code>Host</code> and <code>Data</code>:",
      "secondStageDescription5": "Once you have added the <code>CNAME</code> record, click 'Verify' to continue",
      "thirdStageDescription1": "<span class=\"font-weight-bold\">It may take up to 48 hours for these changes to propagate.</span> Warning notices may appear on your custom URL domain until propagation is finished completely.",
      "thirdStageDescription1Cloud": "We will now start the process of generating your certificate. Once the certificate has been generated you have completed setting up a Custom Domain Name for your ForgeRock realm. ",
      "thirdStageDescription2": "To confirm that ForgeRock is serving traffic over HTTPS (TLS) for your custom domain, visit: {domainLink}<br/><br/> ForgeRock will continue to serve traffic through {trafficLink} and your custom domain. If your changes do not appear within 48 hours, you may need to confirm your DNS settings.",
      "titleStageTwo": "Verify Domain Name Ownership",
      "verify": "Verify",
      "verifying": "Verifying...",
      "verifyError": "Could not verify the specified custom domain. Make sure the CNAME record matches the expected value.",
      "verifySuccess": "Domain successfully saved!",
      "verifySuccessCloud": "Domain successfully verified!"
    },
    "customDomain": "Custom Domain",
    "descriptionLink": "globally-configured custom domains.",
    "domain": "Domain",
    "domainDescription1": "Use a custom domain to enable a seamless user experience between your domain and ForgeRock. Adding a custom domain to this realm will override any",
    "domainDescription2": "To complete setup youâ€™ll need access to your Domain Name Registrar so that you can modify Domain Name Server (DNS) records.",
    "errorDeletngDomains": "There was an error deleting the custom domains",
    "errorRetrievingDomains": "There was an error retrieving this realm's custom domains",
    "errorSavingDomains": "There was an error saving the custom domains",
    "noDomainMessage": "You haven't added a custom domain for this realm yet",
    "reverify": "Re-verify"
  },
  "logApiKeys": {
    "noLogApiKeysText": "You haven't added any log API keys",
    "logApiKey": "Log API Key",
    "logApiKeyLower": "log API key",
    "logApiKeyDescription": "Send log data to third party services like Splunk or LogStash.",
    "logAPIKeySectionTitle": "Log API Keys",
    "getApiKeyDataFail": "Unable to retrieve API key data",
    "deleteApiKeyFail": "Unable to delete API key",
    "createApiKey": "New Log API Key",
    "apiKeyName": "Name",
    "apiKeyId": "api_key_id",
    "apiKeyCreated": "Created",
    "createApiKeyModal": {
      "nameDescription": "Human-readable name for your key",
      "createButtonText": "Create key",
      "creatingButtonText": "Creating key...",
      "errorCreatingKey": "Could not create API key",
      "keySecret": "api_key_secret",
      "createSuccessHeader": "Key successfully created!",
      "oneTimeSecretStatement": "Make sure you copy <code>api_key_secret</code> below as it won't be shown again.",
      "checkIconAltText": "Success icon"
    }
  },
  "cors": {
    "addCorsConfig": "Add a CORS Configuration",
    "corsConfig": "CORS Configuration",
    "corsConfigLower": "CORS configuration",
    "corsSectionTitle": "Cross-Origin Resource Sharing (CORS)",
    "corsDescription": "Allow requests to ForgeRock-protected resources to be made from trusted domains.",
    "deleteCorsConfigError": "Unable to delete CORS Configuration",
    "getCorsConfigsDataError": "Unable to retrieve CORS Configurations",
    "getServiceStatusError": "Failed to retrieve CORS Service status",
    "saveServiceStatusError": "Unable to update CORS Service status",
    "saveCorsConfigError": "Unable to save CORS Configuration",
    "noCorsConfigText": "You haven't added any CORS Configurations",
    "successSaving": "Successfully saved CORS Configuration",
    "successSavingService": "Successfully saved CORS Service status",
    "corsConfigModal": {
      "chooseTemplate": "Choose a template for your new CORS Configuration.",
      "sdk": "ForgeRock SDK",
      "sdkDescription": "Defaults for the JavaScript sample app",
      "custom": "Custom",
      "customDescription": "Start with a blank slate",
      "editCorsConfig": "Edit CORS Configuration {id}",
      "newCorsConfig": "New CORS Configuration",
      "nameDescription": "Human-readable name for this configuration.",
      "acceptedOrigins": "Accepted Origins",
      "acceptedOriginsDescription": "Accepted origins that will be allowed to make requests to ForgeRock from your application in a cross-origin context. Wildcards are not supported â€“ each value should be an exact match for the origin of the CORS request including the port number. Eg. <code>https://myapp.example.com:443</code>",
      "acceptedMethods": "Accepted Methods",
      "acceptedMethodsDescription": "The set of (non-simple) accepted HTTP methods allowed when making CORS requests to ForgeRock. The method names are case-sensitive, ensure they are entered in all uppercase characters.",
      "acceptedHeaders": "Accepted Headers (optional)",
      "acceptedHeadersDescription": "Accepted header names when making requests from the above specified trusted domains. Header names are case-insensitive. By default, the following simple headers are explicitly accepted: <code>Cache-Control</code><code>Content-Language</code><code>Expires</code><code>Last-Modified</code><code>Pragma</code>. If you do not specify values for this element, the presence of any header in the CORS request, other than the simple headers listed above, will cause the request to be rejected.",
      "saveCorsConfiguration": "Save CORS Configuration",
      "exposedHeaders": "Exposed Headers (optional)",
      "exposedHeadersDescription": "Add the response header names that ForgeRock returns. The header names are case-insensitive. User agents can make use of any headers that are listed in this property, as well as the simple response headers, which are as follows: <code>Cache-Control</code><code>Content-Language</code><code>Expires</code><code>Last-Modified</code><code>Pragma</code><code>Content-Type</code>. User agents must filter out all other response headers.",
      "enableCaching": "Enable Caching",
      "enableCachingDescription": "Enable the browser to cache the pre-flight response.",
      "maxAge": "Max Age",
      "maxAgeDescription": "The max age (in seconds) for caching.",
      "allowCredentials": "Allow Credentials",
      "allowCredentialsDescription": "Whether to transmit the Access-Control-Allow-Credentials: true header in the response.",
      "successCreate": "Successfully created CORS Configuration"
    },
    "deleteCorsConfigModal": {
      "successDeleting": "Successfully deleted CORS Configuration"
    },
    "updateCorsServiceModal": {
      "activateService": "Activate CORS Service?",
      "configAdded": "You've added a CORS configuration but the CORS service is currently deactivated. Do you want to activate the CORS service now?",
      "skipThis": "Skip this"
    }
  },
  "email": {
    "inviteAdmin": {
      "successHeader": "Your invitation(s) has been sent!",
      "successCountMessage": "Youâ€™ve invited {count} admin(s)",
      "partialSuccessMessage": "Youâ€™ve invited {totalCount} admin(s), but {failCount} invitation(s) didn't send. Review the below errors.",
      "noSuccessMessage": "{count} invitation(s) didn't send. Review the errors below.",
      "notice": "IMPORTANT: Each invited admin will receive an email to setup their admin account and have the permission to fully administer this tenant.",
      "toCompany": "to {company}",
      "emailAddresses": "Email addresses",
      "inviteAdminsTitle": "Invite admins",
      "invitationSentTitle": "Invitations Sent!",
      "partialSuccessTitle": "Partial Success",
      "oopsTitle": "Oops, That Didn't Work",
      "sendInvite": "Send Invitations",
      "inviteMore": "Invite More People",
      "tryAgain": "Try Again",
      "invitedMembers": "Invited Members",
      "notInvited": "Not Invited",
      "errorAdminOnboarding": "There was an issue onboarding admin",
      "errorUnique": "This person already exists in your tenant."
    },
    "templates": {
      "duplicateTemplate": "Duplicate Template",
      "emailTemplate": "Email Template",
      "emailTemplates": "Email Templates",
      "subTitle": "Customize email templates for welcome, password reset, and account verification.",
      "noTemplatesTitle": "You haven't added any email templates yet",
      "newTemplate": "New Template",
      "template": "Template",
      "list": {
        "displayName": "Name",
        "description": "Description"
      },
      "errorRetrievingList": "Error retrieving email template list.",
      "errorRetrievingTemplate": "Error retrieving email template.",
      "errorRetrievingProviderConfig": "Error retrieving email provider config. You may need to set this up.",
      "errorSaving": "Error saving email template",
      "errorDeleting": "Error deleting email template",
      "errorCreating": "Error creating email template",
      "errorDuplicating": "Error duplicating email template",
      "successDelete": "Successfully deleted email template.",
      "successSaving": "Successfully saved email template.",
      "successDuplicating": "Successfully duplicated email template.",
      "createModal": {
        "title": "New Template"
      }
    },
    "provider": {
      "title": "Email Provider",
      "subtitle": "By default system emails will use the built-in SMTP server. You can choose to use your own email provider to send emails to customers.",
      "useEmailProvider": "Use my own email provider",
      "from": "From Address",
      "fromDescription": "Default from address for emails.",
      "fromName": "From Name",
      "fromNameDescription": "Name of sending organization (eg. 'Organization Name').",
      "host": "Host",
      "hostDescription": "Hostname or IP address of your SMTP server.",
      "port": "Port",
      "portDescription": "Port used by your SMTP server. Common ports include 25, 465, and 587. Please avoid using port 25 if you can, since many providers have limitations on this port.",
      "username": "Username",
      "password": "Password",
      "socketConnectionTimeout": "Socket Connection Timeout (ms)",
      "socketWriteTimeout": "Socket Write Timeout (ms)",
      "socketTimeout": "Socket Timeout (ms)",
      "useStartTLS": "Use STARTTLS",
      "useSSL": "Use SSL",
      "showAdvanced": "Show advanced settings",
      "sendTestEmail": "Send Test Email",
      "errorDeletingProvider": "There was an issue deleting the email provider",
      "errorGettingProvider": "There was an issue retrieving the email provider",
      "errorGettingDefaultProvider": "There was an issue retrieving the default email provider",
      "errorSavingProvider": "There was an issue saving the email provider",
      "successSavingProvider": "Email provider successfully saved!",
      "successDeletingProvider": "Email provider successfully deleted.",
      "testProviderEmailBody": "This is a test email using your configured provider settings.",
      "testProviderEmailSubject": "Test Provider Email"
    },
    "availablePropertiesModal": {
      "description": "Choose the type of identity you are going to use this template with to view the available properites.",
      "identityLabel": "Identity Type",
      "title": "Available Properties"
    },
    "deleteModal": {
      "title": "Delete Template?",
      "content": "Are you sure you want to delete this template?",
      "confirm": "Delete template",
      "noTemplatesTitle": "You haven't added any email templates yet"
    },
    "addLocale": {
      "description": "Enter the ISO 639-1 code for the language you are adding.",
      "title": "Add a Locale"
    },
    "edit": {
      "advancedEditorOption": "Advanced Editor",
      "contentOption": "Content",
      "descriptionFieldDescription": "Provide a brief description of this template.",
      "fromAddressFieldTitle": "From Address",
      "fromAddressFieldDescription": "Enter an email address for the group or individual sending the email.",
      "fromNameFieldTitle": "From Name",
      "fromNameFieldDescription": "Name of sending organization (eg. 'Organization Name').",
      "locale": "Locale",
      "localeModal": {
        "addLocaleTitle": "Add Locale",
        "editLocaleTitle": "Edit Locale",
        "deleteLocale": "Delete Locale",
        "localeLabel": "Code",
        "localeDescription": "Enter the <a href=\"https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes\" target=\"_blank\">ISO 639-1 code</a> for the default locale (eg. <code>en</code>).",
        "makeDefault": "Make Default"
      },
      "markdown": "Markdown",
      "resetStyles": "Reset to Default",
      "saveSuccess": {
        "whenSaving": "Template saved",
        "whenActivating": "Template activated",
        "whenDeactivating": "Template deactivated",
        "whenSavingDetails": "Template details saved",
        "whenDuplicating": "Template duplicated",
        "whenDeleting": "Template deleted",
        "whenLocaleSaved": "Locale saved",
        "whenLocaleDeleted": "Locale deleted"
      },
      "saveError": {
        "whenSaving": "Error saving template",
        "whenActivating": "Error activating template",
        "whenDeactivating": "Error deactivating template",
        "whenSavingDetails": "Error saving details",
        "whenDuplicating": "Error duplicating template",
        "whenDeleting": "Error deleting template",
        "whenLocaleSaved": "Error saving locale",
        "whenLocaleDeleted": "Error deleting locale"
      },
      "sendTestEmail": "Send Test Email",
      "sendTestEmailModal": {
        "title": "Send Test Email",
        "testEmailAddressDescription": "Email address to send test email to.",
        "emailSent": "Email sent!",
        "emailSentDescription": "If you don't receive an email within the next hour, please check logs for \"Failed Sending Notification\" events and review your configuration according to Email Provider. If the problem persists, please contact support.",
        "errorTestEmail": "Test email not sent"
      },
      "settingsOption": "Settings",
      "settingsTitle": "Template Settings",
      "subject": "Subject",
      "stylesOption": "Styles",
      "switchToAdvanced": "Switch to Advanced",
      "switchToAdvancedTitle": "Switch to Advanced Editor?",
      "switchToAdvancedDescription": "Are you sure you want to switch to the advanced editor? Your current markdown will be converted to raw HTML, and you wonâ€™t be able to switch back to the markdown editor.",
      "variablesOption": "Variables",
      "displayNameFieldTitle": "Template Name"
    }
  },
  "tenantSettings": {
    "title": "Tenant Settings",
    "dropdownTitle": "Tenant settings",
    "tabs": {
      "details": "Details",
      "admins": "Admins",
      "globalSettings": "Global Settings"
    },
    "details": {
      "title": "Tenant Details",
      "organizationName": "Organization Name",
      "tenantName": "Tenant Name",
      "tenantRegion": "Region",
      "tenant": "TENANT",
      "flagAltText": "Flag",
      "errorRetrievingTenantRegion": "Error retrieving tenant region information."
    },
    "admins": {
      "title": "Admins",
      "invite": "Invite Admins",
      "resendInvite": "Resend Email Invite",
      "multifactorAuthentication": "MFA",
      "user": "User"
    },
    "globalSettings": {
      "title": "Global Settings",
      "getDataFail": "Unable to retrieve global settings data",
      "cookie": "Cookie"
    },
    "locationNames": {
      "singapore": "Singapore",
      "jakarta": "Jakarta",
      "sydney": "Sydney",
      "finland": "Finland",
      "belgium": "Belgium",
      "london": "London",
      "frankfurt": "Frankfurt",
      "netherlands": "Netherlands",
      "zurich": "Zurich",
      "montreal": "MontrÃ©al",
      "saoPaulo": "SÃ£o Paulo",
      "iowa": "Iowa",
      "southCarolina": "South Carolina",
      "northVirginia": "North Virginia",
      "oregon": "Oregon",
      "losAngeles": "Los Angeles",
      "hongKong": "Hong Kong"
    }
  },
  "gatewaysAndAgents": {
    "navTitle": "Gateways & Agents",
    "title": "Gateway and Agent Profiles",
    "subTitle": "Protect resources at the edge using Identity Gateway or an agent.",
    "addGatewayOrAgent": "New Gateway/Agent",
    "noGatewaysOrAgentsText": "You haven't added any Gateways or Agents",
    "idFieldTitle": "Agent ID",
    "userpasswordTitle": "Password",
    "applicationUrlTitle": "Application URL",
    "amServerUrlTitle": "AM Server URL",
    "amUrlTitle": "AM Server URL",
    "realmTitle": "Agent Realm",
    "getListDataFail": "Unable to retrieve Gateways and Agents data",
    "getEditDataFail": "Unable to get {type} properties",
    "deleteError": "Unable to delete {type}",
    "updateSuccess": {
      "gateway": "Updated gateway",
      "java-agent": "Updated java agent",
      "web-agent": "Updated web agent"
    },
    "updateFail": "Unable to update {type}",
    "resetPasswordSuccess": "Password reset",
    "resetPasswordFail": "Unable to reset password",
    "nativeEdit": "Edit advanced settings in the Access Management Native Console",
    "usePolicyAuthorizationName": "Use Policy Authorization",
    "usePolicyAuthorizationHelp": "Use policy to perform fine-grained user authorization. If not enabled the agent will only manage basic user authentication. (Deactivating policy authorization activates SSO_Only).",
    "policySetName": "Policy Set",
    "policySetHelp": "Choose a set of policies for this agent to use to protect your application endpoints.",
    "gateway": {
      "name": "Identity Gateway Profile",
      "redirectUrlName": "Redirect URLs",
      "redirectUrlHelp": "Redirect URLs for cross domain single sign-on (CDSSO) eg. http://openig.ext.com:8080/home/cdsso/redirect"
    },
    "java-agent": {
      "name": "Java Agent Profile"
    },
    "web-agent": {
      "name": "Web Agent Profile"
    },
    "createModal": {
      "selectType": {
        "header": "New Gateway/Agent",
        "introduction": "Deploying an agent or gateway involves downloading and installing a piece of software on your server. To get started choose whether to protect your application using Identity Gateway or an agent."
      },
      "addDetails": {
        "introduction": "Create a profile for the agent to connect to and communicate with ForgeRock.",
        "header": {
          "gateway": "Create Identity Gateway Profile",
          "java-agent": "Create Java Agent Profile",
          "web-agent": "Create Web Agent Profile"
        }
      },
      "created": {
        "editProfile": "Edit Profile",
        "createdMessage": {
          "gateway": "Identity Gateway profile created!",
          "java-agent": "Java Agent profile created!",
          "web-agent": "Web Agent profile created!"
        },
        "nextSteps": "Next Steps",
        "gateway": {
          "download": "<a href='https://backstage.forgerock.com/downloads/browse/ig/featured'>Download Identity Gateway</a>.",
          "instructions": "Follow the <a href='https://backstage.forgerock.com/docs/idcloud/latest/gateways-agents.html'>step-by-step instructions</a> to install and configure Identity Gateway using the following values:"
        },
        "web-agent": {
          "download": "<a href='https://backstage.forgerock.com/downloads/browse/am/featured/web-agents'>Download a web agent</a> based on your needs.",
          "instructions": "Follow the <a href='https://backstage.forgerock.com/docs/idcloud/latest/gateways-agents.html'>step-by-step instructions</a> to install and configure the agent using the following values:"
        },
        "java-agent": {
          "download": "<a href='https://backstage.forgerock.com/downloads/browse/am/featured/java-agents'>Download a java agent</a> based on your needs.",
          "instructions": "Follow the <a href='https://backstage.forgerock.com/docs/idcloud/latest/gateways-agents.html'>step-by-step instructions</a> to install and configure the agent using the following values:"
        }
      },
      "errorCreating": "Could not create {type}",
      "identityGatewayTitle": "Identity Gateway",
      "javaAgentTitle": "Java Agent",
      "webAgentTitle": "Web Agent",
      "save": "Save Profile"
    },
    "editPage": {
      "downloadTitle": "Download and Install",
      "settingsTitle": "Settings",
      "nativeEdit": "Edit advanced settings in the Access Management Native Console",
      "gateway": {
        "downloadDescription": "<a href='https://backstage.forgerock.com/downloads/browse/ig/featured'>Download a identity gateway</a> based on your needs, and follow the <a href='https://backstage.forgerock.com/docs/idcloud/latest/gateways-agents.html'>step-by-step instructions</a> to install and configure the agent using the following values:"
      },
      "java-agent": {
        "downloadDescription": "<a href='https://backstage.forgerock.com/downloads/browse/am/featured/java-agents'>Download a java agent</a> based on your needs, and follow the <a href='https://backstage.forgerock.com/docs/idcloud/latest/gateways-agents.html'>step-by-step instructions</a> to install and configure the agent using the following values:"
      },
      "web-agent": {
        "downloadDescription": "<a href='https://backstage.forgerock.com/downloads/browse/am/featured/web-agents'>Download a web agent</a> based on your needs, and follow the <a href='https://backstage.forgerock.com/docs/idcloud/latest/gateways-agents.html'>step-by-step instructions</a> to install and configure the agent using the following values:"
      }
    }
  },
  "termsAndCondtions": {
    "title": "Terms & Conditions",
    "subTitle": "Configure versioned terms & conditions to track and manage user consent.",
    "newVersion": "New Version",
    "getTermsFail": "Unable to retrieve terms & conditions",
    "noTermsAndConditions": "No terms & conditions created",
    "view": "View Details",
    "setActive": "Set to Active Version",
    "setActiveError": "Unable to set Version to 'Active'",
    "setActiveSuccess": "Successfully set version to 'Active'",
    "deleteVersionError": "Unable to delete version {version}",
    "deleteVersionSuccess": "Successfully removed version {version}",
    "copyOf": "Copy of {version}",
    "termsTimeStamp": "{date} at {time}",
    "draft": "draft",
    "tcVersion": "Version",
    "newVersionModal": {
      "title": "New Version",
      "fieldHelp": "Unique version name used to monitor user consent."
    },
    "editTermsAndConditions": {
      "consent": "Terms & Conditions",
      "testModalHeader": "Terms & Conditions",
      "locale": "Locale",
      "addLocale": "Add locale",
      "markdown": "Markdown",
      "styles": "Styles",
      "try": "Try it out",
      "saveDraft": "Save as Draft",
      "setActive": "Set as Active Version",
      "saveSuccess": "Created a new T&C version",
      "saveDraftSuccess": "Saved a new T&C draft",
      "saveError": "Unable to save new Terms & Conditions version",
      "getTermsFail": "Failed to retrieve Terms & Conditions data",
      "publishConfirmationText": "Are you sure you want to publish this version of terms and conditions? You will not be able to make any further changes after you publish."
    }
  },
  "tenantAdmins": {
    "admin": "Admin",
    "inviteEmail": "Resend Invite Email",
    "tabs": {
      "profile": "Profile"
    },
    "user": {
      "firstName": "First Name",
      "lastName": "Last Name",
      "mail": "Email Address",
      "inviteDate": "Date Invited",
      "onboardDate": "Date Onboarded",
      "jurisdiction": "Jurisdiction"
    },
    "events": {
      "errorAdminData": "Error retrieving admin data.",
      "errorDeleteAdmin": "Failed to delete admin.",
      "accountStatus": "Successfully updated status to {status}.",
      "errorAccountStatus": "Failed to update admin status.",
      "inviteEmail": "Invite email sent successfully.",
      "errorInviteEmail": "Error sending invite email."
    }
  },
  "scripts": {
    "title": "Scripts",
    "listView": {
      "addScript": "New Script",
      "noDataTitle": "You haven't added any scripts yet",
      "subTitle": "Manage scripts used for authentication and authorization."
    },
    "getListDataFail": "Unable to retrieve Script data",
    "deleteFail": "Unable to delete script",
    "editorModal": {
      "selectTypeTitle": "New Script",
      "editTitle": {
        "create": "New {typeName} Script",
        "edit": "Edit {typeName} Script",
        "duplicate": "Duplicate {typeName} Script"
      },
      "chooseType": "Choose the type of script to create.",
      "errorSaving": "Error saving script",
      "errorLoading": "Error loading script data",
      "saveSuccess": "Script saved"
    },
    "deleteModal": {
      "body": "Are you sure you want to delete script {resource}?",
      "thisScript": "this script"
    },
    "typeOptions": {
      "AUTHENTICATION_TREE_DECISION_NODE": {
        "name": "Journey Decision Node",
        "description": "Script to be included in an authentication journey node and executed on the server during authentication."
      },
      "CONFIG_PROVIDER_NODE": {
        "name": "Configuration Provider Node",
        "description": "Default global script for Config Provider."
      },
      "OAUTH2_ACCESS_TOKEN_MODIFICATION": {
        "name": "OAuth2 Access Token Modification",
        "description": "Script to modify OAuth2 authentication tokens when they are passed from the server to the client."
      },
      "OIDC_CLAIMS": {
        "name": "OIDC Claims",
        "description": "Script to gather and populate the claims in a request when issuing an ID token or making a request to the userinfo endpoint."
      },
      "AUTHENTICATION_CLIENT_SIDE": {
        "name": "Client-side Authentication",
        "description": "Script executed on the client during authentication."
      },
      "AUTHENTICATION_SERVER_SIDE": {
        "name": "Server-side Authentication",
        "description": "Script to be included in an authentication module within a chain and executed on the server during authentication."
      },
      "POLICY_CONDITION": {
        "name": "Policy Condition",
        "description": "Script to be used as conditions within authorization policies."
      },
      "SOCIAL_IDP_PROFILE_TRANSFORMATION": {
        "name": "Social Identity Provider Profile Transformation",
        "description": "Script to adapt the fields received by the provider to align with the fields expected by the platform."
      },
      "OAUTH2_MAY_ACT": {
        "name": "OAuth2 May Act",
        "description": "Scripts are included in an authentication module within a chain and are executed on the server during authentication."
      },
      "OAUTH2_VALIDATE_SCOPE": {
        "name": "OAuth2 Validate Scope",
        "description": "Script used for validating OAuth2 scopes."
      }
    },
    "languages": {
      "GROOVY": "Groovy",
      "JAVASCRIPT": "JavaScript"
    }
  },
  "events": {
    "title": "Event Hooks",
    "event": "Event",
    "getListDataFail": "Unable to retrieve events data",
    "deleteFail": "Unable to delete event",
    "saveEventSuccess": "\"{eventName}\" event hook successfully updated.",
    "createEventSuccess": "\"{eventName}\" event hook successfully created.",
    "eventTypes": {
      "onCreate": "is created (onCreate)",
      "postCreate": "after creation (postCreate)",
      "onRead": "is read (onRead)",
      "onUpdate": "is updated (onUpdate)",
      "postUpdate": "after update (postUpdate)",
      "onDelete": "is deleted (onDelete)",
      "postDelete": "after delete (postDelete)",
      "onValidate": "is validated (onValidate)",
      "onRetrieve": "is retrieved (onRetrieve)",
      "onStore": "is stored (onStore)",
      "onSync": "is synced (onSync)"
    },
    "listView": {
      "addEvent": "New Event Hook",
      "noDataTitle": "No event hooks found",
      "subTitle": "Trigger scripts based on system events.",
      "defaultTableTab": "All Endpoints",
      "objectName": "Object Name"
    },
    "deleteModal": {
      "deleteTitle": "Event Hook",
      "deleteMessage": "Are you sure you want to delete the \"{eventName}\" event hook?"
    },
    "editorModal": {
      "editEvent": "Edit Event Hook",
      "newEvent": "New Event Hook",
      "condition": "Condition",
      "objectName": "Object Name",
      "saveError": "Invalid script : {errorMessage}"
    }
  },
  "endpoints": {
    "title": "Custom Endpoints",
    "listView": {
      "addEndpoint": "New Endpoint",
      "noDataTitle": "You haven't added any custom endpoint scripts yet",
      "subTitle": "Use custom endpoints to extend functionality.",
      "defaultTableTab": "All Endpoints"
    },
    "getListDataFail": "Unable to retrieve endpoint script data",
    "deleteFail": "Unable to delete endpoint script",
    "editorModal": {
      "selectTypeTitle": "New Script",
      "editTitle": {
        "create": "New {typeName} Script",
        "edit": "Edit {typeName} Script",
        "duplicate": "Duplicate {typeName} Script",
        "endpoint": "Endpoint"
      },
      "endpointHelp": "Specifies the path that the script can be accessed at.  An endpoint with the name <strong>\"example\"</strong> is addressable over REST at the URL <code>https://{yourdomain}/openidm/endpoint/example</code> or by using a script such as <code>openidm.read('endpoint/example')</code>.",
      "chooseType": "Choose allowed methods to create a customized template to start with in constructing this endpoint.",
      "errorSaving": "Error saving script",
      "errorLoading": "Error loading script data",
      "methodsLabel": "Allowed Methods",
      "globalsHelpText": "The variables passed into this script are namespaced with the \"globals\" object.",
      "testResults": "Test Results",
      "test": "Test",
      "newEndpoint": "New Endpoint",
      "editEndpoint": "Edit Endpoint",
      "compileSuccess": "script compiled",
      "compileFail": "script compilation failed: ",
      "type": "Type:",
      "curlRequest": "cURL Request",
      "curlHelpText": "Generate a cURL request to call your endpoint.",
      "method": "Method",
      "body": "Body",
      "generate": "Generate",
      "viewDocs": "View docs",
      "docsHelpText": "Custom endpoint scripts must return a JSON object. The structure of the return object depends on the method in the request.",
      "curl": "cURL",
      "curlTooltip": "Copy cURL"
    },
    "deleteModal": {
      "deleteTitle": "Custom Endpoint",
      "deleteMessage": "Are you sure you want to delete this endpoint script?"
    },
    "languages": {
      "groovy": "Groovy",
      "javascript": "JavaScript"
    }
  },
  "esv": {
    "title": "Environment Secrets & Variables",
    "subTitle": "Set secrets and variables that are specific to this environment. These will be substituted into configuration or script placeholders.",
    "placeholder": "Configuration Placeholder",
    "updateStarted": "Update process started",
    "updateFinished": "Update process completed",
    "list": {
      "secretsNoDataTitle": "You haven't added any secrets yet",
      "variablesNoDataTitle": "You haven't added any variables yet",
      "secretsNoDataSubtitle": "Add secrets for use within your environment.",
      "variablesNoDataSubtitle": "Add variables for use within your environment.",
      "noSearchResult": "No results found"
    },
    "deleteModal": {
      "thisType": "this {type}"
    },
    "createModal": {
      "addVariable": "Add a Variable",
      "addSecret": "Add a Secret",
      "variableDescription": "Add a variable to create a non-sensitive configuration value that is specific to this environment. Variables are simple key/value pairs.",
      "secretDescription": "Add a secret to create a sensitive configuration value that is specific to this environment. Secrets have multiple secret versions, each containing their own encrypted value. By design, the value of a secret version cannot be read after it has been created."
    },
    "updateVariableModal": {
      "editDescriptionTitle": "Edit Variable Description",
      "editValueTitle": "Edit Variable Value",
      "errorUpdatingVariable": "Error updating variable"
    },
    "updateSecretModal": {
      "editDescriptionTitle": "Edit Secret Description",
      "newVersionHeader": "Create a New Secret Version",
      "confirmDeleteHeader": "Delete Secret Version?",
      "newVersionButtonText": "New Version",
      "addVersionButtonText": "Add Version",
      "confirmDeleteText": "Are you sure you want to delete secret <span class=\"font-weight-bold text-dark\">Version {version}</span>?",
      "errorUpdatingSecret": "Error updating secret",
      "errorAddingSecretVersion": "Error creating Secret Version",
      "errorChangingSecretVersionStatus": "Error changing Secret Version status",
      "errorDeletingSecretVersion": "Error deleting Secret Version",
      "versionCreated": "Version successfully created",
      "versionDeleted": "Version successfully deleted",
      "versionActivated": "Version successfully activated",
      "versionDeactivated": "Version successfully deactivated"
    },
    "pendingUpdates": {
      "updatesToApply": "You have <span class=\"font-weight-bold text-dark\">{count} update</span> to apply. | You have <span class=\"font-weight-bold text-dark\">{count} updates</span> to apply.",
      "viewUpdates": "View Update | View Updates",
      "errorApplyingUpdates": "Error applying updates",
      "updateInProgress": "<span class=\"font-weight-bold\">Update in progress.</span> Adding or editing of environment variables is inactive until update has completed, which may take up to 10 minutes."
    },
    "pendingUpdatesModal": {
      "applyUpdates": "Apply Now",
      "pendingTitle": "Pending Updates",
      "applyTitle": "Apply {count} Update? | Apply {count} Updates?",
      "applyButton": "Apply {count} Update | Apply {count} Updates",
      "tableStageDescription": "The following <span class=\"font-weight-bold text-dark\">{count} update</span> is pending application to your environment. | The following <span class=\"font-weight-bold text-dark\">{count} updates</span> are pending application to your environment.",
      "confirmStageBeforeLink": "Are you sure you want to apply ",
      "confirmStageBackLinkText": "{count} pending update | {count} pending updates",
      "confirmStageAfterLink": " to your environment?",
      "updateWarning": "Changes may take up to 10 minutes to propagate, during which time you will not be able to make further updates."
    }
  },
  "securityQuestions": {
    "subtitle": "Define security questions to use for verification purposes.",
    "title": "Security Questions",
    "questionDeleteSuccess": "Security question successfully deleted",
    "questionUpdateSuccess": "Security questions successfully updated",
    "settingsSaveSuccess": "Security question settings successfully saved",
    "errorLoading": "Error retrieving security question configuration",
    "errorSaving": "Error saving security questions"
  },
  "securityQuestionsQuestions": {
    "title": "Questions",
    "addQuestion": "Add Question",
    "noQuestions": "You haven't defined any security questions",
    "modalDescription": "Define localized messages for this security question.",
    "addLocale": "Add Locale",
    "locale": "Locale",
    "locales": "Locales",
    "addNewLocale": "Add this as new locale",
    "question": "Question",
    "editModalTitle": "Edit Security Question",
    "addModalTitle": "Add a Security Question"
  },
  "securityQuestionsSettings": {
    "title": "Settings",
    "mustDefine": "Must define",
    "mustAnswer": "Must answer",
    "setUpAtLeast": "Users must set up at least",
    "questionsRegistration": "questions during registration.",
    "usersMustAnswer": "Users must answer",
    "questionsSignIn": "questions on sign in",
    "answersGreaterThanDefined": "Cannot require more questions to answer than questions to define"
  },
  "objectTypeEditor": {
    "addObjectType": "Add Object Type",
    "addProperty": "Add Property",
    "details": "Details",
    "editProperty": "Edit Property",
    "id": "ID",
    "multiValued": "Multi-valued",
    "nativeType": "Native Type",
    "noPropertiesDefined": "No properties defined",
    "objectType": "Object type",
    "objectTypes": "Object Types",
    "properties": "Properties",
    "property": "property",
    "userSpecific": "User-specific",
    "userSpecificHelpText": "Property is specific to individual users and not applicable to roles."
  }
}
