{
  "routeNames": {
    "BulkImport": "Import",
    "Connect": "Connect",
    "Consent": "Consent",
    "EditApplication": "Edit Application",
    "EditConnectorServer": "Edit Connector Server",
    "EditServerCluster": "Edit Server Cluster",
    "EditServerClusterServers": "Edit Server Cluster Servers",
    "HostedPages": "Hosted Pages",
    "Journeys": "Journeys",
    "JourneyTree": "Journey Tree",
    "ManagedIdentity": "Manage Identity",
    "PasswordPolicy": "Password Policy",
    "Realm": "Realm Settings"
  },
  "sideMenu": {
    "accessManagement": "Access Management",
    "applications": "Applications",
    "authentication": "Authentication",
    "authorizationRole": "Internal Role",
    "bulkImport": "Import",
    "configureManaged": "Configure",
    "connect": "Connect",
    "dashboard": "Dashboard",
    "email": "Email",
    "hostedPages": "Hosted Pages",
    "identities": "Identities",
    "identityManagement": "Identity Management",
    "journeys": "Journeys",
    "managed": "Manage",
    "nativeConsoles": "Native Consoles",
    "policy": "Policy",
    "provider": "Provider",
    "scripts": "Scripts",
    "provisioningRole": "External Role",
    "selectIcon": "Please select icon in admin (Managed Object) settings",
    "settings": "Settings",
    "signOut": "Sign Out",
    "templates": "Templates",
    "toggleSidebar": "Toggle sidebar"
  },
  "connect": {
    "connectIdentities": "Connect Identities",
    "subtitle": "Connect to identity sources by installing connector servers.",
    "connectors": {
      "title": "Connectors",
      "noConnectors": "No Configured Connectors"
    }
  },
  "application": {
    "errors": {
      "failedLogout": "Failed to logout of platform session",
      "downloadCsvImportFailureError": "There was an error downloading CSV import failures.",
      "reconDetailError": "There was an error getting recon details.",
      "importDetailError": "There was an error getting import details",
      "configDetailError": "There was an error getting configuration details",
      "fileUploadError": "There was an error uploading the file",
      "getImportsError": "There was an error getting the list of imports",
      "configUploadCsvError": "There was an error saving upload-csv config",
      "errorDeletingResource": "There was an error deleting the requested resource.",
      "errorLoadingRealm": "There was an error loading a realm",
      "errorSavingRealm": "There was an error saving realm details",
      "errorDeletingRealm": "There was an error deleting a realm",
      "errorGettingRealmAuthenticationConfig": "There was an error getting realm authentication config",
      "errorSwitchingRealm": "There was an error switching realm"
    }
  },
  "hostedPages": {
    "addTheme": "Add Theme",
    "configurationLoadingFail": "Configuration Not Found",
    "configurationSaveFail": "Failed to Save Configuration",
    "copyOfTheme": "Copy of {themeName}",
    "createModalDescription": "Name for this theme.",
    "createModalLabel": "Name",
    "duplicateThemeTitle": "Duplicate Theme",
    "duplicateThemeName": "Theme name already exists",
    "description": "Activate or deactivate hosted account and delegated administration pages.",
    "defaultRealm": "Realm Default",
    "errorDeletingTheme": "There was an error deleting a theme",
    "errorRetrievingList": "There was an error retrieving the list of themes.",
    "errorSavingTheme": "There was an error saving a theme",
    "newTheme": "New Theme",
    "noHostedPagesText": "There are no themes matching the search term.",
    "setAsRealmDefault": "Set as Realm Default",
    "successDelete": "Theme successfully deleted",
    "successSave": "Theme successfully saved",
    "themeName": "Theme",
    "thisTheme": "this theme",
    "title": "Hosted Pages",
    "theme": {
      "accountPage": "Account Page",
      "backgroundColor": "Sign-In Background Color",
      "backgroundUrlHelp": "URL to optionally display a background image on sign-in pages.",
      "buttonRounded": "Button Radius: {radius}px",
      "editDetails": "Edit Details",
      "editTitle": "Edit Theme",
      "failedToUpdateRealmTheme": "'{realmName}' realm theme failed to updated",
      "favicon": "Favicon",
      "faviconHelp": "Favicon to display in the browser's location bar.",
      "journeyPage": "Journey Page",
      "layoutTab": {
        "accountControls": "Account Controls",
        "accountPage": "Account Page",
        "accountSecurity": "Sign-in & Security",
        "centeredCard": "Centered Card",
        "consent": "Consent",
        "footer": "Footer",
        "footerNote": "Use html or inline css.",
        "journeyPages": "Journey Pages",
        "layout": "Layout",
        "leftJustified": "Left Justified",
        "oauthApplications": "Authorized Applications",
        "password": "Password",
        "personalInformation": "Personal Information",
        "preferences": "Preferences",
        "rightJustified": "Right Justified",
        "sections": "Sections",
        "securityQuestions": "Security Questions",
        "social": "Social Sign In",
        "subtitle": "Customize components and layout of customer-facing pages.",
        "title": "Page Content/Layout",
        "trustedDevices": "Trusted Devices",
        "twoStepVerification": "2-Step Verification",
        "username": "Username"
      },
      "linkActiveColor": "Link Active Color",
      "linkColor": "Link Color",
      "logo": "Sign-in Logo",
      "logoAltText": "Alt Text",
      "logoHeight": "Logo Height: {height}px",
      "logoHelp": "Logo for use on sign-in and registration pages.",
      "logoProfile": "End User Logo (optional)",
      "logoProfileCollapsed": "End User Collapsed Logo (optional)",
      "logoProfileHelp": "Logo to display on the expanded sidebar in customer-facing pages. If not specified, the sign-in logo will be used by default.",
      "logoProfileCollapsedHelp": "Logo to display on the collapsed sidebar in customer-facing pages. If not specified, the sign-in logo will be used by default.",
      "logos": "Logos",
      "logoUrl": "Logo URL",
      "primaryColor": "Brand Color",
      "primaryColorDescription": "Primary brand color used for buttons, switches, and tabs.",
      "primaryOffColor": "Brand Active Color",
      "profileBackgroundColor": "Enduser Background Color",
      "profileMenuHighlightColor": "Menu Active Color",
      "profileMenuTextHighlightColor": "Menu Active Text Color",
      "profilePage": {
        "mockEmail": "bjensen@example.com",
        "mockName": "Barbara Jensen",
        "profile": "Profile",
        "oauthApplicationsPlaceholder": "(Authorized applications will appear here)",
        "preferencesPlaceholder": "(Preferences will appear here)",
        "trustedDevicesPlaceholder": "(Trusted devices will appear here)",
        "socialPlaceholder": "(Social identity providers will appear here)"
      },
      "renameThemeDescription": "Human-readable name for this theme.",
      "resetToDefaults": "Reset to Defaults",
      "saveBeforeClosingModal": {
        "closeWithoutSaving": "Close Without Saving",
        "content": "There are unsaved changes. Would you like to save these before closing?",
        "reallyClose": "Really Close?",
        "saveAndClose": "Save and Close"
      },
      "signInBackgroundUrl": "Sign-In Background URL (optional)",
      "styles": "Styles",
      "successfullyUpdatedRealmTheme": "'{realmName}' realm theme successfully updated",
      "textColor": "Brand Text Color",
      "textColorDescription": "",
      "themeDetails": "Customize the default look and feel to use for sign-in, registration and profile pages."
    }
  },
  "journey": {
    "title": "Journeys",
    "journeyName": "Journey Name",
    "identityResource": "Identity Object",
    "previewInputLabel": "Preview URL",
    "previewHelp": "Copy and paste into an incognito window to preview journey.",
    "usageInputLabel": "Tree ID",
    "usageHelp": "Use when configuring the <a target=\"_blank\" href=\"https://sdks.forgerock.com/\">ForgeRock SDK</a> or calling the REST APIs.",
    "description": "Sign in users to your application using any of the out-of-the-box journeys or customize them to suit your specific requirements.",
    "newJourney": "New Journey",
    "duplicateJourney": "Duplicate Journey",
    "editJourney": "Edit Journey",
    "service": "Service",
    "duplicate": "Duplicate",
    "editDetails": "Edit Details",
    "copyOf": "Copy of {treeId}",
    "preview": "Preview",
    "adminDefault": "Admin Default",
    "setAsAdminDefault": "Set as Admin Default",
    "setAsDefault": "Set as Default",
    "defaultCheckboxTitle": "Default journey for end users",
    "defaultAdminCheckboxTitle": "Default journey for admins",
    "journeyDeleteSuccess": "\"{treeId}\" journey successfully deleted.",
    "journeyEditSuccess": "\"{treeId}\" journey successfully updated.",
    "defaultJourneyUpdated": "\"{treeId}\" successfully set as Default Journey.",
    "noJourney": "You haven't created any journeys",
    "noJourneySubtitle": "Configure journeys to allow users to sign in, register and perform self-service functions like reset their password or recover their username.",
    "noAuthServicesMessage": "Sign in users to your application by creating journeys",
    "errorRetrievingJourneys": "Error retrieving journeys",
    "errorCreatingJourney": "Error creating journey",
    "errorDuplicatingJourney": "Error duplicating journey",
    "errorUpdatingJourney": "Error updating journey",
    "errorDeletingJourney": "Error deleting journey",
    "errorRetrievingJourneyTemplate": "Error retrieving journey template",
    "errorRetrievingTableData": "Error retrieving journey data",
    "errorSettingDefault": "Error setting journey as default",
    "unableToEditResource": "Unable to edit {resource}",
    "unableToDeleteResource": "Unable to delete {resource}",
    "filterNodes": "Filter nodes",
    "editModal": {
      "treeNameDescription": "Human-friendly name for this user flow.",
      "treeManagedIdentityDescription": "Managed identity to authenticate using this journey.",
      "treeDescriptionDescription": "Provide consumers of your flow a brief description of this flow."
    },
    "deleteModal": {
      "title": "Delete Journey?",
      "content": "Are you sure you want to delete this journey?",
      "deleteJourney": "Delete journey"
    },
    "setDefaultModal": {
      "okText": "Save Default",
      "adminTitle": "Set as Default Admin Journey",
      "title": "Set as Default Journey",
      "adminBody": "Set this journey as the default for admin identities authenticating to this realm?",
      "body": "Set this journey as the default for identities authenticating to this realm?"
    },
    "tag": {
      "basicAuthentication": "Basic Authentication",
      "mfa": "Multi Factor Auth",
      "risk": "Risk",
      "behavioral": "Behavioral",
      "contextual": "Contextual",
      "federation": "Federation",
      "identityManagement": "Identity Management",
      "utilities": "Utilities",
      "uncategorized": "Uncategorized"
    }
  },
  "bulkImport": {
    "title": "Import Identities",
    "noDataTitle": "Bulk Import",
    "description": "Bulk import identity data from CSV files.",
    "cancelImport": "Cancel Import",
    "continueImport": "Continue Import",
    "deleteImport": "Delete Import",
    "newImport": "New Import",
    "users": "Users",
    "file": "File",
    "date": "Date",
    "formatCsv": "Format your CSV file (max {maxImportSize}MB) according to this ",
    "csvTemplate": "CSV Template",
    "csvFile": "CSV File",
    "matchUsing": "Match Using",
    "matchUsingHelp": "Select one or more properties for unique record match.",
    "viewDetails": "View Details",
    "uploadingFile": "Uploading file {uploadPercentage}% complete",
    "importComplete": "Import Complete",
    "complete": "Complete",
    "error": "Error",
    "importInProgress": "Import In progress",
    "inProgress": "In progress",
    "inMinutes": "in {timeElapsed} minutes",
    "inSeconds": "in {timeElapsed} seconds",
    "inMilliseconds": "in {timeElapsed} milliseconds",
    "failed": "Failed",
    "updated": "Updated",
    "unchanged": "Unchanged",
    "downloadCsv": "Download CSV",
    "done": "Done",
    "continue": "Continue",
    "cancelImportDescription": "Are you sure you want to cancel your import? If you cancel, pending records will not be processed.",
    "uploadedEntries": "Uploaded {current}/{total} entries",
    "importingEntries": "Importing {numEntries} entries",
    "importedEntries": "Imported {current}/{total} entries",
    "importCancelled": "Import Cancelled",
    "cancelled": "Cancelled",
    "importCancelledDuringUpload": "Import cancelled during upload",
    "uploadCSV": "Upload CSV",
    "selectIdentity": "Select the managed identity object into which you want to import your CSV identities.",
    "importTo": "Import to",
    "deleteImportConfirmation": "If you delete this import the entries imported will remain, but import record will be deleted from the list.",
    "uploadingMessage": "Your file is being uploaded. Please do not close this window or navigate away from this page until the uploading process completes."
  },
  "configure": {
    "managedListView": {
      "title": "Configure Identities",
      "description": "Configure the properties and settings for each identity profile",
      "tableEmpty": "No identity profiles created",
      "getTableDataFail": "Failed to load identity profiless"
    },
    "managedObjectSettings": {
      "minimumCharacters": "Minimum Characters",
      "minimumFilter": "minimumFilter",
      "minimumFilterDescription": "Minimum number of characters required to search.",
      "saveFilterSuccess": "Updated Identity Profile settings",
      "saveFilterFail": "Unable to save filter settings",
      "identityProfile": "Identity Profile",
      "requireSearch": "Require UI Search Filter",
      "filterHelpText": "Optimize performance by requiring administrators to type a minimum length search before displaying sorted identities.",
      "disableRelationshipSortAndSearch": "Disable sorting and searching on grids that use this object as a resource collection."
    }
  },
  "dashboard": {
    "createApplication": {
      "title": "Add a New Application",
      "description": "Add your application to the platform, and integrate the app with ForgeRock authentication."
    },
    "connectIdentities": {
      "title": "Connect Identities",
      "description": "Create and manage identity profiles across applications and IT infrastructure."
    },
    "managedAccess": {
      "title": "Manage Access",
      "description": "Manage how your users can authenticate and gain access to your systems."
    },
    "managedIdentities": {
      "title": "Manage Identities",
      "description": "Control where, when, and how your users can change their information."
    },
    "welcome": {
      "title": "ForgeRock Identity Platform",
      "description": "Helps your customers, workforce, and IoT identities access the connected world – safely and simply.",
      "footer": "Get Started"
    }
  },
  "connectorServers": {
    "activating": "Activating...",
    "bypassAgent": "Connect directly to ForgeRock",
    "bypassAgentDescription": "Bypass the recommended agent connection and configure the connector server to connect directly to ForgeRock.",
    "connectorName": "Connector Name",
    "connectors": "Connectors",
    "connectorServer": "Connector Server",
    "deactivating": "Deactivating...",
    "deleteServer": "Delete server",
    "errorAlreadyExists": "Server name is already in use, please specify a different name",
    "errorRetrievingConnectionStatus": "Error retrieving connection status.",
    "errorRetrievingConnectors": "Error retrieving connectors.",
    "errorRetrievingList": "Error retrieving connector server list.",
    "errorRetrievingSpecificItem": "Error retrieving specified connector server.",
    "errorSaving": "Error saving connector server.",
    "newConnectorServer": "New Connector Server",
    "noConnectorServersSubtitle": "Connect to identities on your resource servers.",
    "noConnectorServersTitle": "No connector servers yet",
    "quickStart": "Quick Start",
    "secretWarning": "Remember or write down your secret as we won’t show it again.",
    "serverCredentials": "Server Credentials",
    "serverCredentialsDescription": "Use these credentials during installation and configuration of the connector server.",
    "successDelete": "Successfully deleted connector server.",
    "successSave": "Successfully saved connector server.",
    "title": "Connector Servers",
    "version": "Version",
    "waitingToConnect": "Waiting to connect...",
    "deleteModal": {
      "content": "Are you sure you want to delete this server?",
      "deletingServer": "Deleting Server...",
      "title": "Delete Server?"
    },
    "newServerModal": {
      "clientIdInUse": "That Client ID is already in use, please choose a different ID",
      "connectorServerApp": "for the connector server application.",
      "connectorServerRegistered": "Connector server registered!",
      "downloadRemote": "<a href='{url}' target='_blank'>Download a connector server</a> based on your needs.",
      "editConnectorServer": "Edit Connector Server",
      "errorUpdatingAuth": "Error adding the user mapping to the Authentication config",
      "lowerAlphaNumOnly": "<ul class='pl-4'><li>Cannot contain spaces</li><li>Can only contain lower case alphanumeric characters</li></ul>",
      "newConnectorServer": "New Connector Server",
      "nextSteps": "Next Steps",
      "registerConnectorServer": "Register your connector server by providing a name and connection settings.",
      "resetSecret": "Reset the client secret",
      "serverDetails": "Server Details",
      "stepByStep": "Follow the <a href='{url}' target='_blank'>step-by-step instructions</a> to install and configure the connector server."
    }
  },
  "serverClusters": {
    "addServers": "Add Servers",
    "addServersToCluster": "Add Servers to an Existing Cluster",
    "addToCluster": "Add to cluster",
    "addingToCluster": "Adding to cluster...",
    "agent": "Agent",
    "algorithm": "Algorithm",
    "algorithmDescription": "Failover ensures that if the primary server fails, service falls back to a designated server. Round robin continuously balances the load among two or more servers.",
    "chooseClusterType": "Choose whether you are clustering connector servers that connect through an agent or directly.",
    "chooseLikeServers": "Choose only servers that have the same connectors installed.",
    "chooseServers": "Choose Servers",
    "confirmDeleteServer": "Are you sure you want to remove this server?",
    "confirmDeleteServerCluster": "Are you sure you want to delete this server cluster?",
    "connectorServerCluster": "Connector Server Cluster",
    "createCluster": "Create Cluster",
    "creatingCluster": "Creating Cluster...",
    "deleteCluster": "Delete Cluster",
    "deleteServerCluster": "Delete server cluster",
    "deleteServerClusterQ": "Delete Server Cluster?",
    "deletingServerCluster": "Deleting Server Cluster...",
    "direct": "Direct",
    "errorAlreadyExists": "Server Cluster name is already in use, please specify a different name",
    "errorRetrievingList": "Error retrieving server clusters list.",
    "errorRetrievingSpecificItem": "Error retrieving specified connector server cluster.",
    "errorSaving": "Error saving server cluster.",
    "failover": "Failover",
    "nameDescription": "The name to display in the Server Clusters list.",
    "newServerCluster": "New Server Cluster",
    "noServerClustersSubtitle": "Cluster configured connector servers to activate scaling and fallback across resources.",
    "noServerClustersTitle": "No server clusters yet",
    "noServers": "No Servers Available",
    "removeServer": "Remove server",
    "removeServerQ": "Remove Server?",
    "removingServer": "Removing server...",
    "roundRobin": "Round Robin",
    "selectServers": "Select any connected server to add it to the cluster.",
    "serverClusterDetails": "Server Cluster Details",
    "servers": "Servers",
    "successDelete": "Successfully deleted server cluster.",
    "successSave": "Successfully saved server cluster.",
    "title": "Server Clusters"
  },
  "trees": {
    "treeSaveSuccessful": "All Changes Saved",
    "failedToGetNodeType": "Failed to gather node type details",
    "failedToGetNodeData": "Failed to gather node data",
    "failedToUpdateNodeOutcomes": "Failed to update node type outcomes",
    "configurationRequired": "Requires Configuration",
    "editPanel": {
      "name": "Name",
      "key": "Key",
      "value": "Value",
      "none": "none",
      "minimumRequired": "At Least {minItems} Value(s) Required"
    },
    "pageNode": {
      "dragHere": "Drag nodes here"
    },
    "nodeTypeList": {
      "failedNodeTypeList": "Failed to get available node types",
      "title": "Nodes",
      "toggleNodeList": "Toggle Node List",
      "deleteSelectedNode": "Delete Selected Node"
    },
    "toolbar": {
      "autoLayout": "Auto Layout",
      "fullscreen": "Toggle Fullscreen"
    }
  },
  "components": {
    "noData": "No group data provided"
  },
  "pages": {
    "app": {
      "notifications": {
        "noNotifications": "No notifications available",
        "title": "Notifications"
      }
    },
    "identities": {
      "managedIdentities": "Manage Identities",
      "subTitle": "Create and configure ForgeRock-hosted identity resources.",
      "deleteResource": {
        "title": "Delete {resource}?",
        "body": "Are you sure you want to delete this {resource}?",
        "primaryButton": "Delete {resource}"
      }
    }
  },
  "passwordPolicy": {
    "title": "Password Policy",
    "subtitle": "Define password rules for identities.",
    "managedError": "Error retrieving managed objects",
    "passwordLength": "Password length",
    "minLength": "Minimum",
    "characters": "characters",
    "minCharacters": "Minimum characters",
    "numMinCharacters": "Number of minimum characters",
    "cannotInclude": "Cannot include",
    "restrictRepetitive": "Repetitive characters (e.g. aaa)",
    "restrictCommon": "Commonly used passwords (e.g. p@ssw0rd, etc.)",
    "restrictAttributes": "Part of {resourceName} attributes",
    "restrictAttributesPlaceholder": "Forbidden {resourceName} attributes",
    "mustContain": "Must contain",
    "reqUpper": "Upper case letter (English)",
    "reqLower": "Lower case letter (English)",
    "reqNumber": "Number (0-9)",
    "reqSymbol": "Symbol (e.g., !@#$%^&*)",
    "restrictForbiddenPlaceholder": "Forbidden characters",
    "cannotReuse": "Cannot reuse",
    "last": "Last",
    "passwords": "passwords",
    "restrictLastPasswords": "Restrict last passwords",
    "forcePasswordChange": "Force Password Change",
    "forcePasswordChangeTime": "Force password change after a certain time",
    "after": "After",
    "days": "days",
    "months": "months",
    "years": "years",
    "updateSuccess": "Updated {resourceName} password policy successfully",
    "updateFailed": "Error updating {resourceName} password policy"
  },
  "applications": {
    "application": "Application",
    "listView": {
      "addApp": "Add Application",
      "tableEmpty": "No available applications",
      "app": "Application",
      "title": "Applications",
      "subTitle": "Set up your applications to use ForgeRock authentication.",
      "active": "Active",
      "inactive": "Inactive",
      "name": "Name"
    },
    "addAppModal": {
      "appClientId": "Client ID",
      "chooseAppType": "Choose an application type",
      "enterprise": "Enterprise",
      "enterpriseHelpText": "Set up SSO to an application like Google, Salesforce, or Office365",
      "consumer": "Consumer",
      "consumerHelpText": "Integrate authentication with your web, native, or service app",
      "consumerAppType": "Choose a consumer application type",
      "nativeTitle": "Native / SPA",
      "nativeExample": "iOS, Android, React",
      "webTitle": "Web",
      "webExample": "Node.js, Java",
      "serviceTitle": "Service",
      "serviceExample": "Machine-to-machine",
      "createCredentials": "Create a client ID for your application.",
      "createCredentialsWithSecret": "Create a client ID and secret for your application.",
      "createApp": "Create Application",
      "defaultModalTitle": "New Application",
      "appTypeModalTitle": "New {appType} App",
      "consumerAppModalTitle": "{appType} Application Credentials",
      "errorCreatingApp": "Could not create application",
      "clientSecretWarning": "Make sure you copy <small class=\"text-monospace alert-link\">Client Secret</small> as it won't be shown again."
    }
  },
  "oauth": {
    "editApp": {
      "schemaFail": "Unable to get application properties",
      "updateSuccess": "Application updated",
      "updateFail": "Application update failed",
      "deleteFail": "Unable to delete application",
      "resetSecretSuccess": "Client secret reset",
      "resetSecretFail": "Unable to reset client secret"
    },
    "listApps": {
      "getAppDataFail": "Unable to retrieve applications data",
      "deleteAppFail": "Unable to delete application",
      "noDataTitle": "You haven't added any applications yet",
      "noDataSubtitle": "Set up an application to use ForgeRock authentication."

    },
    "nativeApp": {
      "alt": "Native App",
      "super": "Native / SPA",
      "newApp": "New App"
    },
    "webApp": {
      "alt": "Web App",
      "super": "Web Application"
    },
    "serviceApp": {
      "alt": "Service App",
      "super": "Service Application"
    },
    "accessTab": {
      "title": "Access",
      "defaultScopesLabel": "Default Scopes",
      "defaultScopesHelp": "Scopes automatically given to tokens.",
      "responseTypesLabel": "Response Types",
      "responseTypesHelp": "Response types this client will support and use.",
      "claimsLabel": "Claims",
      "claimsHelp": "List of claim name translations, which will override those specified for the authorization server. Claims are values that are presented to the user to inform them what data is being made available to the Client.",
      "loopbackInterfaceRedirectionLabel": "Allow wildcard ports in redirect URLs",
      "loopbackInterfaceRedirectionHelp": "This flag indicates whether wildcards can be used for port numbers in redirect URIs. For example - <code>https://127.0.0.1:{port}/{path}</code> for IPv4 and <code>https://[::1]:{port}/{path}</code> for IPv6."
    },
    "authenticationTab": {
      "title": "Authentication",
      "tokenEndpointAuthMethodLabel": "Token Endpoint Authentication Method",
      "tokenEndpointAuthMethodHelp": "The authentication method with which a client authenticates to the authorization server at the token endpoint. The authentication method applies to OIDC requests with the openid scope.",
      "clientTypeLabel": "Client Type",
      "clientTypeHelp": "Type of OAuth 2.0 client. Confidential clients can keep their password secret, and are typically web apps or other server-based clients. Public clients run the risk of exposing their password to a host or user agent, such as rich browser applications or desktop clients.",
      "isConsentImpliedLabel": "Implied Consent",
      "isConsentImpliedHelp": "When active, the resource owner will not be asked for consent during authorization flows. The OAuth2 Provider must be configured to allow clients to skip consent.",
      "mixUpMitigationLabel": "OAuth 2.0 Mix-Up Mitigation active",
      "mixUpMitigationHelp": "Enables OAuth 2.0 mix-up mitigation on the authorization server side. Enable this setting only if this OAuth 2.0 client supports the OAuth 2.0 Mix-Up Mitigation draft, otherwise AM will fail to validate access token requests received from this client.",
      "defaultAcrValuesLabel": "Default ACR values",
      "defaultAcrValuesHelp": "Default requested Authentication Context Class Reference values.",
      "requestUrisLabel": "Request URIs",
      "requestUrisHelp": "Array of request_uri values that are pre-registered by the RP for use at the OP.",
      "clientJwtPublicKeyLabel": "Client JWT Bearer Public Key",
      "subjectTypeLabel": "Subject Type",
      "subjectTypeHelp": "The subject type added to responses for this client.",
      "defaultMaxAgeEnabledLabel": "Default Max Age",
      "defaultMaxAgeEnabledHelp": "Whether or not the default max age is enforced.",
      "defaultMaxAgeLabel": "Default Max Age",
      "mTLSCertificateBoundAccessTokensLabel": "Use Certificate-Bound Access Tokens",
      "mTLSTrustedCertLabel": "mTLS Self-Signed Certificate",
      "mTLSTrustedCertHelp": "Self-signed PEM-encoded X.509 certificate for mTLS client certificate authentication.",
      "mTLSSubjectDNLabel": "mTLS Subject DN",
      "mTLSSubjectDNHelp": "Expected Subject DN of certificate used for mTLS client certificate authentication. Defaults to CN=client_id. Only applicable when using CA-signed certificates."
    },
    "clientManagementTab": {
      "title": "Client Management",
      "updateAccessTokenLabel": "Access Token",
      "updateAccessTokenHelp": "The access token used to update the client."
    },
    "consentScreenTab": {
      "title": "Consent Screen",
      "nameLabel": "Display Name",
      "nameHelp": "A client name that may be relevant to the resource owner when considering approval.",
      "descriptionsLabel": "Display Description",
      "descriptionsHelp": "A description of the client or other information that may be relevant to the resource owner when considering approval.",
      "policyUriLabel": "Privacy Policy URI",
      "policyUriHelp": "The URI for the client's privacy policy, for use in user-facing consent pages."
    },
    "endpointResponseFormatsTab": {
      "title": "Endpoint Response Formats",
      "userinfoResponseFormatLabel": "User info response format",
      "userinfoResponseFormatHelp": "The user info endpoint offers different output format. See <a href='http://openid.net/specs/openid-connect-core-1_0.html#UserInfoResponse'>http://openid.net/specs/openid-connect-core-1_0.html#UserInfoResponse</a>",
      "tokenIntrospectionResponseFormatLabel": "Token Introspection Response Format",
      "tokenIntrospectionResponseFormatHelp": "The token introspection endpoint offers different output format. see <a href='https://tools.ietf.org/html/draft-ietf-oauth-jwt-introspection-response-03'>https://tools.ietf.org/html/draft-ietf-oauth-jwt-introspection-response-03</a>"
    },
    "sessionManagementTab": {
      "title": "Session Management",
      "clientSessionUriLabel": "Client Session URI",
      "clientSessionUriHelp": "This is the URI that will be used to check messages sent to the session management endpoints. This URI must match the origin of the message."
    },
    "signingAndEncryptionTab": {
      "title": "Signing and Encryption",
      "publicKeyLocationLabel": "Public key selector",
      "publicKeyLocationHelp": "Select the public key for this client to come from either the jwks_uri, manual jwks or X509 field.",
      "jwksUriLabel": "Json Web Key URI",
      "jwksUriHelp": "The uri that contains the client's public keys in Json Web Key format.",
      "jwkSetLabel": "Json Web Key",
      "jwkSetHelp": "Raw JSON Web Key value containing the client's public keys.",
      "idTokenPublicEncryptionKeyLabel": "Client ID Token Public Encryption Key",
      "idTokenPublicEncryptionKeyHelp": "A Base64 encoded public key for encrypting ID Tokens.",
      "idTokenEncryptionEnabledLabel": "Enable ID Token Encryption"
    },
    "tokenLifetimesTab": {
      "title": "Token Lifetimes",
      "authorizationCodeLifetimeLabel": "Authorization code lifetime (seconds)",
      "accessTokenLifetimeLabel": "Access token lifetime (seconds)",
      "refreshTokenLifetimeLabel": "Refresh token lifetime (seconds)",
      "jwtTokenLifetimeLabel": "JWT token lifetime (seconds)"
    },
    "clientCredentials": {
      "cardTitle": "Client Credentials",
      "discoveryURILabel": "Discovery URI",
      "clientIDLabel": "Client ID",
      "userpasswordLabel": "Client Secret"
    },
    "generalSettings": {
      "showAdvanced": "{stateText} advanced settings",
      "footerButtonText": "Try it out",
      "cardTitle": "General Settings",
      "clientNameLabel": "Name",
      "descriptionsLabel": "Description",
      "redirectionUrisLabel": "Sign-in URLs",
      "redirectionUrisHelp": "Whitelist for sign-in redirect URLs. eg. http://www.example.com/signin",
      "postLogoutRedirectUriLabel": "Sign-out URLs",
      "postLogoutRedirectUriHelp": "Whitelist for sign-out redirect URLs. eg. http://www.example.com/signout",
      "grantTypesLabel": "Grant Types",
      "grantTypesHelp": "Authorization Code is required for SPA/Native apps.",
      "scopesLabel": "Scopes",
      "scopesHelp": "Scopes are strings that are presented to the user for approval and included in tokens so that the protected resource may make decisions about what to give access to.",
      "logoUriLabel": "App Logo URI",
      "logoUriHelp": "Application logo URI for use in user-facing UIs such as consent pages and application pages."
    },
    "deleteAppModal": {
      "deleteApp": "Delete Application",
      "modalText": "Are you sure you want to delete {appName}?"
    }
  },
  "realm": {
    "title": "Realm",
    "saveRealm": "Save Realm",
    "deleteRealm": "Delete Realm",
    "topLevelRealm": "Top Level Realm",
    "switchLink": "Switch",
    "switchRealm": "Switch realm...",
    "switchRealmModal": "Switch Realm",
    "switchSuccessful": "Successfully switched realm to '{realmName}'",
    "searchRealms": "Search realms...",
    "searchRealmsNoMatch": "There are no realms available.",
    "newRealm": "New Realm",
    "realmSettings": "Realm Settings",
    "dnsAliases": "DNS Aliases (optional)",
    "dnsAliasesDescription": "List of fully-qualified DNS aliases for the realm.",
    "useClientBasedSessions": "Use Client-based Sessions",
    "useClientBasedSessionsDescription": "Client-based sessions provide elastic scalability by storing all session state as a JWT in a cookie stored on the client. It is highly recommended to enable signing and encryption of the JWT in the global session service.",
    "successfullyCreated": "'{realmName}' realm successfully created",
    "successfullyDeleted": "'{realmName}' realm successfully deleted",
    "successfullySaved": "'{realmName}' realm successfully saved",
    "typeToAddDnsAlias": "Type and press enter to add a DNS alias",
    "Status": "Status",
    "active": "Active",
    "details": "Details",
    "theme": "Theme",
    "inactive": "Inactive",
    "activate": "Activate",
    "deactivate": "Deactivate",
    "deactivateModalTitle": "Deactivate Realm?",
    "deactivateModalText": "If you deactivate this realm users will be prevented from signing in. Are you sure you want to deactivate this realm?",
    "deleteModalTitle": "Delete Realm?",
    "activeRealmMessage": "This is an active realm. All configuration data will be lost if deleted. You can set the realm as inactive to prevent login but retain configuration data.",
    "deleteModalText2": "Are you sure you want to permanently delete this realm?",
    "deleteModalText3": "This action cannot be undone.",
    "yesDeleteRealm": "Yes, Delete Realm"
  },
  "customDomain": {
    "active": "Active",
    "addDomain": "Add a Custom Domain",
    "addModal": {
      "cName": "CNAME",
      "content": "Enter the fully qualified domain name that you want as your ForgeRock realm’s URL.",
      "data": "Data",
      "domain": "Domain",
      "domainFieldDescription": "For example, mycompany.com or example.mycompany.com.",
      "host": "Host",
      "secondStageDescription1": "Before ForgeRock can serve traffic over your domain, you need to add an alias from your custom domain to the ForgeRock subdomain of your ForgeRock realm. You do this by creating or modifying a <code>CNAME</code> record for your custom domain name.<br/><br/><h5>To create a CNAME record:</h5>",
      "secondStageDescription2": "Sign in to your Domain Name Registrar.",
      "secondStageDescription3": "Find the option to modify your DNS Records.",
      "secondStageDescription4": "Create a <code>CNAME</code> record with the following values for <code>Host</code> and <code>Data</code>:",
      "secondStageDescription5": "Once you have added the <code>CNAME</code> record, click 'Verify' to continue",
      "thirdStageDescription1": "<span class=\"font-weight-bold\">It may take up to 48 hours for these changes to propagate.</span> Warning notices may appear on your custom URL domain until propagation is finished completely.",
      "thirdStageDescription1Cloud": "We will now start the process of generating your certificate. Once the certificate has been generated you have completed setting up a Custom Domain Name for your ForgeRock realm. ",
      "thirdStageDescription2": "To confirm that ForgeRock is serving traffic over HTTPS (TLS) for your custom domain, visit: {domainLink}<br/><br/> ForgeRock will continue to serve traffic through {trafficLink} and your custom domain. If your changes do not appear within 48 hours, you may need to confirm your DNS settings.",
      "titleStageTwo": "Verify Domain Name Ownership",
      "verify": "Verify",
      "verifying": "Verifying...",
      "verifyError": "Could not verify the specified custom domain. Make sure the CNAME record matches the expected value.",
      "verifySuccess": "Domain successfully saved!",
      "verifySuccessCloud": "Domain successfully verified!"
    },
    "customDomain": "Custom Domain",
    "deleteModal": {
      "title": "Delete Custom Domain?",
      "content": "Are you sure you want to delete your custom domain?",
      "confirmButton": "Delete Custom Domain"
    },
    "descriptionLink": "globally-configured custom domains.",
    "domain": "Domain",
    "domainDescription1": "Use a custom domain to enable a seamless user experience between your domain and ForgeRock. Adding a custom domain to this realm will override any",
    "domainDescription2": "To complete setup you’ll need access to your Domain Name Registrar so that you can modify Domain Name Server (DNS) records.",
    "errorDeletngDomains": "There was an error deleting the custom domains",
    "errorRetrievingDomains": "There was an error retrieving this realm's custom domains",
    "errorSavingDomains": "There was an error saving the custom domains",
    "noDomainMessage": "You haven't added a custom domain for this realm yet",
    "reverify": "Re-verify"
  },
  "logApiKeys": {
    "noLogApiKeysText": "You haven't added any log API keys",
    "logApiKeyDescription": "Send log data to third party services like Splunk or LogStash.",
    "logAPIKeySectionTitle": "Log API Keys",
    "getApiKeyDataFail": "Unable to retrieve API key data",
    "deleteApiKeyFail": "Unable to delete API key",
    "createApiKey": "New Log API Key",
    "apiKeyName": "Name",
    "apiKeyId": "api_key_id",
    "apiKeyCreated": "Created",
    "deleteApiKeyModal": {
      "modalHeader": "Delete Log API Key?",
      "modalText": "Are you sure you want to delete this log API key?",
      "deleteButtonText": "Delete Log API Key"
    },
    "createApiKeyModal": {
      "nameDescription": "Human-readable name for your key",
      "createButtonText": "Create key",
      "creatingButtonText": "Creating key...",
      "errorCreatingKey": "Could not create API key",
      "keySecret": "api_key_secret",
      "createSuccessHeader": "Key successfully created!",
      "oneTimeSecretStatement": "Make sure you copy <code>api_key_secret</code> below as it won't be shown again.",
      "checkIconAltText": "Success icon"
    }
  },
  "cors": {
    "addCorsConfig": "Add a CORS Configuration",
    "corsSectionTitle": "Cross-Origin Resource Sharing (CORS)",
    "corsDescription": "Allow requests to ForgeRock-protected resources to be made from trusted domains.",
    "deleteCorsConfigError": "Unable to delete CORS Configuration",
    "getCorsConfigsDataError": "Unable to retrieve CORS Configurations",
    "getServiceStatusError": "Failed to retrieve CORS Service status",
    "saveServiceStatusError": "Unable to update CORS Service status",
    "saveCorsConfigError": "Unable to save CORS Configuration",
    "noCorsConfigText": "You haven't added any CORS Configurations",
    "successSaving": "Successfully saved CORS Configuration",
    "successSavingService": "Successfully saved CORS Service status",
    "corsConfigModal": {
      "chooseTemplate": "Choose a template for your new CORS Configuration.",
      "sdk": "ForgeRock SDK",
      "sdkDescription": "Defaults for the JavaScript sample app",
      "custom": "Custom",
      "customDescription": "Start with a blank slate",
      "editCorsConfig": "Edit CORS Configuration {id}",
      "newCorsConfig": "New CORS Configuration",
      "nameDescription": "Human-readable name for this configuration.",
      "acceptedOrigins": "Accepted Origins",
      "acceptedOriginsDescription": "Accepted origins that will be allowed to make requests to ForgeRock from your application in a cross-origin context. Wildcards are not supported – each value should be an exact match for the origin of the CORS request including the port number. Eg. <code>https://myapp.example.com:443</code>",
      "acceptedMethods": "Accepted Methods",
      "acceptedMethodsDescription": "The set of (non-simple) accepted HTTP methods allowed when making CORS requests to ForgeRock. The method names are case-sensitive, ensure they are entered in all uppercase characters.",
      "acceptedHeaders": "Accepted Headers (optional)",
      "acceptedHeadersDescription": "Accepted header names when making requests from the above specified trusted domains. Header names are case-insensitive. By default, the following simple headers are explicitly accepted: <code>Cache-Control</code><code>Content-Language</code><code>Expires</code><code>Last-Modified</code><code>Pragma</code>. If you do not specify values for this element, the presence of any header in the CORS request, other than the simple headers listed above, will cause the request to be rejected.",
      "saveCorsConfiguration": "Save CORS Configuration",
      "exposedHeaders": "Exposed Headers (optional)",
      "exposedHeadersDescription": "Add the response header names that ForgeRock returns. The header names are case-insensitive. User agents can make use of any headers that are listed in this property, as well as the simple response headers, which are as follows: <code>Cache-Control</code><code>Content-Language</code><code>Expires</code><code>Last-Modified</code><code>Pragma</code><code>Content-Type</code>. User agents must filter out all other response headers.",
      "enableCaching": "Enable Caching",
      "enableCachingDescription": "Enable the browser to cache the pre-flight response.",
      "maxAge": "Max Age",
      "maxAgeDescription": "The max age (in seconds) for caching.",
      "allowCredentials": "Allow Credentials",
      "allowCredentialsDescription": "Whether to transmit the Access-Control-Allow-Credentials: true header in the response.",
      "successCreate": "Successfully created CORS Configuration"

    },
    "deleteCorsConfigModal": {
      "modalHeader": "Delete CORS Configuration?",
      "modalText": "Are you sure you want to delete this CORS Configuration?",
      "deleteButtonText": "Delete CORS Configuration",
      "successDeleting": "Successfully deleted CORS Configuration"
    }
  },
  "email": {
    "inviteAdmin": {
      "successHeader": "Your invitation(s) has been sent!",
      "successCountMessage": "You’ve invited {count} admin(s)",
      "partialSuccessMessage": "You’ve invited {totalCount} admin(s), but {failCount} invitation(s) didn't send. Review the below errors.",
      "noSuccessMessage": "{count} invitation(s) didn't send. Review the errors below.",
      "notice": "IMPORTANT: Each invited admin will receive an email to setup their admin account and have the permission to fully administer this tenant.",
      "toCompany": "to {company}",
      "emailAddresses": "Email addresses",
      "inviteAdminsTitle": "Invite admins",
      "invitationSentTitle": "Invitations Sent!",
      "partialSuccessTitle": "Partial Success",
      "oopsTitle": "Oops, That Didn't Work",
      "sendInvite": "Send Invitations",
      "inviteMore": "Invite More People",
      "tryAgain": "Try Again",
      "invitedMembers": "Invited Members",
      "notInvited": "Not Invited",
      "errorAdminOnboarding": "There was an issue onboarding admin",
      "errorUnique": "This person already exists in your tenant."
    },
    "templates": {
      "emailTemplate": "Email Template",
      "emailTemplates": "Email Templates",
      "subTitle": "Customize email templates for welcome, password reset, and account verification.",
      "noTemplatesTitle": "You haven't added any email templates yet",
      "newTemplate": "New Template",
      "template": "Template",
      "errorRetrievingList": "Error retrieving email template list.",
      "errorRetrievingTemplate": "Error retrieving email template.",
      "errorRetrievingProviderConfig": "Error retrieving email provider config. You may need to set this up.",
      "errorSaving": "Error saving email template",
      "errorDeleting": "Error deleting email template",
      "errorCreating": "Error creating email template",
      "successDelete":"Successfully deleted email template.",
      "successSaving":"Successfully saved email template.",
      "createModal": {
        "title": "New Template",
        "name": "Template Name",
        "description": "Human-readable name for this email template.",
        "id": "Template ID"
      }
    },
    "preview": {
      "errorRetrievingTemplate": "Error retrieving email template.",
      "title": "Email Template",
      "sendTestEmail": "Send Test Email",
      "template": "Template",
      "preview": "Preview",
      "noSubjectInformation": "No Subject Information",
      "noFromInformation": "No From Information",
      "noMessageInformation": "No Message Information",
      "defaultLocale": "en",
      "sendTestEmailModal": {
        "title": "Send Test Email",
        "testEmailAddressDescription": "Email address to send test email to.",
        "emailSent": "Email sent!",
        "emailSentDescription": "If you don't receive an email within the next hour, please check logs for \"Failed Sending Notification\" events and review your configuration according to Email Provider. If the problem persists, please contact support.",
        "errorTestEmail": "Test email not sent"
      }
    },
    "provider": {
      "title": "Email Provider",
      "subtitle": "By default system emails will use the built-in SMTP server. You can choose to use your own email provider to send emails to customers.",
      "useEmailProvider": "Use my own email provider",
      "from": "From",
      "fromDescription": "Default from address for emails.",
      "host": "Host",
      "hostDescription": "Hostname or IP address of your SMTP server.",
      "port": "Port",
      "portDescription": "Port used by your SMTP server. Common ports include 25, 465, and 587. Please avoid using port 25 if you can, since many providers have limitations on this port.",
      "username": "Username",
      "password": "Password",
      "socketConnectionTimeout": "Socket Connection Timeout (ms)",
      "socketWriteTimeout": "Socket Write Timeout (ms)",
      "socketTimeout": "Socket Timeout (ms)",
      "useStartTLS": "Use STARTTLS",
      "useSSL": "Use SSL",
      "showAdvanced": "Show advanced settings",
      "sendTestEmail": "Send Test Email",
      "errorDeletingProvider": "There was an issue deleting the email provider",
      "errorGettingProvider": "There was an issue retrieving the email provider",
      "errorGettingDefaultProvider": "There was an issue retrieving the default email provider",
      "errorSavingProvider": "There was an issue saving the email provider",
      "successSavingProvider": "Email provider successfully saved!",
      "successDeletingProvider": "Email provider successfully deleted.",
      "testProviderEmailBody": "This is a test email using your configured provider settings.",
      "testProviderEmailSubject": "Test Provider Email"
    },
    "availablePropertiesModal": {
      "description": "Choose the type of identity you are going to use this template with to view the available properites.",
      "identityLabel": "Identity Type",
      "title": "Available Properties"
    },
    "deleteModal": {
      "title": "Delete Template?",
      "content": "Are you sure you want to delete this template?",
      "confirm": "Delete template",
      "thisTemplate": "this template",
      "noTemplatesTitle": "You haven't added any email templates yet"
    },
    "addLocale":{
      "description": "Enter the ISO 639-1 code for the language you are adding.",
      "title": "Add a Locale"
    },
    "edit": {
      "addLocale": "Add a locale",
      "defaultLocale": "Default Locale",
      "editTemplate": "Edit Template",
      "fromFieldTitle": "From",
      "fromFieldDescription": "Enter an email address for the group or individual sending the email.",
      "locale": "Locale",
      "markdown": "Markdown",
      "message": "Message",
      "messageDescription": "Use <a href=\"https://daringfireball.net/projects/markdown/syntax\" target=\"_blank\">markdown</a> to format your email content and use <a href=\"#\" onclick=\"event.preventDefault(); window.showAvailablePropertiesModal()\" target=\"blank\">available variables</a> in your body text eg. <code>{{object.givenName}}</code>",
      "resetStyles": "Reset styles",
      "setAsDefaultLocale": "Set as Default Locale",
      "subject": "Subject",
      "stylesHeader": "Styles",
      "stylesHelpMessage": "Edit inline styles to customize the look and feel of your email.",
      "displayNameFieldTitle": "Template Name"
    }
  },
  "tenantSettings": {
    "title": "Tenant Settings",
    "dropdownTitle": "Tenant settings",
    "tabs": {
      "details": "Details",
      "admins": "Admins",
      "globalSettings": "Global Settings"
    },
    "details": {
      "title": "Tenant Details",
      "organizationName": "Organization Name",
      "tenantName": "Tenant Name"
    },
    "admins": {
      "title": "Admins",
      "invite": "Invite Admins",
      "resendInvite": "Resend Email Invite"
    },
    "globalSettings": {
      "title": "Global Settings",
      "getDataFail": "Unable to retrieve global settings data",
      "cookie": "Cookie"
    }
  },
  "gatewaysAndAgents": {
    "navTitle": "Gateways & Agents",
    "title": "Gateway and Agent Profiles",
    "subTitle": "Protect resources at the edge using Identity Gateway or an agent.",
    "addGatewayOrAgent": "New Gateway/Agent",
    "noGatewaysOrAgentsText": "You haven't added any Gateways or Agents",
    "idFieldTitle": "Agent ID",
    "userpasswordTitle": "Password",
    "applicationUrlTitle": "Application URL",
    "amServerUrlTitle": "AM Server URL",
    "amUrlTitle": "AM Server URL",
    "realmTitle": "Agent Realm",
    "getListDataFail": "Unable to retrieve Gateways and Agents data",
    "getEditDataFail": "Unable to get {type} properties",
    "deleteError": "Unable to delete {type}",
    "updateSuccess": {
      "gateway": "Updated gateway",
      "java-agent": "Updated java agent",
      "web-agent": "Updated web agent"
    },
    "updateFail": "Unable to update {type}",
    "resetPasswordSuccess": "Password reset",
    "resetPasswordFail": "Unable to reset password",
    "nativeEdit": "Edit advanced settings in the Access Management Native Console",
    "usePolicyAuthorizationName": "Use Policy Authorization",
    "usePolicyAuthorizationHelp": "Use policy to perform fine-grained user authorization. If not enabled the agent will only manage basic user authentication. (Deactivating policy authorization activates SSO_Only).",
    "policySetName": "Policy Set",
    "policySetHelp": "Choose a set of policies for this agent to use to protect your application endpoints.",
    "gateway": {
      "name": "Identity Gateway Profile",
      "redirectUrlName": "Redirect URLs",
      "redirectUrlHelp": "Redirect URLs for cross domain single sign-on (CDSSO) eg. http://openig.ext.com:8080/home/cdsso/redirect"
    },
    "java-agent": {
      "name": "Java Agent Profile"
    },
    "web-agent": {
      "name": "Web Agent Profile"
    },
    "createModal": {
      "selectType": {
        "header": "New Gateway/Agent",
        "introduction": "Deploying an agent or gateway involves downloading and installing a piece of software on your server. To get started choose whether to protect your application using Identity Gateway or an agent."
      },
      "addDetails": {
        "introduction": "Create a profile for the agent to connect to and communicate with ForgeRock.",
        "header": {
          "gateway": "Create Identity Gateway Profile",
          "java-agent": "Create Java Agent Profile",
          "web-agent": "Create Web Agent Profile"
        }
      },
      "created": {
        "editProfile": "Edit Profile",
        "createdMessage": {
          "gateway": "Identity Gateway profile created!",
          "java-agent": "Java Agent profile created!",
          "web-agent": "Web Agent profile created!"
        },
        "nextSteps": "Next Steps",
        "gateway": {
          "download": "<a href='https://backstage.forgerock.com/downloads/browse/ig/featured'>Download Identity Gateway</a>.",
          "instructions": "Follow the <a href='https://backstage.forgerock.com/docs/idcloud/latest/gateways-agents.html'>step-by-step instructions</a> to install and configure Identity Gateway using the following values:"
        },
        "web-agent": {
          "download": "<a href='https://backstage.forgerock.com/downloads/browse/am/featured/web-agents'>Download a web agent</a> based on your needs.",
          "instructions": "Follow the <a href='https://backstage.forgerock.com/docs/idcloud/latest/gateways-agents.html'>step-by-step instructions</a> to install and configure the agent using the following values:"
        },
        "java-agent": {
          "download": "<a href='https://backstage.forgerock.com/downloads/browse/am/featured/java-agents'>Download a java agent</a> based on your needs.",
          "instructions": "Follow the <a href='https://backstage.forgerock.com/docs/idcloud/latest/gateways-agents.html'>step-by-step instructions</a> to install and configure the agent using the following values:"
        }
      },
      "errorCreating": "Could not create {type}",
      "identityGatewayTitle": "Identity Gateway",
      "javaAgentTitle": "Java Agent",
      "webAgentTitle": "Web Agent",
      "save": "Save Profile"
    },
    "editPage": {
      "downloadTitle": "Download and Install",
      "settingsTitle": "Settings",
      "nativeEdit": "Edit advanced settings in the Access Management Native Console",
      "gateway": {
        "downloadDescription": "<a href='https://backstage.forgerock.com/downloads/browse/ig/featured'>Download a identity gateway</a> based on your needs, and follow the <a href='https://backstage.forgerock.com/docs/idcloud/latest/gateways-agents.html'>step-by-step instructions</a> to install and configure the agent using the following values:"
      },
      "java-agent": {
        "downloadDescription": "<a href='https://backstage.forgerock.com/downloads/browse/am/featured/java-agents'>Download a java agent</a> based on your needs, and follow the <a href='https://backstage.forgerock.com/docs/idcloud/latest/gateways-agents.html'>step-by-step instructions</a> to install and configure the agent using the following values:"
      },
      "web-agent": {
        "downloadDescription": "<a href='https://backstage.forgerock.com/downloads/browse/am/featured/web-agents'>Download a web agent</a> based on your needs, and follow the <a href='https://backstage.forgerock.com/docs/idcloud/latest/gateways-agents.html'>step-by-step instructions</a> to install and configure the agent using the following values:"
      }
    }
  },
  "consent": {
    "title": "Consent",
    "subTitle": "Configure versioned terms & conditions to track and manage user consent.",
    "newVersion": "New Version",
    "getTermsFail": "Unable to retrieve terms & conditions",
    "noTermsAndConditions": "No terms & conditions created",
    "view": "View Details",
    "setActive": "Set to Active Version",
    "setActiveError": "Unable to set Version to 'Active'",
    "setActiveSuccess": "Successfully set version to 'Active'",
    "copyOf": "Copy of {version}",
    "termsTimeStamp": "{date} at {time}",
    "draft": "draft",
    "newVersionModal": {
      "title": "New Version",
      "fieldHelp": "Unique version name used to monitor user consent."
    },
    "editTermsAndConditions": {
      "consent": "Consent",
      "testModalHeader": "Terms & Conditions",
      "locale": "Locale",
      "addLocale": "Add locale",
      "markdown": "Markdown",
      "styles": "Styles",
      "try": "Try it out",
      "saveDraft": "Save as Draft",
      "setActive": "Set as Active Version",
      "saveSuccess": "Created a new T&C version",
      "saveDraftSuccess": "Saved a new T&C draft",
      "saveError": "Unable to save new Terms & Conditions version",
      "getTermsFail": "Failed to retrieve Terms & Conditions data",
      "publishConfirmationText": "Are you sure you want to publish this version of terms and conditions? You will not be able to make any further changes after you publish."
    }
  },
  "tenantAdmins": {
    "admin": "Admin",
    "deleteAdmin": "Delete admin",
    "inviteEmail": "Resend Invite Email",
    "tabs": {
      "profile": "Profile"
    },
    "user": {
      "firstName": "First Name",
      "lastName": "Last Name",
      "mail": "Email Address",
      "inviteDate": "Date Invited",
      "onboardDate": "Date Onboarded",
      "jurisdiction": "Jurisdiction"
    },
    "events": {
      "errorAdminData": "Error retrieving admin data.",
      "deleteAdmin": "Are you sure you want to delete this admin?",
      "errorDeleteAdmin": "Failed to delete admin.",
      "accountStatus": "Successfully updated status to {status}.",
      "errorAccountStatus": "Failed to update admin status.",
      "inviteEmail": "Invite email sent successfully.",
      "errorInviteEmail": "Error sending invite email."
    }
  },
  "scripts": {
    "title": "Scripts",
    "listView": {
      "addScript": "New Script",
      "noDataTitle": "You haven't added any scripts yet",
      "subTitle": "Manage scripts used for authentication and authorization."
    },
    "getListDataFail": "Unable to retrieve Script data",
    "deleteFail": "Unable to delete script",
    "editorModal": {
      "selectTypeTitle": "New Script",
      "editTitle": {
        "create": "New {typeName} Script",
        "edit": "Edit {typeName} Script",
        "duplicate": "Duplicate {typeName} Script"
      },
      "chooseType": "Choose the type of script to create.",
      "errorSaving": "Error saving script",
      "errorLoading": "Error loading script data"
    },
    "deleteModal": {
      "thisScript": "this script"
    },
    "typeOptions": {
      "AUTHENTICATION_TREE_DECISION_NODE": {
        "name": "Journey Decision Node",
        "description": "Script to be included in an authentication journey node and executed on the server during authentication."
      },
      "OAUTH2_ACCESS_TOKEN_MODIFICATION": {
        "name": "OAuth2 Access Token Modification",
        "description": "Script to modify OAuth2 authentication tokens when they are passed from the server to the client."
      },
      "OIDC_CLAIMS": {
        "name": "OIDC Claims",
        "description": "Script to gather and populate the claims in a request when issuing an ID token or making a request to the userinfo endpoint."
      },
      "AUTHENTICATION_CLIENT_SIDE": {
        "name": "Client-side Authentication",
        "description": "Script executed on the client during authentication."
      },
      "AUTHENTICATION_SERVER_SIDE": {
        "name": "Server-side Authentication",
        "description": "Script to be included in an authentication module within a chain and executed on the server during authentication."
      },
      "POLICY_CONDITION": {
        "name": "Policy Condition",
        "description": "Script to be used as conditions within authorization policies."
      },
      "SOCIAL_IDP_PROFILE_TRANSFORMATION": {
        "name": "Social Identity Provider Profile Transformation",
        "description": "Script to adapt the fields received by the provider to align with the fields expected by the platform."
      },
      "OAUTH2_MAY_ACT": {
        "name": "OAuth2 May Act",
        "description": "Scripts are included in an authentication module within a chain and are executed on the server during authentication."
      },
      "OAUTH2_VALIDATE_SCOPE": {
        "name": "OAuth2 Validate Scope",
        "description": "Script used for validating OAuth2 scopes."
      }
    },
    "languages": {
      "GROOVY": "Groovy",
      "JAVASCRIPT": "JavaScript"
    }
  }
}
