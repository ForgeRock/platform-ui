{
  "routeNames": {
    "Applications": "Applications",
    "BulkImport": "Import",
    "CertificationTemplate": "Certification Template",
    "ConfigureManaged": "Configure Managed",
    "Connect": "Connect",
    "EditApplication": "Edit Application",
    "EditConnectorServer": "Edit Connector Server",
    "EditEmailTemplate": "Edit Email Template",
    "EditOrchestration": "Orchestration Builder",
    "EditResource": "Edit Resource",
    "EditServerCluster": "Edit Server Cluster",
    "EditServerClusterServers": "Edit Server Cluster Servers",
    "EmailProvider": "Email Provider",
    "EmailTemplates": "Email Templates",
    "EmailTemplatePreview": "Email Template Preview",
    "ESV": "Environment Secrets & Variables",
    "HostedPages": "Hosted Pages",
    "Jobs": "Jobs",
    "Journeys": "Journeys",
    "JourneyTree": "Journey Tree",
    "LockTenant": "Lock Tenant",
    "ManagedIdentities": "Manage Identities",
    "ManagedObjectSettings": "Managed Object Settings",
    "PasswordPolicy": "Password Policy",
    "Profile": "Profile",
    "Promotion": "Promotion",
    "PromotionHistory": "Promotion History",
    "Realm": "Realm Settings",
    "TermsAndConditions": "Terms & Conditions"
  },
  "pageTitles": {
    "Applications": "Applications",
    "AutoAccessRisk": "Risk",
    "AutoAccessPipelines": "Pipelines",
    "AutoAccessRiskConfig": "RiskConfig",
    "AutoAccessDataSources": "Data Sources",
    "AutoAccessTenantBehavior": "Tenant Authentication Behavior",
    "AutoAccessUserBehavior": "User Authentication Behavior",
    "BulkImport": "Bulk Import",
    "CampaignDetails": "Campaign Details",
    "CampaignDetailsTask": "Access Reviews",
    "Certification": "Certification",
    "CertificationTemplate": "Certification Template",
    "Cookie": "Cookie",
    "Glossary": "Glossary",
    "ConfigureManaged": "Configure Managed",
    "Connect": "Connect",
    "Csp": "Content Security Policy",
    "Cors": "CORS",
    "CustomEndpoints": "Custom Endpoints",
    "Dashboard": "Dashboard",
    "EditApplication": "Edit Application",
    "EditConnectorServer": "Edit Connector Server",
    "EditEmailTemplate": "Edit Email Template",
    "EditGatewayOrAgent": "Edit Gateway Or Agent",
    "EditOrchestration": "Edit Orchestration",
    "EditProvider": "Edit Provider",
    "EditResource": "Edit Resource",
    "EditServerCluster": "Edit Server Cluster",
    "EditServerClusterServers": "Edit Server Cluster Servers",
    "EditTermsAndConditions": "Edit Terms And Conditions",
    "EmailProvider": "Email Provider",
    "EmailTemplates": "Email Templates",
    "EmailTemplatePreview": "Email Template Preview",
    "Entitlements": "Entitlements",
    "ESV": "Environment Secrets & Variables",
    "Events": "Event Hooks",
    "Forbidden": "Forbidden",
    "GatewaysAndAgents": "Gateways And Agents",
    "HostedPages": "Hosted Pages",
    "HostedPagesEdit": "Edit Hosted Pages",
    "hostedPagesSettings": "Hosted Pages Settings",
    "Jobs": "Jobs",
    "Journeys": "Journeys",
    "JourneyTree": "Journey Tree",
    "LockTenant": "Lock Tenant",
    "LogApiKeys": "Log API Keys",
    "ManagedIdentities": "Managed Identities",
    "ManagedObjectSettings": "Managed Object Settings",
    "NormalView": "Normal View",
    "NotFound": "Not Found",
    "OAuthClients": "OAuth2 Clients",
    "OAuthReturn": "OAuth Return",
    "Orchestrations": "Orchestrations",
    "pageTitle": "Platform Admin - {page}",
    "PasswordPolicy": "Password Policy",
    "Profile": "Profile",
    "Promotion": "Promotion",
    "PromotionAuthentication": "Promotion Authentication",
    "PromotionHistory": "Promotion History",
    "Realm": "Realm",
    "Reports": "Reports",
    "ReportTemplate": "Run Report",
    "ReportTemplateHistory": "Run History",
    "ReportView": "View Report",
    "Scripts": "Scripts",
    "SecurityQuestions": "Security Questions",
    "ServiceAccounts": "Service Accounts",
    "TenantAdmins": "Tenant Admins",
    "TenantSettings": "Tenant Settings",
    "TermsAndConditions": "Terms & Conditions",
    "TenantUpdates": "Tenant Updates"
  },
  "sideMenu": {
    "accessManagement": "Access Management",
    "applications": "Applications",
    "authentication": "Authentication",
    "authorizationRole": "Internal Role",
    "authBehavior": "Auth Behavior",
    "authScripts": "Auth Scripts",
    "bulkImport": "Import",
    "certification": "Certification",
    "configureManaged": "Configure",
    "connect": "Connect",
    "customEndpoints": "Custom Endpoints",
    "dataSources": "Data Sources",
    "email": "Email",
    "entitlements": "Entitlements",
    "glossary": "Glossary",
    "hostedPages": "Hosted Pages",
    "identities": "Identities",
    "identityManagement": "Identity Management",
    "jobs": "Jobs",
    "journeys": "Journeys",
    "managed": "Manage",
    "nativeConsoles": "Native Consoles",
    "oauthClients": "OAuth2 Clients",
    "orchestrations": "Orchestrations",
    "pipelines": "Pipelines",
    "provider": "Provider",
    "provisioningRole": "External Role",
    "realmOverview": "Realm Overview",
    "reports": "Reports",
    "risk": "Risk",
    "riskAdministration": "Risk Administration",
    "riskConfig": "Risk Config",
    "scripts": "Scripts",
    "security": "Security",
    "securityQuestions": "Security Questions",
    "settings": "Settings",
    "templates": "Templates"
  },
  "connect": {
    "connectIdentities": "Connect Identities",
    "subtitle": "Connect to identity sources by installing connector servers.",
    "connectors": {
      "chooseCS": "Choose Connector Server",
      "chooseCSDescription": "Choose the connector server or server cluster to host your {type}.",
      "csConnecting": "<strong>1 connector server</strong> waiting to connect...",
      "configNotFound": "No configuration found for provisioner",
      "configureType": "Configure {type}",
      "connectingTooLong": "Connecting is taking longer than expected - try back in a few minutes.",
      "connectionSettings": "Connection Settings",
      "connectTo": "Connect to {type}",
      "connectorCreateError": "There was an error getting provisioner configurations",
      "connectorCreateSuccess": "Provisioner successfully created",
      "connectorDisconnected": "Provisioner disconnected - reconnect to see data.",
      "connectorLinked": "Provisioner successfully linked to Application",
      "connectorNotFound": "Provisioning not available",
      "connectorSaveError": "There was an error saving the provisioner",
      "connectorSaveSuccess": "Provisioner successfully saved",
      "connectorMissing": "Please ensure your Application is connected.",
      "couldNotConnectError": "Could not connect to provisioner",
      "createMappingsError": "Error creating application mappings",
      "createMappingsSuccess": "Application mappings successfully created",
      "errorLoadingConnectorTemplate": "Error loading connector template",
      "genericHTMLReplacementError": "Unable to connect to remote system",
      "noConnectorsTitle": "No Connector Servers available",
      "noConnectorsSubtitle": "Connecting to your {type} with ForgeRock involves deploying and running a piece of software called a “Connector Server” on your side.",
      "noProvisioning": "You haven't set up provisioning yet",
      "noTokenEndpoint": "No token endpoint configured for this provisioner.",
      "oauthFailure": "Connection failed: {error}",
      "oauthNoInstanceUrl": "Instance URL missing",
      "oauthNoRefreshToken": "Refresh token missing",
      "provisionIds": "Provision identities to this application.",
      "provisioning": "Provisioning",
      "setupInstructions": "Setup Instructions",
      "setUpProvisioning": "Set up Provisioning",
      "salesforce": {
        "callbackURI": "Callback URI",
        "callbackUriDescription": "Be sure your application is configured to use this Callback URL.",
        "configureSFApp": "Configure Salesforce Connected App",
        "connectSF": "Connect to Salesforce",
        "connectSuccess": "Successfully connected to Salesforce",
        "getStarted": "To get started, first configure your Saleforce Connected App with the following settings.",
        "grantScopes": "You must grant this application all of the following OAuth Scopes:",
        "requiredScopes": "Required Scopes",
        "basicInfo": "Access your basic information",
        "performRequests": "Perform requests on your behalf at any time",
        "manageData": "Access and manage your data"
      }
    }
  },
  "application": {
    "errors": {
      "failedLogout": "Failed to logout of platform session",
      "downloadCsvImportFailureError": "There was an error downloading CSV import failures.",
      "reconDetailError": "There was an error getting recon details.",
      "importDetailError": "There was an error getting import details",
      "configDetailError": "There was an error getting configuration details",
      "fileUploadError": "There was an error uploading the file",
      "getImportsError": "There was an error getting the list of imports",
      "configUploadCsvError": "There was an error saving upload-csv config",
      "errorDeletingResource": "There was an error deleting the requested resource.",
      "errorLoadingRealm": "There was an error loading a realm",
      "errorSavingRealm": "There was an error saving realm details",
      "errorDeletingRealm": "There was an error deleting a realm",
      "errorGettingRealmAuthenticationConfig": "There was an error getting realm authentication config",
      "errorSwitchingRealm": "There was an error switching realm",
      "errorLoadingMenusFile": "There was an error loading site configuration",
      "errorLoadingRoutes": "Error loading route definitions."
    }
  },
  "hostedPages": {
    "settings": {
      "description": "Control access to hosted account and journey pages.",
      "hostedAccountPagesTitle": "Hosted Account Pages",
      "hostedJourneyPagesTitle": "Hosted Journey Pages",
      "activateModalTitle": "Activate {pagesTitle}?",
      "activateModalDescription": "Are you sure you want to allow access to {pagesTitle}?",
      "deactivateModalTitle": "Deactivate {pagesTitle}?",
      "deactivateModalDescription": "Are you sure you want to block access to {pagesTitle}?",
      "title": "End User UI"
    },
    "title": "Hosted Pages",
    "theme": {
      "accountPages": "Account Pages",
      "accountTab": {
        "accountCardBackgroundColor": "Card Background Color",
        "accountCardHeaderColor": "Card Header Color",
        "accountCardInnerBorderColor": "Card Inner Border Color",
        "accountCardInputBackgroundColor": "Card Input Background Color",
        "accountCardInputBorderColor": "Card Input Border Color",
        "accountCardInputLabelColor": "Card Input Label Color",
        "accountCardInputSelectColor": "Card Input Select Active Color",
        "accountCardInputSelectHoverColor": "Card Input Select Hover Color",
        "accountCardInputTextColor": "Card Input Text Color",
        "accountCardOuterBorderColor": "Card Outer Border Color",
        "accountCardShadow": "Card Shadow: {pixelValue}px",
        "accountCardTabActiveColor": "Card Tab Active Color",
        "accountCardTabActiveBorderColor": "Card Tab Active Border Color",
        "accountCardTextColor": "Card Text Color",
        "accountControls": "Account Controls",
        "accountFooterDescription": "Place a footer below the page content on all account pages.",
        "accountNavigationBackgroundColor": "Navigation Background Color",
        "accountNavigationTextColor": "Navigation Text Color",
        "accountNavigationToggleBorderColor": "Navigation Toggle Border Color",
        "accountPagesDescription": "Customize the customer-facing pages such as account profile and dashboard.",
        "accountSecurity": "Sign-in & Security",
        "accountTableRowHoverColor": "Table Row Hover Color",
        "bodyText": "Page Text Color",
        "cards": "Cards",
        "consent": "Consent",
        "logoAltTextDescription": "Alt text rendered for both collapsed and expanded versions of the logo",
        "logoHelp": "Logo to display on sign-in and registration pages.",
        "logoProfile": "Expanded Version",
        "logoProfileCollapsed": "Collapsed Version",
        "logoProfileCollapsedHelp": "Logo to display on all account pages when navigation is collapsed.",
        "logoProfileHelp": "Logo to display on all account pages when navigation is expanded.",
        "logoProfileModalTitle": "Update Expanded Logo Image",
        "logoProfileCollapsedModalTitle": "Update Collapsed Logo Image",
        "navigation": "Navigation",
        "oauthApplications": "Authorized Applications",
        "pageStyles": "Page Styles",
        "password": "Password",
        "personalInformation": "Personal Information",
        "preferences": "Preferences",
        "pageTitle": "Page Title Color",
        "profileBackgroundColor": "Page Background Color",
        "profileMenuHighlightColor": "Navigation Active Color",
        "profileMenuHoverColor": "Navigation Hover Color",
        "profileMenuHoverTextColor": "Navigation Hover Text Color",
        "profileMenuTextHighlightColor": "Navigation Active Text Color",
        "profilePage": "Profile Page",
        "profilePageDescription": "Customize the components that appear on a user’s profile page.",
        "securityQuestions": "Security Questions",
        "social": "Social Sign In",
        "topBar": "Top Bar",
        "topBarBackgroundColor": "Top Bar Background Color",
        "topBarBorderColor": "Top Bar Border Color",
        "topBarHeaderColor": "Top Bar Header Color",
        "topBarTextColor": "Top Bar Text Color",
        "trustedDevices": "Trusted Devices",
        "twoStepVerification": "2-Step Verification",
        "userCompany": "Company",
        "username": "Username"
      },
      "configurationLoadingFail": "Configuration Not Found",
      "confirmResetModal": {
        "title": "Reset Theme",
        "confirmation": "Are you sure you want to reset your theme?"
      },
      "copyOfTheme": "Copy of {themeName}",
      "createModalDescription": "Name for this theme.",
      "description": "Create custom-branded themes to apply to customer authentication journeys and account management pages.",
      "duplicateThemeTitle": "Duplicate Theme",
      "editCode": "Edit Code",
      "errorDeletingTheme": "There was an error deleting a theme",
      "errorRetrievingList": "There was an error retrieving the list of themes.",
      "errorSavingTheme": "There was an error saving a theme",
      "footer": "Footer",
      "global": {
        "boldLinks": "Bold Links",
        "brandColor": "Brand Colors",
        "buttonRounded": "Button Radius: {radius}px",
        "buttons": "Buttons",
        "dangerColor": "Danger Color",
        "dangerColorDescription": "Color used to indicate a high-level alert.",
        "description": "Styles applied across all journey and user account pages.",
        "favicon": "Favicon",
        "faviconHelp": "Favicon logo displayed for all journey and account pages.",
        "faviconModalTitle": "Update Favicon Image",
        "faviconModalLabel": "Favicon URL",
        "faviconModalDescription": "Enter a URL where your favicon is hosted (eg. http://mysite.com/img/profile.jpg). Should be either png or jpg format.",
        "fontFamily": "Font Family",
        "fontFamilyDescription": "Font applied to all journeys and customer-facing pages.",
        "linkActiveColor": "Link Hover Color",
        "linkColor": "Link Color",
        "linkedTrees": "Linked Trees",
        "linkedTreesDescription": "Trees using this theme.",
        "links": "Links",
        "primaryColor": "Brand Color",
        "primaryColorDescription": "Primary brand color used for buttons, checkboxes, and switches.",
        "primaryOffColor": "Brand Hover Color",
        "secondaryColor": "Secondary Color",
        "secondaryColorDescription": "Color used for muted text.",
        "settings": "Settings",
        "successColor": "Success Color",
        "successColorDescription": "Color used to indicate a success action.",
        "switchBackgroundColor": "Switch Background Color",
        "switches": "Switches",
        "textColor": "Button Text Color",
        "themeName": "Theme Name",
        "themeNameDescription": "Name for this theme.",
        "title": "Global Settings",
        "typography": "Typography"
      },
      "globalTabTitle": "Global",
      "htmlNote": "HTML/CSS",
      "inputLabel": "Input Label",
      "inputText": "Input Text",
      "itemType": "Theme",
      "journeyPages": "Journey Pages",
      "journeyTab": {
        "backgroundColor": "Page Background Color",
        "backgroundUrlHelp": "URL to optionally display a background image on sign-in pages.",
        "buttonPosition": "Button Position",
        "buttonPositionFullWidth": "Button Full-width",
        "buttonPositionLeft": "Button Left",
        "buttonPositionCenter": "Button Centered",
        "buttonPositionRight": "Button Right",
        "centeredCard": "Centered Card",
        "globalStyles": "Global Styles",
        "header": "Header",
        "headerDescription": "Place a header above the sign-in card.",
        "headerSkipLink": "Header skip link",
        "headerSkipLinkDescription": "Add a skip to main content link in the header for accessibility.",
        "journeyCardBackgroundColor": "Card Background Color",
        "journeyCardHeaderBackgroundColor": "Card Header Background Color",
        "journeyCardShadow": "Card Shadow: {pixelValue}px",
        "journeyCardBorderRadius": "Border Radius: {pixelValue}px",
        "journeyCardTextColor": "Card Text Color",
        "journeyCardTextColorDescription": "Color used for body text across all pages.",
        "journeyCardTitleColor": "Card Title Color",
        "journeyCardTitleColorDescription": "Color used for page title text.",
        "journeyFloatingLabels": "Floating labels",
        "journeyFooterDescription": "Place a footer below the sign-in card.",
        "journeyFooterScriptTag": "Script Tags",
        "journeyFooterScriptTagDescription": "Add html script tags to the document footer on all account pages.",
        "journeyFooterScriptTypeError": "Footer script must be a string.",
        "journeyInputBackgroundColor": "Sign-in Input Background Color",
        "journeyInputBorderColor": "Sign-in Input Border Color",
        "journeyInputLabelColor": "Sign-in Input Label Color",
        "journeyInputSelectColor": "Sign-in Input Select Active Color",
        "journeyInputSelectHoverColor": "Sign-in Input Select Hover Color",
        "journeyInputTextColor": "Sign-in Input Text Color",
        "journeyJustifiedContent": "Message",
        "journeyJustifiedContentDescription": "Message to display to the left or right of the sign-in card.",
        "journeyJustifiedContentMobileViewEnabled": "Visible in mobile",
        "journeyPagesDescription": "Customize the authentication and registration journey pages.",
        "journeyTheaterMode": "Theater Mode",
        "journeyTheaterModeDescription": "Expand the UI using the available space in your browser window.",
        "journeyText": "Journey Text",
        "leftJustified": "Left Justified",
        "logoModalTitle": "Update Logo Image",
        "pageBackground": "Page Background",
        "rightJustified": "Right Justified",
        "signInBackgroundUrl": "Page Background URL (optional)",
        "signinCard": "Sign-in Card"
      },
      "layout": "Layout",
      "logo": "Logo",
      "logoAltText": "Alt Text",
      "logoHeight": "Logo Height: {height}px",
      "logoModalLabel": "Logo URL",
      "logoModalDescription": "Enter a URL where your logo is hosted (eg. http://mysite.com/img/profile.jpg). Should be either png or jpg format.",
      "managedObjectPage": {
        "tabOne": "Details",
        "tabThree": "Authorization Roles",
        "tabTwo": "Preferences",
        "managedObject": "User",
        "managedObjectName": "Full Name",
        "managedObjectSubtitle": "username",
        "resetManagedObject": "Reset Password"
      },
      "modalThemeName": "Name",
      "newTheme": "New Theme",
      "noHostedPagesText": "There are no themes matching the search term.",
      "profilePage": {
        "mockEmail": "bjensen@example.com",
        "mockName": "Barbara Jensen",
        "profile": "Profile",
        "oauthApplicationsPlaceholder": "(Authorized applications will appear here)",
        "preferencesPlaceholder": "(Preferences will appear here)",
        "trustedDevicesPlaceholder": "(Trusted devices will appear here)",
        "socialPlaceholder": "(Social identity providers will appear here)"
      },
      "realmDefault": "Realm Default",
      "saveBeforeLeavingModal": {
        "leaveWithoutSaving": "Leave Without Saving",
        "content": "There are unsaved changes. Would you like to save these before leaving?",
        "reallyLeave": "Really Leave?",
        "saveAndLeave": "Save and Leave"
      },
      "setAsRealmDefault": "Set as Realm Default",
      "styles": "Styles",
      "successDelete": "Theme successfully deleted",
      "successSave": "Theme successfully saved"
    }
  },
  "journey": {
    "allJourneysCategory": "All Journeys",
    "inputFieldCategoryLabel": "Tags (optional)",
    "title": "Journeys",
    "journey": "Journey",
    "journeyName": "Journey Name",
    "identityResource": "Identity Object",
    "previewInputLabel": "Preview URL",
    "previewHelp": "Copy and paste into an incognito window to preview journey.",
    "usageInputLabel": "Tree ID",
    "usageHelp": "Use when configuring the <a target=\"_blank\" href=\"https://sdks.forgerock.com/\">ForgeRock SDK</a> or calling the REST APIs.",
    "description": "Sign in users to your application using any of the out-of-the-box journeys or customize them to suit your specific requirements.",
    "newJourney": "New Journey",
    "duplicateJourney": "Duplicate Journey",
    "editJourney": "Edit Journey",
    "service": "Service",
    "duplicate": "Duplicate",
    "deleteSelectedJourneys": "Are you sure you want to delete the selected journeys?",
    "deleteJourneys": "Delete Journeys",
    "journeysSuccessfullyDeleted": "Journeys successfully deleted",
    "deletingJourneys": "Deleting journeys",
    "editDetails": "Edit Details",
    "copyOf": "Copy of {treeId}",
    "returnToPreviousTree": "Return to parent",
    "adminDefault": "Admin Default",
    "setAsAdminDefault": "Set as Admin Default",
    "setAsDefault": "Set as Default",
    "export": "Export",
    "exportJourneys": "Export Journeys",
    "importJourneys": "Import Journeys",
    "defaultCheckboxTitle": "Default journey for end users",
    "defaultAdminCheckboxTitle": "Default journey for admins",
    "journeyDeleteSuccess": "\"{treeId}\" journey successfully deleted.",
    "journeyEditSuccess": "\"{treeId}\" journey successfully updated.",
    "defaultJourneyUpdated": "\"{treeId}\" successfully set as Default Journey.",
    "noJourney": "You haven't created any journeys",
    "noJourneySearchResults": "There are no journeys matching the search term.",
    "noJourneySubtitle": "Configure journeys to allow users to sign in, register and perform self-service functions like reset their password or recover their username.",
    "noAuthServicesMessage": "Sign in users to your application by creating journeys",
    "overrideThemeCheckboxTitle": "Override theme",
    "errorRetrievingJourney": "Error retrieving journey",
    "errorRetrievingJourneys": "Error retrieving journeys",
    "errorRetrievingDefaultJourneys": "Error retrieving default journey information",
    "errorCreatingJourney": "Error creating journey",
    "errorDuplicatingJourney": "Error duplicating journey",
    "errorUpdatingJourney": "Error updating journey",
    "errorDeletingJourney": "Error deleting journey",
    "errorRetrievingDebugTemplate": "Error retrieving debug node template",
    "errorRetrievingJourneyTemplate": "Error retrieving journey template",
    "errorRetrievingTableData": "Error retrieving journey data",
    "errorSettingDefault": "Error setting journey as default",
    "errorLoadingThemeDetails": "Error loading theme details",
    "unableToEditResource": "Unable to edit {resource}",
    "unableToDeleteResource": "Unable to delete {resource}",
    "uncategorizedJourneys": "Uncategorized",
    "filterNodes": "Filter nodes",
    "theme": "Theme",
    "editModal": {
      "treeCategoryDescription": "Use tags to allow categorization and enhance searchability.",
      "treeNameDescription": "Human-friendly name for this user flow.",
      "treeManagedIdentityDescription": "Managed identity to authenticate using this journey.",
      "treeDescriptionDescription": "Provide consumers of your flow a brief description of this flow.",
      "treeThemeDescription": "Theme that will appear when using this tree."
    },
    "setDefaultModal": {
      "okText": "Save Default",
      "adminTitle": "Set as Default Admin Journey",
      "title": "Set as Default Journey",
      "adminBody": "Set this journey as the default for admin identities authenticating to this realm?",
      "body": "Set this journey as the default for identities authenticating to this realm?"
    },
    "tag": {
      "autonomousAccess": "Autonomous Access",
      "basicAuthentication": "Basic Authentication",
      "mfa": "Multi Factor Auth",
      "risk": "Risk",
      "behavioral": "Behavioral",
      "contextual": "Contextual",
      "federation": "Federation",
      "identityManagement": "Identity Management",
      "utilities": "Utilities",
      "uncategorized": "Uncategorized",
      "marketplace": "Marketplace"
    },
    "treeImportExport": {
      "dependencies": "Dependencies",
      "dependencyTypes": {
        "trees": "Journeys",
        "scripts": "Scripts",
        "emailTemplates": "Email Templates",
        "socialIdentityProviders": "Social Identity Providers",
        "themes": "Themes",
        "saml2Entities": "SAML2 Entities",
        "circlesOfTrust": "Circles of Trust"
      },
      "components": {
        "conflictsView": {
          "keepExisting": "Keep Existing",
          "replace": "Replace",
          "selectAll": "Select all"
        },
        "exportDetails": {
          "gatheringData": "Gathering export data...",
          "requiredDependenciesDescription": "In addition to the journeys themselves, the following required dependencies will be exported.",
          "optionalDependencies": "Optional Dependencies",
          "optionalDependenciesDescription": "These dependencies are also required for the exported journeys to function, but can be omitted from this export if the importing environment already contains matching configurations.",
          "journeyWillFail": "Note: Journey import will fail if any nested journeys do not exist.",
          "nestedJourneys": "Nested Journeys"
        },
        "previewList": {
          "renamed": "Renamed",
          "replace": "Replace"
        }
      },
      "import": {
        "importing": "Importing",
        "imported": "Imported",
        "journey": "journey",
        "journeys": "journeys",
        "skipBackupConfirm": "Are you sure you want to skip backup? There will be no way to restore after import without it.",
        "chooseFile": "Choose a JSON file containing the journey configurations to import.",
        "invalidImportFile": "Invalid import file",
        "missingEsvs": "Import cannot be processed. Import file contains environment specific variable and/or secret replacement strings (ESV's) which are missing corresponding definitions in this tenant. The following ESV's are undefined: ",
        "identityResourceDescription": "Managed identity to use for all journeys being imported.",
        "overwriteAll": "Overwrite all conflicts (default)",
        "manuallyPick": "Manually pick conflict resolution",
        "treeConflictsDescription": "You are trying to import the following journeys that already exist in this realm. Choose whether to keep the existing journeys or overwrite with the imported versions.",
        "dependencyConflictsDescription": "The following items already exist in this realm. What would you like to do?",
        "noJourneysSelected": "You haven't selected any journeys to import",
        "backToPrevious": "Go back to previous screen and choose at least one journey to import to continue.",
        "importComplete": "Import Complete",
        "treesWithErrors": "The following trees had one or more errors during import:",
        "gatheringBackupData": "Gathering backup data...",
        "skipBackup": "Skip Backup",
        "downloadBackup": "Download Backup",
        "next": "Next",
        "tryAgain": "Try Again",
        "done": "Done",
        "startImport": "Start Import",
        "processing": "Processing",
        "importInProgress": "Import in progress. Do not close this window until import is complete.",
        "importSummary": "Import Summary",
        "importFailed": "Import Failed",
        "resolveJourneyConflicts": "Resolve Journey Conflicts",
        "noJourneys": "No Journeys to Import",
        "resolveDependencyConflicts": "Resolve Dependency Conflicts",
        "conflictResolution": "Conflict Resolution",
        "steps": {
          "backupTrees": {
            "description": "This process will import journeys and any required dependencies and can overwrite existing configuration if you choose to do so. As such, before importing any journeys, you must first download a backup of your existing journeys to restore in case of errors or unexpected behaviors during or after import.",
            "important": "Important",
            "notice": "Make sure you keep this backup as there will be no way to restore after import without it.",
            "hide": "Hide",
            "show": "Show",
            "backupSummary": "backup summary"
          },
          "missingInnerTrees": {
            "importFailed": "Import Failed",
            "failureReason": "This import failed because the following nested journeys are missing from both the import file and currently existing journeys.",
            "importAgain": "Re-export with the missing journeys and then try import again."
          },
          "previewImport": {
            "inAddition": "In addition to journeys, the following dependencies will be imported."
          }
        }
      }
    }
  },
  "bulkImport": {
    "title": "Import Identities",
    "noDataTitle": "Bulk Import",
    "description": "Bulk import identity data from CSV files.",
    "cancelImport": "Cancel Import",
    "continueImport": "Continue Import",
    "newImport": "New Import",
    "users": "Users",
    "file": "File",
    "date": "Date",
    "formatCsv": "Format your CSV file (max {maxImportSize}MB) according to this ",
    "csvTemplate": "CSV Template",
    "csvFile": "CSV File",
    "matchUsing": "Match Using",
    "matchUsingHelp": "Select one or more properties for unique record match.",
    "viewDetails": "View Details",
    "uploadingFile": "Uploading file {uploadPercentage}% complete",
    "importComplete": "Import Complete",
    "complete": "Complete",
    "error": "Error",
    "importInProgress": "Import In progress",
    "inProgress": "In progress",
    "inMinutes": "in {timeElapsed} minutes",
    "inSeconds": "in {timeElapsed} seconds",
    "inMilliseconds": "in {timeElapsed} milliseconds",
    "failed": "Failed",
    "updated": "Updated",
    "unchanged": "Unchanged",
    "downloadCsv": "Download CSV",
    "done": "Done",
    "continue": "Continue",
    "cancelImportDescription": "Are you sure you want to cancel your import? If you cancel, pending records will not be processed.",
    "uploadedEntries": "Uploaded {current}/{total} entries",
    "importingEntries": "Importing {numEntries} entries",
    "importedEntries": "Imported {current}/{total} entries",
    "importCancelled": "Import Cancelled",
    "cancelled": "Cancelled",
    "importCancelledDuringUpload": "Import cancelled during upload",
    "uploadCSV": "Upload CSV",
    "selectIdentity": "Select the managed identity object into which you want to import your CSV identities.",
    "importTo": "Import to",
    "deleteImportConfirmation": "If you delete this import the entries imported will remain, but import record will be deleted from the list.",
    "successDelete": "Successfully deleted import",
    "uploadingMessage": "Your file is being uploaded. Please do not close this window or navigate away from this page until the uploading process completes."
  },
  "configure": {
    "managedListView": {
      "id": "Id",
      "title": "Configure Identities",
      "description": "Configure the properties and settings for each identity profile",
      "profile": "Profile",
      "tableEmpty": "No identity profiles created",
      "getTableDataFail": "Failed to load identity profiless"
    },
    "managedObjectSettings": {
      "configurationLoadingFail": "Configuration Not Found",
      "minimumCharacters": "Minimum Characters",
      "minimumFilter": "minimumFilter",
      "minimumFilterDescription": "Minimum number of characters required to search.",
      "saveFilterSuccess": "Updated Identity Profile settings",
      "saveFilterFail": "Unable to save filter settings",
      "identityProfile": "Identity Profile",
      "requireSearch": "Require UI Search Filter",
      "filterHelpText": "Optimize performance by requiring administrators to type a minimum length search before displaying sorted identities.",
      "disableRelationshipSortAndSearch": "Disable sorting and searching on grids that use this object as a resource collection."
    }
  },
  "dashboard": {
    "analytics": {
      "beta": "Beta",
      "compareLastPeriodLabel": "Compare to last period",
      "dateRangeLast7Days": "Last 7 Days",
      "dateRangeLast30Days": "Last 30 Days",
      "dateRangeToday": "Today",
      "dateRangeYesterday": "Yesterday",
      "description": "Trend data is updated every 2-3 hours. All times are UTC.",
      "title": "Trends",
      "filterModal": {
        "activeApplied": "No filters applied | {count} filter applied | {count} filters applied",
        "labelCategoriesButton": "Categories",
        "labelCategoriesClear": "Clear categories and show all",
        "labelCategoriesDropdown": "Filter Categories",
        "labelFiltersClear": "Clear filters and show all journeys",
        "labelFiltersButton": "Journeys",
        "labelFiltersDropdown": "Filter Journeys",
        "modalDescription": "Add filters to narrow journeys shown.",
        "modalTitle": "Filter Journeys"
      },
      "charts": {
        "categories": "Categories",
        "chartLegendFail": "Fail",
        "chartLegendSuccess": "Success",
        "filterCategoriesLabel": "Filter Categories",
        "filterJourneysDescription": "Add filters to narrow journeys shown.",
        "filterJourneysLabel": "Filter Journeys",
        "loadUsersError": "Error retrieving {error}",
        "journeysActiveTitle": "Journeys",
        "journeysActiveDescription": "Successful or failed journey outcomes (timeout are not currently shown) in this realm for a given time period.",
        "journeysFilterButtonTitle": "View:",
        "journeysModalSelected": "Show {count} journey | Show {count} journeys",
        "journeysModalSelectedNone": "No filters applied",
        "journeysModalTitle": "Filter Journeys",
        "journeysSelectedAll": "All Journeys",
        "journeysSelected": "{count} Journey | {count} Journeys",
        "journeysTopFive": "Top Five Journeys by Outcome",
        "journeysTopFiveTooltip": "Top success and fail for the date range selected above",
        "journeysUsage": "Top Five Journeys by Usage",
        "journeysUsageTooltip": "Most and least used for the date range selected above",
        "least": "Least",
        "most": "Most",
        "userActiveTitle": "Total Users Trend",
        "userActiveDescription": "Trend of total number of users in this realm for the given time period",
        "userEngagementTitle": "User Engagement",
        "userEngagementDescription": "Unique user count with at least one activity like sign-in, set or update password, or token issuance/validation/refresh performed in this realm for a given time period.",
        "userNewTitle": "Sign Ups",
        "userNewDescription": "Trend of new user sign-ups in this realm for a given time period",
        "viewDetail": "View Detail",
        "breakdown": {
          "number": "Number",
          "percentage": "Percentage",
          "subtitle-number": "Ranked based on the number of failures per journey",
          "subtitle-percentage": "Ranked based on the percentage of failures per journey",
          "title": "Metric Breakdown"
        },
        "tooltips": {
          "amount": "{total} of {totalUsage}",
          "percentageBreakdown": "Percentage Breakdown",
          "failRate": "fail rate",
          "successRate": "success rate",
          "usageRate": "usage rate"
        }
      },
      "errors": {
        "receivingJourneys": "Error receiving journeys"
      },
      "realmOverview": "Realm Overview"
    },
    "autonomousAccess": {
      "normalView": {
        "filterModal": {
          "activeApplied": "No filters applied | {count} filter applied | {count} filters applied",
          "labelFiltersClear": "Clear filters and show all features",
          "labelFiltersDropdown": "Filter by Feature",
          "modalDescription": "Add filters to narrow authentication attempts shown.",
          "modalTitle": "Filter Authentication Attempts"
        }
      }
    },
    "cardCount": {
      "applications": "Applications",
      "applicationsRequestError": "Unable to retrieve applications count",
      "applicationsTooltip": "Total number of applications in this realm",
      "organizations": "Organizations",
      "organizationsRequestError": "Unable to retrieve organizations count",
      "organizationsTooltip": "Total number of organizations in this realm",
      "realmOverview": "Realm Overview",
      "totalUsers": "Total Users",
      "totalUsersRequestError": "Unable to retrieve total number of users count",
      "totalUsersTooltip": "Total number of users in this realm"
    },
    "createApplication": {
      "title": "Add a New Application",
      "altText": "Application Icon",
      "description": "Add your application to the platform, and integrate the app with ForgeRock authentication."
    },
    "connectIdentities": {
      "title": "Connect Identities",
      "altText": "Identities Icon",
      "description": "Create and manage identity profiles across applications and IT infrastructure."
    },
    "managedAccess": {
      "title": "Manage Access",
      "description": "Manage how your users can authenticate and gain access to your systems."
    },
    "managedIdentities": {
      "title": "Manage Identities",
      "description": "Control where, when, and how your users can change their information."
    },
    "welcome": {
      "title": "ForgeRock Identity Platform",
      "description": "Helps your customers, workforce, and IoT identities access the connected world – safely and simply.",
      "footer": "Get Started"
    }
  },
  "reports": {
    "heading": "Reports",
    "lastRun": "Last run",
    "menu": {
      "editTemplate": "Edit Template",
      "reportDetails": "Report Details",
      "runHistory": "Run History"
    },
    "noData": "No Report Template found",
    "run": "Run",
    "subtitle": "The following reports are based on pre-configured queries on events and provide insights in an easily understandable format.",
    "search": "Search reports",
    "tabs": {
      "runReport": {
        "title": "Run Report",
        "runNow": "Run Now",
        "success": "Your report request has been submitted.",
        "applications": {
          "allApplications": "All applications",
          "allOIDCApplications": "All OIDC applications",
          "allSAMLApplications": "All SAML applications",
          "specificApplications": "Specific applications"
        },
        "events": {
          "allEventTypes": "All event types",
          "tokenGrant": "Token grant",
          "tokenRefresh": "Token refresh",
          "sso": "SSO"
        },
        "outcome": {
          "allOutcomes": "All outcomes"
        },
        "timeframe": {
          "label": "Timeframe",
          "today": "Today",
          "yesterday": "Yesterday",
          "last7Days": "Last 7 days",
          "last30Days": "Last 30 days",
          "custom": "Custom",
          "startDate": "Start Date",
          "endDate": "End Date"
        },
        "status": {
          "label": "User Status",
          "allStatuses": "All statuses",
          "active": "Active",
          "inactive": "Inactive",
          "blocked": "Blocked"
        },
        "journeys": {
          "label": "Journeys",
          "selectJourneys": "Select journeys"
        },
        "organizations": "Organizations",
        "roles": "Roles",
        "errors": {
          "couldNotRunReport": "Error running the report.",
          "errorRetrievingTemplate": "Error retrieving template.",
          "errorRunningReport": "There was an error while attempting to run the report.",
          "templateDoesNotExist": "Report template does not exist."
        }
      },
      "runHistory": {
        "title": "Run History"
      }
    },
    "title": "Reports"
  },
  "connectorServers": {
    "activating": "Activating...",
    "bypassAgent": "Connect directly to ForgeRock",
    "bypassAgentDescription": "Bypass the recommended agent connection and configure the connector server to connect directly to ForgeRock.",
    "connectorName": "Connector Name",
    "connectors": "Connectors",
    "connectorServer": "Connector Server",
    "deactivating": "Deactivating...",
    "errorAlreadyExists": "Server name is already in use, please specify a different name",
    "errorDeleting": "Error deleting connector server.",
    "errorRetrievingConnectionStatus": "Error retrieving connection status.",
    "errorRetrievingConnectors": "Error retrieving connectors.",
    "errorRetrievingList": "Error retrieving connector server list.",
    "errorRetrievingSpecificItem": "Error retrieving specified connector server.",
    "errorSaving": "Error saving connector server.",
    "newConnectorServer": "New Connector Server",
    "noConnectorServersSubtitle": "Connect to identities on your resource servers.",
    "noConnectorServersTitle": "No connector servers yet",
    "quickStart": "Quick Start",
    "secretWarning": "Remember or write down your secret as we won’t show it again.",
    "serverCredentials": "Server Credentials",
    "serverCredentialsDescription": "Use these credentials during installation and configuration of the connector server.",
    "successDelete": "Successfully deleted connector server.",
    "successSave": "Successfully saved connector server.",
    "title": "Connector Servers",
    "version": "Version",
    "waitingToConnect": "Waiting to connect...",
    "newServerModal": {
      "alphaNumDashOnly": "Must only contain letters, numbers, hyphens and underscores",
      "clientIdInUse": "That Client ID is already in use, please choose a different ID",
      "connectorServerApp": "for the connector server application.",
      "connectorServerRegistered": "Connector server registered!",
      "downloadRemote": "<a href='{url}' target='_blank'>Download a connector server</a> based on your needs.",
      "editConnectorServer": "Edit Connector Server",
      "errorUpdatingAuth": "Error adding the user mapping to the Authentication config",
      "lowerAlphaNumHyphenDashOnly": "Must only contain lowercase letters, numbers, underscores and hyphens",
      "newConnectorServer": "New Connector Server",
      "nextSteps": "Next Steps",
      "registerConnectorServer": "Register your connector server by providing a name and connection settings.",
      "resetSecret": "Reset the client secret",
      "serverDetails": "Server Details",
      "stepByStep": "Follow the <a href='{url}' target='_blank'>step-by-step instructions</a> to install and configure the connector server."
    }
  },
  "serverClusters": {
    "addServers": "Add Servers",
    "addServersToCluster": "Add Servers to an Existing Cluster",
    "addToCluster": "Add to cluster",
    "addingToCluster": "Adding to cluster...",
    "agent": "Agent",
    "algorithm": "Algorithm",
    "algorithmDescription": "Failover ensures that if the primary server fails, service falls back to a designated server. Round robin continuously balances the load among two or more servers.",
    "chooseClusterType": "Choose whether you are clustering connector servers that connect through an agent or directly.",
    "chooseLikeServers": "Choose only servers that have the same connectors installed.",
    "chooseServers": "Choose Servers",
    "confirmDeleteServer": "Are you sure you want to remove this server?",
    "connectorServerCluster": "Connector Server Cluster",
    "createCluster": "Create Cluster",
    "creatingCluster": "Creating Cluster...",
    "direct": "Direct",
    "errorAlreadyExists": "Server Cluster name is already in use, please specify a different name",
    "errorDeleting": "Error deleting server cluster.",
    "errorRetrievingList": "Error retrieving server clusters list.",
    "errorRetrievingSpecificItem": "Error retrieving specified connector server cluster.",
    "errorSaving": "Error saving server cluster.",
    "failover": "Failover",
    "nameDescription": "The name to display in the Server Clusters list.",
    "newServerCluster": "New Server Cluster",
    "noServerClustersSubtitle": "Cluster configured connector servers to activate scaling and fallback across resources.",
    "noServerClustersTitle": "No server clusters yet",
    "noServers": "No Servers Available",
    "removeServer": "Remove server",
    "removeServerQ": "Remove Server?",
    "removingServer": "Removing server...",
    "roundRobin": "Round Robin",
    "selectServers": "Select any connected server to add it to the cluster.",
    "serverCluster": "Server Cluster",
    "serverClusterDetails": "Server Cluster Details",
    "servers": "Servers",
    "successDelete": "Successfully deleted server cluster.",
    "successSave": "Successfully saved server cluster.",
    "title": "Server Clusters"
  },
  "trees": {
    "treeSaveSuccessful": "All Changes Saved",
    "failedToGetNodeType": "Failed to gather node type details",
    "failedToGetNodeData": "Failed to gather node data",
    "failedToUpdateNodeOutcomes": "Failed to update node type outcomes",
    "configurationRequired": "Requires Configuration",
    "editPanel": {
      "confirmPassword": "Confirm Password",
      "confirmPasswordDescription": "User must enter identical password in second field to validate.",
      "displayChoiceType": "Field Display Type",
      "displayChoiceTypeDescription": "Specifies the field format that the choice collector is displayed in.",
      "displayChoiceRadio": "radio",
      "displayChoiceSelect": "select",
      "name": "Name",
      "none": "none",
      "minimumRequired": "At Least {minItems} Value(s) Required",
      "policyDisplayCheckmark": "Checkmark Policy Display",
      "policyDisplayCheckmarkDescription": "Successful policy list items will be denoted with a checkmark instead of faded bullet-points.",
      "showButtonsAsLinks": "Show buttons as links",
      "showButtonsAsLinksDescription": "Show the buttons as links on node.",
      "showOnlyPositiveAnswer": "Only Positive Answer",
      "showOnlyPositiveAnswerDescription": "Only show one the positive answer button on node.",
      "submitButtonText": "Submit Button Text",
      "submitButtonTextDescription": "Text to show within node's submit button.",
      "pageHeaderInfo": "Localized header to display on the page node (first locale will be used as fallback)",
      "pageDescriptionInfo": "Localized description to display on the page node (first locale will be used as fallback)",
      "pageFooterTitle": "Page Footer",
      "pageFooterInfo": "Localized footer to display on the page node (first locale will be used as fallback)",
      "theme": "Theme",
      "themeDescription": "If using hosted pages, specify a theme to override this journey's UI theme."
    },
    "debugWarningTitle": "Debug warning",
    "debugWarning": "<b>Debug mode is active.</b> Make sure you deactivate before promoting your environment configuration.",
    "debugPanel": {
      "name": "Debug",
      "description": "Activate debug mode to output journey data to debug logs. Optionally, enable the debug popup to display debug logs as you traverse the nodes in your journey.",
      "debugEnabledLabel": "Debug mode",
      "popupEnabledLabel": "Enable Debug Popup",
      "popupEnabledHelp": "If enabled, a popup window will display debug logs as you step through the login journey"
    },
    "pageNode": {
      "dragHere": "Drag nodes here"
    },
    "kbaCreateNode": {
      "title": "Questions",
      "description": "Localized questions from which the user can pick when defining security questions."
    },
    "nodeTypeList": {
      "addNodes": "Nodes",
      "failedNodeTypeList": "Failed to get available node types",
      "title": "Nodes",
      "toggleNodeList": "Toggle Node List",
      "deleteSelectedNode": "Delete Selected Node"
    },
    "toolbar": {
      "autoLayout": "Auto Layout",
      "fullscreen": "Toggle Fullscreen",
      "zoomIn": "Zoom In",
      "zoomOut": "Zoom Out"
    },
    "deactivateModal": {
      "body": "Are you sure you want to deactivate this journey? Applications that use this journey will no longer be able to authenticate users.",
      "title": "Deactivate Journey?"
    }
  },
  "components": {
    "noData": "No group data provided"
  },
  "pages": {
    "app": {
      "notifications": {
        "noNotifications": "No notifications available",
        "title": "Notifications"
      }
    },
    "identities": {
      "managedIdentities": "Manage Identities",
      "subTitle": "Create and configure ForgeRock-hosted identity resources.",
      "deleteResource": {
        "title": "Delete {resource}?",
        "body": "Are you sure you want to delete this {resource}?",
        "primaryButton": "Delete {resource}"
      }
    }
  },
  "passwordPolicy": {
    "title": "Password Policy",
    "subtitle": "Define password rules for identities.",
    "managedError": "Error retrieving managed objects",
    "passwordLength": "Password length",
    "minLength": "Minimum",
    "characters": "characters",
    "minCharacters": "Minimum characters",
    "numMinCharacters": "Number of minimum characters",
    "cannotInclude": "Cannot include",
    "restrictRepetitive": "Repetitive characters (e.g. aaa)",
    "restrictCommon": "Commonly used passwords (e.g. p@ssw0rd, etc.)",
    "restrictAttributes": "Part of {resourceName} attributes",
    "restrictAttributesPlaceholder": "Forbidden {resourceName} attributes",
    "mustContain": "Must contain",
    "reqUpper": "Upper case letter (English)",
    "reqLower": "Lower case letter (English)",
    "reqNumber": "Number (0-9)",
    "reqSymbol": "Special character (e.g., !@#$%^&*)",
    "ofTheFollowing": "of the following:",
    "showAdvanced": "Show advanced options",
    "showBasic": "Show basic options",
    "minNumCharacterSets": "Minimum number of character sets required",
    "minCharacterSetsAll": "All",
    "minCharacterSets": "At least {minSets}",
    "restrictForbiddenPlaceholder": "Forbidden characters",
    "cannotReuse": "Cannot reuse",
    "last": "Last",
    "passwords": "passwords",
    "restrictLastPasswords": "Restrict last passwords",
    "forcePasswordChange": "Force Password Change",
    "forcePasswordChangeTime": "Force password change after a certain time",
    "after": "After",
    "days": "days",
    "months": "months",
    "years": "years",
    "updateSuccess": "Updated {resourceName} password policy successfully",
    "updateFailed": "Error updating {resourceName} password policy"
  },
  "applications": {
    "application": "Application",
    "confirmDelete": "Are you sure you want to delete <b>{appName}</b>?",
    "errorRetrievingApplications": "Error retrieving Applications",
    "errorRetrievingApplicationTemplates": "Error retrieving Application templates",
    "errorLoadingAppTemplate": "Error loading Application template",
    "deprecated": "(deprecated)",
    "templateVersion": "v{version}",
    "listView": {
      "addApp": "Add Application",
      "addCustomApp": "Custom Application",
      "addCatalogApp": "Browse App Catalog",
      "tableEmpty": "No available applications",
      "app": "Application",
      "title": "Applications",
      "subTitle": "Set up your applications to use ForgeRock authentication.",
      "active": "Active",
      "inactive": "Inactive",
      "name": "Name"
    },
    "createCatalogAppModal": {
      "Agent": "Agent",
      "applicationIntegration": "Application Integration",
      "applicationDetails": "Application Details",
      "Create": "Create",
      "defaultModalTitle": "Browse App Catalog",
      "Delete": "Delete",
      "filterApps": "Filter apps",
      "OIDC": "OIDC",
      "provisioning": "Provisioning",
      "Read": "Read",
      "retrieveTemplateError": "Error retrieving application template",
      "SAML": "SAML",
      "sso": "Access",
      "ssoBadge": "SSO",
      "support": "Support",
      "templateHeader": "{displayName} Application",
      "Update": "Update",
      "version": "Version",
      "WS-Fed": "WS-Fed"
    },
    "addCustomAppModal": {
      "appClientId": "Client ID",
      "bookmark": "Bookmark",
      "bookmarkDescription": "Bookmark apps are used to direct users to a specific application URL. They do not need credentials and simply work as normal bookmarks on any browser.",
      "createCredentials": "Create a client ID for your application.",
      "createCredentialsWithSecret": "Create a client ID and secret for your application.",
      "createApp": "Create Application",
      "errorAddingToDashboard": "There was an error adding application to dashboard service",
      "applicationDetails": "Application Details",
      "oauthSettings": "{signInMethod} Settings",
      "applicationType": "Application Type",
      "applicationTypeDescription": "<p>Choose the type of application you want to integrate with ForgeRock.</p> <p>Specifying an application type customizes your experience and provides the best configuration, SDK, and sample recommendations.</p> <p>Learn more about sample apps with the <a href='https://sdks.forgerock.com/' target='_blank'>ForgeRock SDKs.</a></p>",
      "defaultModalTitle": "Add a Custom Application",
      "nonWorkforceModalTitle": "Add a Consumer Application",
      "signInMethod": "Sign-in Method",
      "signInMethodDescription": "Choose a sign-in method for this application.",
      "oidc": "OIDC - OpenId Connect",
      "oidcDescription": "Token-based OAuth 2.0 authentication for Single Sign-On (SSO) through API endpoints. Recommended if you intend to build a custom app integration with the ForgeRock SDK or Hosted Pages.",
      "saml": "SAML",
      "samlDescription": "XML-based open standard for SSO. Use if the Identity Provider for your application only supports SAML.",
      "native": "Native / SPA",
      "nativeDescription": "An app running natively, or as an SPA or other JavaScript app in a browser (for example iOS, Android, React, Angular). Includes ForgeRock SDK sample apps.",
      "web": "Web",
      "webDescription": "Server-side applications where authentication and tokens are handled on the server (for example, Node.js, Java)",
      "service": "Service",
      "serviceDescription": "Interact with ForgeRock APIs using the scoped OAuth 2.0 access tokens for machine-to-machine authentication.",
      "descriptionFieldLabel": "Description",
      "errorCreatingApp": "Could not create application",
      "clientSecretWarning": "Make sure you copy <small class=\"text-monospace alert-link\">Client Secret</small> as it won't be shown again."
    },
    "edit": {
      "authoritative": "Authoritative",
      "messages": {
        "getAppDataFail": "Unable to retrieve application data",
        "getDashboardFail": "Unable to retrieve enduser application details",
        "getManagedAppFail": "Unable to retrieve managed application",
        "schemaFail": "Unable to get application properties",
        "updateSuccess": "Application updated",
        "updateFail": "Application update failed",
        "deleteFail": "Unable to delete application",
        "resetSecretSuccess": "Client secret reset",
        "resetSecretFail": "Unable to reset client secret"
      },
      "listApps": {
        "deleteAppFail": "Unable to delete application",
        "getAppsDataFail": "Unable to retrieve applications data",
        "noDataTitle": "You haven't added any applications yet",
        "noDataSubtitle": "Set up an application to use ForgeRock authentication.",
        "noSearchResults": "No Applications found."
      },
      "listOauthClients": {
        "deleteFail": "Unable to delete OAuth2 Client",
        "deleteSuccess": "OAuth2 Client successfully deleted",
        "noDataSubtitleOauth": "OAuth2 clients configured using the API or the native console will appear here.",
        "noDataTitleOauth": "You haven't added any OAuth2 Clients yet",
        "noSearchResults": "No OAuth2 Clients found.",
        "subTitle": "Manage legacy and API-configured OAuth2 Clients",
        "title": "OAuth2 Clients"
      },
      "nativeApp": {
        "alt": "Native App",
        "super": "Native / SPA",
        "newApp": "New App"
      },
      "webApp": {
        "alt": "Web App",
        "super": "Web Application"
      },
      "serviceApp": {
        "alt": "Service App",
        "super": "Service Application"
      },
      "customApp": {
        "alt": "Custom App",
        "super": "Custom Application"
      },
      "salesforceApp": {
        "alt": "Salesforce",
        "super": "Salesforce Application"
      },
      "servicenowApp": {
        "alt": "Service Now",
        "super": "Service Now Application"
      },
      "applicationDetailsTab": {
        "title": "Details"
      },
      "ssoTab": {
        "downloadCertificate": "Download Certificate",
        "entityIdDescription": "The Entity ID is an arbitrary logical URL that identifies the Salesforce resource. The format has to be <code>https://example.com</code>",
        "entityIdLabel": "Entity ID",
        "endpoints": "Endpoints",
        "initialSetupTitle": "You haven't set up SSO yet",
        "initialSetupDescription": "Sign-in users to this application.",
        "initialSetupButtonText": "Set Up SSO",
        "quickStartDescription": "Single Sign On using SAML will not work until you configure the app to trust ForgeRock as an Identity Provider.",
        "quickStartTitle": "Quick Start",
        "settingsTitle": "Settings",
        "federationMetadataUrlLabel": "Federation Metadata URL",
        "idpLoginEndpointLabel": "IDP-Initiated Login Endpoint",
        "singleSignOnUrl": "Single Sign On URL",
        "singleSignOnUrlDescription": "The location where the SAML assertion is sent with a HTTP POST. This is often referred to as the SAML Assertion Consumer Service (ACS) URL for your application.",
        "audienceUri": "Audience URI (SP Entity ID)",
        "audienceUriDescription": "The application-defined unique identifier that is the intended audience of the SAML assertion. This is most often the SP Entity ID of your application.",
        "defaultRelayState": "Default RelayState (optional)",
        "defaultRelayStateDescription": "Identifies a specific application resource in an IDP initiated Single Sign-On scenario. In most instances this is blank.",
        "nameIdFormat": "Name ID Format",
        "nameIdFormatDescription": "Identifies the SAML processing rules and constraints for the assertion's subject statement. Use the default value of <code>Unspecified</code> unless the application explicitly requires a specific format.",
        "applicationUsername": "Application Username",
        "applicationUsernameDescription": "Determines the default value for a user's application username. The application username will be used for the assertion's subject statement.",
        "response": "Response",
        "responseDescription": "Determines whether the SAML authentication response message is digitally signed or not. A signature certificate is required if signed to validate the generated response message.",
        "assertionSignature": "Assertion Signature",
        "assertionSignatureDescription": "Determines whether the SAML assertion is digitally signed or not. A signature certificate is required if signed to validate the generated assertion.",
        "signatureAlgorithm": "Signature Algorithm",
        "digestAlgorithm": "Digest Algorithm",
        "assertionEncryption": "Assertion Encryption",
        "singleLogout": "Single Logout",
        "singleLogoutDescription": "Allow application to initiate Single Logout.",
        "singleLogoutUrl": "Single Logout URL",
        "singleLogoutUrlDescription": "The location where the logout response will be sent.",
        "spIssuer": "SP Issuer (optional)",
        "spIssuerDescription": "The issuer for the service provider.",
        "signatureCertificate": "Signature Certificate",
        "uploadCertificate": "Upload Certificate",
        "assertionInlineHook": "Assertion Inline Hook",
        "honorForceAuthentication": "Honor Force Authentication",
        "honorForceAuthenticationDescription": "Prompt user to re-authenticate if SP asks for it.",
        "samlIssuerId": "SAML Issuer ID (optional)",
        "samlIssuerIdDescription": "The issuer for the service provider.",
        "assertionTimeSkew": "Assertion Time Skew",
        "assertionTimeSkewDescription": "The issuer for the service provider.",
        "includeAuthContext": "Include Authentication Context Request",
        "authContextClass": "Authentication Context Class",
        "authContextClassDescription": "Identifies the SAML authentication context class for the assertion's authentication statement.",
        "setupModal": {
          "modalTitle": "Set Up Single Sign-on",
          "chooseDomain": "Choose which domain to use for sign on.",
          "domainInputLabel": "Select a domain",
          "domainDescription": "The domain is required to produce the SAML IdP metadata used to enable SSO.",
          "downloadMetadata": "Download Metadata",
          "samlConfiguration": "Configure SAML for your application by either uploading your application's service provider metadata or entering manually.",
          "uploadMetadataOption": "Upload Metadata",
          "configureManuallyOption": "Configure Manually",
          "instructionsDescription": "To configure single sign-on with {appName} follow these steps before proceeding:",
          "metadataFileLabel": "Metadata file",
          "metadataFileDescription": "Upload the service provider metadata."
        },
        "errors": {
          "creatingIdpFailed": "Creating IDP Failed",
          "uniqueEntityId": "Metadata must contain a unique entityID",
          "generic": "There has been an error uploading your file. Please try again",
          "reupload": "Metadata reupload failed. Please try again"
        },
        "attributeStatementsSection": {
          "title": "Attribute Statements (optional)",
          "description": "Insert statements into the SAML assertions shared with your application.",
          "name": "Name",
          "nameFormat": "Name Format",
          "nameFormatDropdown": "Name Format Dropdown",
          "nameFormatDropdownButton": "Name Format Dropdown Button",
          "nameFormatDropdownSelectedOption": "Selected Name Format Uri Option",
          "nameFormatDropdownSelectOption": "Name Format Uri Select Option",
          "value": "Value",
          "unspecified": "Unspecified",
          "uriReference": "URI Reference",
          "basic": "Basic"
        },
        "setupInstructions": "Setup Instructions",
        "title": "Sign On",
        "tryItOut": "Try it out",
        "viewMetadata": "View IdP Metadata",
        "updateMetadata": "Update Metadata",
        "saveSuccess": "Successfully saved SAML configuration.",
        "saveError": "Error saving SAML configuration"
      },
      "assignmentsTab": {
        "title": "Users & Roles",
        "noMappings": "A mapping has not been set up yet",
        "noMappingsSubtitle": "Set up the provisioner and a mapping to proceed.",
        "proceedToProvisioning": "Proceed to Provisioning"
      },
      "provisioningTab": {
        "updateMappingSuccess": "Mappings set successfully",
        "createMappingError": "Error setting mappings"
      },
      "accessTab": {
        "title": "Access",
        "defaultScopesLabel": "Default Scopes",
        "defaultScopesHelp": "Scopes automatically given to tokens.",
        "responseTypesLabel": "Response Types",
        "responseTypesHelp": "Response types this client will support and use.",
        "claimsLabel": "Claims",
        "claimsHelp": "List of claim name translations, which will override those specified for the authorization server. Claims are values that are presented to the user to inform them what data is being made available to the Client.",
        "loopbackInterfaceRedirectionLabel": "Allow wildcard ports in redirect URLs",
        "loopbackInterfaceRedirectionHelp": "This flag indicates whether wildcards can be used for port numbers in redirect URIs. For example - <code>https://127.0.0.1:{port}/{path}</code> for IPv4 and <code>https://[::1]:{port}/{path}</code> for IPv6."
      },
      "authenticationTab": {
        "title": "Authentication",
        "tokenEndpointAuthMethodLabel": "Token Endpoint Authentication Method",
        "tokenEndpointAuthMethodHelp": "The authentication method with which a client authenticates to the authorization server at the token endpoint. The authentication method applies to OIDC requests with the openid scope.",
        "clientTypeLabel": "Client Type",
        "clientTypeHelp": "Type of OAuth 2.0 client. Confidential clients can keep their password secret, and are typically web apps or other server-based clients. Public clients run the risk of exposing their password to a host or user agent, such as rich browser applications or desktop clients.",
        "isConsentImpliedLabel": "Implied Consent",
        "isConsentImpliedHelp": "When active, the resource owner will not be asked for consent during authorization flows. The OAuth2 Provider must be configured to allow clients to skip consent.",
        "mixUpMitigationLabel": "OAuth 2.0 Mix-Up Mitigation active",
        "mixUpMitigationHelp": "Enables OAuth 2.0 mix-up mitigation on the authorization server side. Enable this setting only if this OAuth 2.0 client supports the OAuth 2.0 Mix-Up Mitigation draft, otherwise AM will fail to validate access token requests received from this client.",
        "defaultAcrValuesLabel": "Default ACR values",
        "defaultAcrValuesHelp": "Default requested Authentication Context Class Reference values.",
        "requestUrisLabel": "Request URIs",
        "requestUrisHelp": "Array of request_uri values that are pre-registered by the RP for use at the OP.",
        "clientJwtPublicKeyLabel": "Client JWT Bearer Public Key",
        "subjectTypeLabel": "Subject Type",
        "subjectTypeHelp": "The subject type added to responses for this client.",
        "defaultMaxAgeEnabledLabel": "Default Max Age",
        "defaultMaxAgeEnabledHelp": "Whether or not the default max age is enforced.",
        "defaultMaxAgeLabel": "Default Max Age",
        "mTLSCertificateBoundAccessTokensLabel": "Use Certificate-Bound Access Tokens",
        "mTLSTrustedCertLabel": "mTLS Self-Signed Certificate",
        "mTLSTrustedCertHelp": "Self-signed PEM-encoded X.509 certificate for mTLS client certificate authentication.",
        "mTLSSubjectDNLabel": "mTLS Subject DN",
        "mTLSSubjectDNHelp": "Expected Subject DN of certificate used for mTLS client certificate authentication. Defaults to CN=client_id. Only applicable when using CA-signed certificates."
      },
      "clientManagementTab": {
        "title": "Client Management",
        "updateAccessTokenLabel": "Access Token",
        "updateAccessTokenHelp": "The access token used to update the client."
      },
      "consentScreenTab": {
        "title": "Consent Screen",
        "nameLabel": "Display Name",
        "nameHelp": "A client name that may be relevant to the resource owner when considering approval.",
        "descriptionsLabel": "Display Description",
        "descriptionsHelp": "A description of the client or other information that may be relevant to the resource owner when considering approval.",
        "policyUriLabel": "Privacy Policy URI",
        "policyUriHelp": "The URI for the client's privacy policy, for use in user-facing consent pages."
      },
      "endpointResponseFormatsTab": {
        "title": "Endpoint Response Formats",
        "userinfoResponseFormatLabel": "User info response format",
        "userinfoResponseFormatHelp": "The user info endpoint offers different output format. See <a href='http://openid.net/specs/openid-connect-core-1_0.html#UserInfoResponse'>http://openid.net/specs/openid-connect-core-1_0.html#UserInfoResponse</a>",
        "tokenIntrospectionResponseFormatLabel": "Token Introspection Response Format",
        "tokenIntrospectionResponseFormatHelp": "The token introspection endpoint offers different output format. see <a href='https://tools.ietf.org/html/draft-ietf-oauth-jwt-introspection-response-03'>https://tools.ietf.org/html/draft-ietf-oauth-jwt-introspection-response-03</a>"
      },
      "sessionManagementTab": {
        "title": "Session Management",
        "clientSessionUriLabel": "Client Session URI",
        "clientSessionUriHelp": "This is the URI that will be used to check messages sent to the session management endpoints. This URI must match the origin of the message."
      },
      "signingAndEncryptionTab": {
        "title": "Signing and Encryption",
        "publicKeyLocationLabel": "Public key selector",
        "publicKeyLocationHelp": "Select the public key for this client to come from either the jwks_uri, manual jwks or X509 field.",
        "jwksUriLabel": "Json Web Key URI",
        "jwksUriHelp": "The uri that contains the client's public keys in Json Web Key format.",
        "jwkSetLabel": "Json Web Key",
        "jwkSetHelp": "Raw JSON Web Key value containing the client's public keys.",
        "idTokenPublicEncryptionKeyLabel": "Client ID Token Public Encryption Key",
        "idTokenPublicEncryptionKeyHelp": "A Base64 encoded public key for encrypting ID Tokens.",
        "idTokenEncryptionEnabledLabel": "Enable ID Token Encryption"
      },
      "tokenLifetimesTab": {
        "title": "Token Lifetimes",
        "authorizationCodeLifetimeLabel": "Authorization code lifetime (seconds)",
        "accessTokenLifetimeLabel": "Access token lifetime (seconds)",
        "refreshTokenLifetimeLabel": "Refresh token lifetime (seconds)",
        "jwtTokenLifetimeLabel": "JWT token lifetime (seconds)"
      },
      "clientCredentials": {
        "cardTitle": "Client Credentials",
        "clientIDDescription": "Use in your app with the <a href='https://sdks.forgerock.com/' target='_blank'>ForgeRock SDKs</a> or when calling the REST APIs.",
        "discoveryURILabel": "Discovery URI",
        "discoveryURIDescription": "Use to retrieve the OpenID Provider information for this realm from within the application.",
        "domain": "Domain:",
        "clientIDLabel": "Client ID",
        "userpasswordLabel": "Client Secret"
      },
      "applicationDetails": {
        "applicationOwnerLabel": "Application Owners",
        "appLogoAltText": "App Logo",
        "clientNameDescription": "Human-readable name for your application. You can change the name later in the application settings.",
        "clientNameLabel": "Name",
        "descriptionsLabel": "Description",
        "logoUriLabel": "App Logo URI",
        "logoUriHelp": "Application logo URI for use in user-facing UIs such as consent pages and application pages."
      },
      "labels": {
        "coreOAuth2ClientConfig": {
          "clientName": "Name"
        },
        "advancedOAuth2ClientConfig": {
          "descriptions": "Description",
          "logoUri": "App Logo URI"
        }
      },
      "descriptions": {
        "coreOAuth2ClientConfig": {
          "clientName": "Human-readable name for your application. You can change the name later in the application settings."
        },
        "advancedOAuth2ClientConfig": {
          "logoUri": "Application logo URI for use in user-facing UIs such as consent pages and application pages."
        }
      },
      "generalSettings": {
        "footerButtonText": "Try it out",
        "cardTitle": "General Settings",
        "redirectionUrisLabel": "Sign-in URLs",
        "redirectionUrisHelp": "Whitelist for sign-in redirect URLs. eg. http://www.example.com/signin",
        "postLogoutRedirectUriLabel": "Sign-out URLs",
        "postLogoutRedirectUriHelp": "Whitelist for sign-out redirect URLs. eg. http://www.example.com/signout",
        "grantTypesLabel": "Grant Types",
        "grantTypesHelp": "Authorization Code is required for SPA/Native apps.",
        "scopesLabel": "Scopes",
        "scopesHelp": "Scopes are strings that are presented to the user for approval and included in tokens so that the protected resource may make decisions about what to give access to."
      }
    },
    "promotion": {
      "dynamicDataCategory": "Applications",
      "modalTitle": "Load Application Dynamic Data",
      "chooseDataDescription": "This environment has received a promotion containing dynamic application data. It is recommended that you update application data to prevent configuration issues.",
      "customizationWarning": "Note that any prior customizations to this data on this tenant will be lost in this process.",
      "updateApplications": "Update Applications",
      "updatingApplications": "Updating Applications...",
      "chooseAppsToUpdate": "Choose Applications to Update",
      "chooseAppUpdates": "Choose Application Updates",
      "chooseAppUpdatesDescription": "Choose applications to update with promoted dynamic data.",
      "errorLoadingApps": "Error loading app data into the environment. Please try again later.",
      "skipUpdate": "Skip Update",
      "skipConfirm": "Are you sure you want to skip update for now? The next admin to sign in will be able to complete the promotion.",
      "dontUpdate": "Don't Update",
      "dontUpdateDescription": "Do not update dynamic application data in this tenant.",
      "dontUpdateApplicationData": "Don't Update Application Data?",
      "dontUpdateConfirm": "Are you sure you don't want to update promoted dynamic application data?"
    }
  },
  "realm": {
    "title": "Realm",
    "saveRealm": "Save Realm",
    "topLevelRealm": "Top Level Realm",
    "switchLink": "Switch",
    "switchRealm": "Switch realm...",
    "switchRealmModal": "Switch Realm",
    "switchSuccessful": "Successfully switched realm to '{realmName}'",
    "searchRealms": "Search realms...",
    "searchRealmsNoMatch": "There are no realms available.",
    "newRealm": "New Realm",
    "realmSettings": "Realm Settings",
    "dnsAliases": "DNS Aliases (optional)",
    "dnsAliasesDescription": "List of fully-qualified DNS aliases for the realm.",
    "useClientBasedSessions": "Use Client-based Sessions",
    "useClientBasedSessionsDescription": "Client-based sessions provide elastic scalability by storing all session state as a JWT in a cookie stored on the client. It is highly recommended to enable signing and encryption of the JWT in the global session service.",
    "successfullyCreated": "'{realmName}' realm successfully created",
    "successfullyDeleted": "'{realmName}' realm successfully deleted",
    "successfullySaved": "'{realmName}' realm successfully saved",
    "typeToAddDnsAlias": "Type and press enter to add a DNS alias",
    "Status": "Status",
    "active": "Active",
    "details": "Details",
    "theme": "Theme",
    "inactive": "Inactive",
    "activate": "Activate",
    "deactivate": "Deactivate",
    "deactivateModalTitle": "Deactivate Realm?",
    "deactivateModalText": "If you deactivate this realm users will be prevented from signing in. Are you sure you want to deactivate this realm?",
    "deleteModalTitle": "Delete Realm?",
    "activeRealmMessage": "<p>This is an active realm. All configuration data will be lost if deleted. You can set the realm as inactive to prevent login but retain configuration data.</p><p>Are you sure you want to permanently delete this realm? <strong>This action cannot be undone.</strong></p>"
  },
  "customDomain": {
    "active": "Active",
    "addDomain": "Add a Custom Domain",
    "addModal": {
      "cName": "CNAME",
      "content": "Enter the fully qualified domain name that you want as your ForgeRock realm’s URL.",
      "data": "Data",
      "domain": "Domain",
      "domainFieldDescription": "For example, mycompany.com or example.mycompany.com.",
      "host": "Host",
      "secondStageDescription1": "Before ForgeRock can serve traffic over your domain, you need to add an alias from your custom domain to the ForgeRock subdomain of your ForgeRock realm. You do this by creating or modifying a <code>CNAME</code> record for your custom domain name.<br/><br/><h5>To create a CNAME record:</h5>",
      "secondStageDescription2": "Sign in to your Domain Name Registrar.",
      "secondStageDescription3": "Find the option to modify your DNS Records.",
      "secondStageDescription4": "Create a <code>CNAME</code> record with the following values for <code>Host</code> and <code>Data</code>:",
      "secondStageDescription5": "Once you have added the <code>CNAME</code> record, click 'Verify' to continue",
      "thirdStageDescription1": "<span class=\"font-weight-bold\">It may take up to 48 hours for these changes to propagate.</span> Warning notices may appear on your custom URL domain until propagation is finished completely.",
      "thirdStageDescription1Cloud": "We will now start the process of generating your certificate. Once the certificate has been generated you have completed setting up a Custom Domain Name for your ForgeRock realm. ",
      "thirdStageDescription2": "To confirm that ForgeRock is serving traffic over HTTPS (TLS) for your custom domain, visit: {domainLink}<br/><br/> ForgeRock will continue to serve traffic through {trafficLink} and your custom domain. If your changes do not appear within 48 hours, you may need to confirm your DNS settings.",
      "titleStageTwo": "Verify Domain Name Ownership",
      "verify": "Verify",
      "verifying": "Verifying...",
      "verifyError": "Could not verify the specified custom domain. Make sure the CNAME record matches the expected value.",
      "verifySuccess": "Domain successfully saved!",
      "verifySuccessCloud": "Domain successfully verified!"
    },
    "customDomain": "Custom Domain",
    "descriptionLink": "globally-configured custom domains.",
    "domain": "Domain",
    "domainDescription1": "Use a custom domain to enable a seamless user experience between your domain and ForgeRock. Adding a custom domain to this realm will override any",
    "domainDescription2": "To complete setup you’ll need access to your Domain Name Registrar so that you can modify Domain Name Server (DNS) records.",
    "errorRetrievingCircleOfTrust": "There was an error retrieving the circle of trust",
    "errorRetrievingDomains": "There was an error retrieving this realm's custom domains",
    "errorSavingDomains": "There was an error saving the custom domains",
    "noDomainMessage": "You haven't added a custom domain for this realm yet",
    "reverify": "Re-verify"
  },
  "logApiKeys": {
    "noLogApiKeysText": "You haven't added any log API keys",
    "logApiKey": "Log API Key",
    "logApiKeyLower": "log API key",
    "logApiKeyDescription": "Send log data to third party services like Splunk or LogStash.",
    "logAPIKeySectionTitle": "Log API Keys",
    "getApiKeyDataFail": "Unable to retrieve API key data",
    "deleteApiKeyFail": "Unable to delete API key",
    "createApiKey": "New Log API Key",
    "apiKeyName": "Name",
    "apiKeyId": "api_key_id",
    "apiKeyCreated": "Created",
    "createApiKeyModal": {
      "nameDescription": "Human-readable name for your key",
      "createButtonText": "Create key",
      "creatingButtonText": "Creating key...",
      "errorCreatingKey": "Could not create API key",
      "keySecret": "api_key_secret",
      "createSuccessHeader": "Key successfully created!",
      "oneTimeSecretStatement": "Make sure you copy <code>api_key_secret</code> below as it won't be shown again.",
      "checkIconAltText": "Success icon"
    }
  },
  "cors": {
    "addCorsConfig": "Add a CORS Configuration",
    "corsConfig": "CORS Configuration",
    "corsConfigLower": "CORS configuration",
    "corsSectionTitle": "Cross-Origin Resource Sharing (CORS)",
    "corsDescription": "Allow requests to ForgeRock-protected resources to be made from trusted domains.",
    "deleteCorsConfigError": "Unable to delete CORS Configuration",
    "getCorsConfigsDataError": "Unable to retrieve CORS Configurations",
    "getServiceStatusError": "Failed to retrieve CORS Service status",
    "saveServiceStatusError": "Unable to update CORS Service status",
    "saveCorsConfigError": "Unable to save CORS Configuration",
    "noCorsConfigText": "You haven't added any CORS Configurations",
    "successSaving": "Successfully saved CORS Configuration",
    "successSavingService": "Successfully saved CORS Service status",
    "corsConfigModal": {
      "chooseTemplate": "Choose a template for your new CORS Configuration",
      "sdk": "ForgeRock SDK",
      "sdkDescription": "Defaults for JS SDK sample apps",
      "sdkLink": "Learn more about the <a target='_blank' href='https://sdks.forgerock.com/'>ForgeRock SDKs</a> and <a target='_blank' href='https://github.com/ForgeRock/forgerock-javascript-sdk/tree/master/samples'>sample apps</a>",
      "custom": "Custom",
      "customDescription": "Start with a blank slate",
      "editCorsConfig": "Edit CORS Configuration {id}",
      "newCorsConfig": "New CORS Configuration",
      "nameDescription": "Human-readable name for this configuration.",
      "acceptedOrigins": "Accepted Origins",
      "acceptedOriginsDescription": "Accepted origins that will be allowed to make requests to ForgeRock from your application in a cross-origin context. Wildcards are not supported – each value should be an exact match for the origin of the CORS request including the port number. Eg. <code>https://myapp.example.com:443</code>",
      "acceptedMethods": "Accepted Methods",
      "acceptedMethodsDescription": "The set of (non-simple) accepted HTTP methods allowed when making CORS requests to ForgeRock. The method names are case-sensitive, ensure they are entered in all uppercase characters.",
      "acceptedHeaders": "Accepted Headers (optional)",
      "acceptedHeadersDescription": "Accepted header names when making requests from the above specified trusted domains. Header names are case-insensitive. By default, the following simple headers are explicitly accepted: <code>Cache-Control</code><code>Content-Language</code><code>Expires</code><code>Last-Modified</code><code>Pragma</code>. If you do not specify values for this element, the presence of any header in the CORS request, other than the simple headers listed above, will cause the request to be rejected.",
      "saveCorsConfiguration": "Save CORS Configuration",
      "exposedHeaders": "Exposed Headers (optional)",
      "exposedHeadersDescription": "Add the response header names that ForgeRock returns. The header names are case-insensitive. User agents can make use of any headers that are listed in this property, as well as the simple response headers, which are as follows: <code>Cache-Control</code><code>Content-Language</code><code>Expires</code><code>Last-Modified</code><code>Pragma</code><code>Content-Type</code>. User agents must filter out all other response headers.",
      "enableCaching": "Enable Caching",
      "enableCachingDescription": "Enable the browser to cache the pre-flight response.",
      "maxAge": "Max Age",
      "maxAgeDescription": "The max age (in seconds) for caching.",
      "allowCredentials": "Allow Credentials",
      "allowCredentialsDescription": "Whether to transmit the Access-Control-Allow-Credentials: true header in the response.",
      "successCreate": "Successfully created CORS Configuration"
    },
    "deleteCorsConfigModal": {
      "successDeleting": "Successfully deleted CORS Configuration"
    },
    "updateCorsServiceModal": {
      "activateService": "Activate CORS Service?",
      "configAdded": "You've added a CORS configuration but the CORS service is currently deactivated. Do you want to activate the CORS service now?",
      "skipThis": "Skip this"
    }
  },
  "ipAddresses": {
    "title": "IP Addresses",
    "subtitle": "Outbound source IP addresses for this tenant.",
    "loadingError": "Unable to load tenant info."
  },
  "email": {
    "inviteAdmin": {
      "successHeader": "Your invitation(s) has been sent!",
      "successCountMessage": "You’ve invited {count} admin(s)",
      "partialSuccessMessage": "You’ve invited {totalCount} admin(s), but {failCount} invitation(s) didn't send. Review the below errors.",
      "noSuccessMessage": "{count} invitation(s) didn't send. Review the errors below.",
      "notice": "IMPORTANT: Each invited admin will receive an email to setup their admin account and have the permission to fully administer this tenant.",
      "toCompany": "to {company}",
      "emailAddresses": "Email addresses",
      "inviteAdminsTitle": "Invite admins",
      "invitationSentTitle": "Invitations Sent!",
      "partialSuccessTitle": "Partial Success",
      "oopsTitle": "Oops, That Didn't Work",
      "sendInvite": "Send Invitations",
      "inviteMore": "Invite More People",
      "tryAgain": "Try Again",
      "invitedMembers": "Invited Members",
      "notInvited": "Not Invited",
      "errorAdminOnboarding": "There was an issue onboarding admin",
      "errorUnique": "This person already exists in your tenant.",
      "groupRadioHelp": "Choose a group to assign to invited admins.",
      "superAdmin": "Super Admin",
      "superAdminsText": "Has access to all features in the Admin console and can manage every aspect of this tenant.",
      "tenantAdminsText": "Has full access to all administrative features, except the ability to add other administrators."
    },
    "templates": {
      "duplicateTemplate": "Duplicate Template",
      "emailTemplate": "Email Template",
      "emailTemplates": "Email Templates",
      "subTitle": "Customize email templates for welcome, password reset, and account verification.",
      "noTemplatesTitle": "You haven't added any email templates yet",
      "newTemplate": "New Template",
      "template": "Template",
      "list": {
        "displayName": "Name",
        "description": "Description"
      },
      "errorRetrievingList": "Error retrieving email template list.",
      "errorRetrievingTemplate": "Error retrieving email template.",
      "errorRetrievingProviderConfig": "Error retrieving email provider config. You may need to set this up.",
      "errorSaving": "Error saving email template",
      "errorDeleting": "Error deleting email template",
      "errorCreating": "Error creating email template",
      "errorDuplicating": "Error duplicating email template",
      "successDelete": "Successfully deleted email template.",
      "successSaving": "Successfully saved email template.",
      "successDuplicating": "Successfully duplicated email template.",
      "createModal": {
        "title": "New Template"
      }
    },
    "provider": {
      "title": "Email Provider",
      "subtitle": "By default system emails will use the built-in SMTP server. You can choose to use your own email provider to send emails to customers.",
      "useEmailProvider": "Use my own email provider",
      "from": "From Address",
      "fromDescription": "Default from address for emails.",
      "fromName": "From Name",
      "fromNameDescription": "Name of sending organization (eg. 'Organization Name').",
      "host": "Host",
      "hostDescription": "Hostname or IP address of your SMTP server.",
      "port": "Port",
      "portDescription": "Port used by your SMTP server. Common ports include 25, 465, and 587. Please avoid using port 25 if you can, since many providers have limitations on this port.",
      "username": "Username",
      "password": "Password",
      "socketConnectionTimeout": "Socket Connection Timeout (ms)",
      "socketWriteTimeout": "Socket Write Timeout (ms)",
      "socketTimeout": "Socket Timeout (ms)",
      "useStartTLS": "Use STARTTLS",
      "useSSL": "Use SSL",
      "showAdvanced": "Show advanced settings",
      "sendTestEmail": "Send Test Email",
      "errorDeletingProvider": "There was an issue deleting the email provider",
      "errorGettingProvider": "There was an issue retrieving the email provider",
      "errorGettingDefaultProvider": "There was an issue retrieving the default email provider",
      "errorSavingProvider": "There was an issue saving the email provider",
      "successSavingProvider": "Email provider successfully saved!",
      "successDeletingProvider": "Email provider successfully deleted.",
      "testProviderEmailBody": "This is a test email using your configured provider settings.",
      "testProviderEmailSubject": "Test Provider Email"
    },
    "availablePropertiesModal": {
      "description": "Choose the type of identity you are going to use this template with to view the available properites.",
      "identityLabel": "Identity Type",
      "title": "Available Properties"
    },
    "deleteModal": {
      "title": "Delete Template?",
      "content": "Are you sure you want to delete this template?",
      "confirm": "Delete template",
      "noTemplatesTitle": "You haven't added any email templates yet"
    },
    "addLocale": {
      "description": "Enter the ISO 639-1 code for the language you are adding.",
      "title": "Add a Locale"
    },
    "edit": {
      "advancedEditorOption": "Advanced Editor",
      "contentOption": "Content",
      "descriptionFieldDescription": "Provide a brief description of this template.",
      "fromAddressFieldTitle": "From Address",
      "fromAddressFieldDescription": "Enter an email address for the group or individual sending the email.",
      "fromNameFieldTitle": "From Name",
      "fromNameFieldDescription": "Name of sending organization (eg. 'Organization Name').",
      "locale": "Locale",
      "localeModal": {
        "addLocaleTitle": "Add Locale",
        "editLocaleTitle": "Edit Locale",
        "deleteLocale": "Delete Locale",
        "localeLabel": "Code",
        "localeDescription": "Enter the <a href=\"https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes\" target=\"_blank\">ISO 639-1 code</a> for the default locale (eg. <code>en</code>).",
        "makeDefault": "Make Default"
      },
      "markdown": "Markdown",
      "resetStyles": "Reset to Default",
      "saveSuccess": {
        "whenSaving": "Template saved",
        "whenActivating": "Template activated",
        "whenDeactivating": "Template deactivated",
        "whenSavingDetails": "Template details saved",
        "whenDuplicating": "Template duplicated",
        "whenDeleting": "Template deleted",
        "whenLocaleSaved": "Locale saved",
        "whenLocaleDeleted": "Locale deleted"
      },
      "saveError": {
        "whenSaving": "Error saving template",
        "whenActivating": "Error activating template",
        "whenDeactivating": "Error deactivating template",
        "whenSavingDetails": "Error saving details",
        "whenDuplicating": "Error duplicating template",
        "whenDeleting": "Error deleting template",
        "whenLocaleSaved": "Error saving locale",
        "whenLocaleDeleted": "Error deleting locale"
      },
      "sendTestEmail": "Send Test Email",
      "sendTestEmailModal": {
        "title": "Send Test Email",
        "testEmailAddressDescription": "Email address to send test email to.",
        "emailSent": "Email sent!",
        "emailSentDescription": "If you don't receive an email within the next hour, please check logs for \"Failed Sending Notification\" events and review your configuration according to Email Provider. If the problem persists, please contact support.",
        "errorTestEmail": "Test email not sent"
      },
      "settingsOption": "Settings",
      "settingsTitle": "Template Settings",
      "subject": "Subject",
      "stylesOption": "Styles",
      "switchToAdvanced": "Switch to Advanced",
      "switchToAdvancedTitle": "Switch to Advanced Editor?",
      "switchToAdvancedDescription": "Are you sure you want to switch to the advanced editor? Your current markdown will be converted to raw HTML, and you won’t be able to switch back to the markdown editor.",
      "variablesOption": "Variables",
      "displayNameFieldTitle": "Template Name"
    }
  },
  "serviceAccounts": {
    "serviceAccount": "Service Account",
    "noServiceAccounts": "You haven't added any service accounts yet",
    "createServiceAccountsInfo": "Create service accounts to use for automated access to ForgeRock APIs.",
    "createNewServiceAccount": "New Service Account",
    "serviceAccountsTitle": "Service Accounts",
    "failedToLoad": "Failed to Load Service Accounts. Please try again.",
    "table": {
      "nameHeader": "Name",
      "uuidHeader": "ID",
      "statusHeader": "Status",
      "actions": {
        "regenerateKey": "Regenerate Key"
      }
    },
    "addServiceAccountModal": {
      "title": "New Service Account",
      "nameInputInfo": "Human-readable name for your service account.",
      "descriptionLabel": "Description (optional)",
      "scopes": "Scopes",
      "chooseScopes": "Choose scopes to grant to the service application.",
      "amAll": "fr:am:*",
      "amAllInfo": "All Access Management APIs",
      "idmAll": "fr:idm:*",
      "idmAllInfo": "All Identity Management APIs",
      "idcEsvAll": "fr:idc:esv:*",
      "idcEsvAllInfo": "All ESV APIs",
      "idcEsvRead": "fr:idc:esv:read",
      "idcEsvReadInfo": "Read only access to the ESV API",
      "idcEsvUpdate": "fr:idc:esv:update",
      "idcEsvUpdateInfo": "Update access on the ESV API",
      "idcEsvRestart": "fr:idc:esv:restart",
      "idcEsvRestartInfo": "Ability to trigger restart to load new ESVs",
      "idcPromotion": "fr:idc:promotion:*",
      "idcPromotionInfo": "Ability to run a configuration promotion and access promotion reports.",
      "cancel": "Cancel",
      "save": "Save",
      "success": "Service account successfully created!",
      "downloadKeyInfo": "Make sure you download the private key below as it won’t be available again.",
      "uuid": "ID",
      "download": "Download Key",
      "done": "Done",
      "errorSaving": "Error saving Service Account"
    },
    "deleteServiceAccountModal": {
      "areYouSure": "Are you sure you want to delete this service account?",
      "cancel": "Cancel",
      "confirm": "Delete Service Account",
      "fail": "Failed to delete Service Account"
    },
    "regenerateKeyModal": {
      "title": "Regenerate Key",
      "areYouSure": "Are you sure you want to regenerate key?",
      "additionalInfo": "Anything using this service account will need to be updated with the new key to maintain API access.",
      "actions": {
        "cancel": "Cancel",
        "confirm": "Regenerate Key"
      }
    }
  },
  "tenantTierAbbreviation": {
    "development": "Dev",
    "staging": "Staging",
    "production": "Prod",
    "uat": "UAT",
    "other": "Other"
  },
  "tenantSettings": {
    "title": "Tenant Settings",
    "dropdownTitle": "Tenant settings",
    "tabs": {
      "details": "Details",
      "admins": "Admins",
      "globalSettings": "Global Settings",
      "federation": "Federation"
    },
    "details": {
      "flagAltText": "Flag",
      "organizationName": "Organization Name",
      "tenant": "TENANT",
      "tenantBackupRegion": "Backup Region",
      "tenantName": "Tenant Name",
      "tenantRegion": "Region",
      "tenantTier": "Environment Tag",
      "title": "Tenant Details",
      "errors": {
        "errorRetrievingLockState": "Error retrieving promotion lock state.",
        "errorRetrievingProvisionalReport": "Error retrieving provisional report.",
        "errorRetrievingTenantRegion": "Error retrieving tenant region information."
      }
    },
    "admins": {
      "title": "Admins",
      "invite": "Invite Admins",
      "resendInvite": "Resend Email Invite",
      "multifactorAuthentication": "MFA",
      "user": "User",
      "socialSignIn": "Social Sign-in"
    },
    "globalSettings": {
      "title": "Global Settings",
      "getDataFail": "Unable to retrieve global settings data",
      "cookie": "Cookie"
    },
    "federation": {
      "buttonText": "Identity Provider",
      "previewButtonText": "Sign in with {text}",
      "azure": "Microsoft Azure",
      "adfs": "ADFS",
      "oidc": "OIDC",
      "enforcement": "Enforcement",
      "issuerFail": "The well-known-endpoint did not return a valid issuer",
      "updateProvidersSuccess": "Identity provider settings changed",
      "updateProvidersError": "Unable to update provider settings",
      "saveEnforcementSuccess": "Federation settings updated",
      "saveEnforcementFail": "Unable to update Federation settings",
      "saveProviderSuccess": "Federation provider saved",
      "saveProviderFail": "Unable to save Federation provider configuration",
      "tenantAdmin": "Tenant Admin",
      "deleteProviderSuccess": "Federation provider deleted",
      "deleteProviderFail": "Unable to delete Federation provider",
      "wellKnownEndpointFail": "Unable to connect to well-known endpoint",
      "getSocialProviderFail": "Unable to get federation provider configuration",
      "noProvidersTitle": "You haven't set up federation yet",
      "noProvidersSubtitle": "Add a provider to activate federation for this tenant.",
      "deactivateMessage": "Are you sure you want to deactivate sign-in with {providerName}? Any admins who sign in using only {providerName} and don't have a username and password will be unable to sign in.",
      "enforcementCard": {
        "error": "Could not establish enforcement rules",
        "forNone": "Optional for All Admins",
        "forNoneHelp": "Allow all admins to use either their ForgeRock credentials or federation to sign in.",
        "forNonSuper": "Required for All Admins Except Super Admins",
        "forNonSuperHelp": "Require all admins who are not super admins to use federation to sign in. Super admins can use their ForgeRock credentials or federation to sign in.",
        "forAll": "Required for All Admins",
        "forAllHelp": "Allow all admins to use federation to sign in. This option requires a support ticket to change."
      },
      "enforcementModal": {
        "title": "Edit Tenant Federation Enforcement",
        "sideTitle": "Federation Enforcement",
        "sideHelp": "Choose how federation should be enforced in this tenant.",
        "unlockText": "In order to change federation enforcement you need to <a href=\"https://backstage.forgerock.com/knowledge/kb/article/a60648400\" target=\"_self\">open a support ticket</a>.",
        "confirmTitle": "Change Federation Enforcement?",
        "confirmAll": "Are you sure you want to require all admins to use federation to sign in?",
        "confirmNone": "Are you sure you want to allow tenant admins to use ForgeRock credentials to sign in?",
        "confirmTenantAdmins": "Are you sure you want to require tenant admins to use federation to sign in?",
        "alertText": "This will require you to open a support ticket to change.",
        "note": "Note:",
        "waitTime": "This change will take approximately 10 minutes to be applied to this tenant."
      },
      "deactivateModal": {
        "modalTitle": "Deactivate {providerName}?",
        "modalWarning": "Are you sure you want to deactivate sign-in with {providerName}?",
        "bulletText": "Any admins who sign in using only {providerName} and don't have a username and password will be unable to sign in."
      },
      "settings": {
        "azure": "Azure",
        "adfs": "ADFS",
        "oidc": "OIDC",
        "portal": "Portal",
        "superTitle": "Set up {providerName}",
        "appIdHelp": "<a href='{url}' target='_blank' rel='noopener'>How to obtain an Application ID?</a>",
        "appSecretHelp": "<a href='{url}' target='_blank' rel='noopener'>How to obtain an Application Secret?</a>",
        "appId": "Application ID",
        "appSecret": "Application Secret",
        "clientAuthenticationMethod": "Client Authentication Method",
        "groupsClaim": "Use {applicationName} group membership to allow federated login to ForgeRock",
        "groupsClaimDescription": "Groups claim description",
        "groupsClaimName": "Groups Claim Name",
        "groupsClaimMapTitle": "{providerName} Group",
        "groupsClaimConfigurationWarning": "You must configure your provider's email, first name, and last name as custom claims before setting federation groups claim.",
        "groupIdentifiers": "Group Identifiers",
        "wellKnownEndpoint": "Well-known Endpoint",
        "wellKnownEndpointHelp": "<a href='{url}' target='_blank' rel='noopener'>Where to find your well-known endpoint?</a>",
        "buttonText": "Button Text",
        "authIdKey": "Auth ID Key",
        "authEndpoint": "Authorization Endpoint",
        "tokenEndpoint": "Token Endpoint",
        "userInfoEndpoint": "User Info Endpoint",
        "scopes": "Scopes",
        "stage1": {
          "title": "Add Sign On Method",
          "helpText": "Choose an identity provider to use for admin sign-in to this tenant."
        },
        "stage2": {
          "title": "Configure Application",
          "step1Azure": "To configure single sign-on with Microsoft Azure, follow the <a href='{docsLink}' target='_blank' rel='noopener'>{docsName} <span aria-hidden='true' class='material-icons-outlined'>open_in_new</span></a> to learn how to set up the redirect URI in Microsoft Azure and obtain a client ID and Secret.",
          "step1ADFS": "To configure single sign-on with ADFS, follow the <a href='{docsLink}' target='_blank' rel='noopener'>{docsName} <span aria-hidden='true' class='material-icons-outlined'>open_in_new</span></a> to learn how to set up the redirect URI in ADFS and obtain a client ID and Secret.",
          "step1OIDC": "To configure single sign-on with an OIDC provider, follow the <a href='{docsLink}' target='_blank' rel='noopener'>{docsName} <span aria-hidden='true' class='material-icons-outlined'>open_in_new</span></a> to learn how to set up the redirect URI in your OIDC provider and obtain a client ID and Secret.",
          "redirectLabel": "Redirect URI",
          "claimLabel": "Email Claim",
          "forgeRockDocs": "ForgeRock Docs",
          "step2": "The <code>email or mail</code> claim must be added to your {name} token configuration to ensure that the user who receives the email invite is the user who can claim the account and sign in using {name}.",
          "step3": "Once you've completed these steps proceed with the SSO configuration."
        },
        "stage3": {
          "title": "Identity Provider Details",
          "helpText": "Enter provider details to complete set up."
        }
      },
      "edit": {
        "tenantIdentityProvider": "Tenant Identity Provider",
        "clientCredentials": "Client Credentials",
        "appSecret": "Application Secret",
        "generalSettings": "General Settings"
      }
    }
  },
  "gatewaysAndAgents": {
    "navTitle": "Gateways & Agents",
    "title": "Gateway and Agent Profiles",
    "subTitle": "Protect resources at the edge using Identity Gateway or an agent.",
    "addGatewayOrAgent": "New Gateway/Agent",
    "noGatewaysOrAgentsText": "You haven't added any Gateways or Agents",
    "idFieldTitle": "Agent ID",
    "userpasswordTitle": "Password",
    "applicationUrlTitle": "Application URL",
    "amServerUrlTitle": "AM Server URL",
    "amUrlTitle": "AM Server URL",
    "realmTitle": "Agent Realm",
    "getListDataFail": "Unable to retrieve Gateways and Agents data",
    "getEditDataFail": "Unable to get {type} properties",
    "deleteError": "Unable to delete {type}",
    "updateSuccess": {
      "gateway": "Updated gateway",
      "java-agent": "Updated java agent",
      "web-agent": "Updated web agent"
    },
    "updateFail": "Unable to update {type}",
    "resetPasswordSuccess": "Password reset",
    "resetPasswordFail": "Unable to reset password",
    "nativeEdit": "Edit advanced settings in the Access Management Native Console",
    "usePolicyAuthorizationName": "Use Policy Authorization",
    "usePolicyAuthorizationHelp": "Use policy to perform fine-grained user authorization. If not enabled the agent will only manage basic user authentication. (Deactivating policy authorization activates SSO_Only).",
    "policySetName": "Policy Set",
    "policySetHelp": "Choose a set of policies for this agent to use to protect your application endpoints.",
    "gateway": {
      "name": "Identity Gateway Profile",
      "redirectUrlName": "Redirect URLs",
      "redirectUrlHelp": "Redirect URLs for cross domain single sign-on (CDSSO) eg. http://openig.ext.com:8080/home/cdsso/redirect"
    },
    "java-agent": {
      "name": "Java Agent Profile"
    },
    "web-agent": {
      "name": "Web Agent Profile"
    },
    "createModal": {
      "selectType": {
        "header": "New Gateway/Agent",
        "introduction": "Deploying an agent or gateway involves downloading and installing a piece of software on your server. To get started choose whether to protect your application using Identity Gateway or an agent."
      },
      "addDetails": {
        "introduction": "Create a profile for the agent to connect to and communicate with ForgeRock.",
        "header": {
          "gateway": "Create Identity Gateway Profile",
          "java-agent": "Create Java Agent Profile",
          "web-agent": "Create Web Agent Profile"
        }
      },
      "created": {
        "editProfile": "Edit Profile",
        "createdMessage": {
          "gateway": "Identity Gateway profile created!",
          "java-agent": "Java Agent profile created!",
          "web-agent": "Web Agent profile created!"
        },
        "nextSteps": "Next Steps",
        "gateway": {
          "download": "<a href='https://backstage.forgerock.com/downloads/browse/ig/featured' target='_blank' rel='noopener'>Download Identity Gateway</a>.",
          "instructions": "Follow the <a href='https://backstage.forgerock.com/docs/idcloud/latest/gateways-agents.html' target='_blank' rel='noopener'>step-by-step instructions</a> to install and configure Identity Gateway using the following values:"
        },
        "web-agent": {
          "download": "<a href='https://backstage.forgerock.com/downloads/browse/am/featured/web-agents' target='_blank' rel='noopener' >Download a web agent</a> based on your needs.",
          "instructions": "Follow the <a href='https://backstage.forgerock.com/docs/idcloud/latest/gateways-agents.html' target='_blank' rel='noopener'>step-by-step instructions</a> to install and configure the agent using the following values:"
        },
        "java-agent": {
          "download": "<a href='https://backstage.forgerock.com/downloads/browse/am/featured/java-agents' target='_blank' rel='noopener'>Download a java agent</a> based on your needs.",
          "instructions": "Follow the <a href='https://backstage.forgerock.com/docs/idcloud/latest/gateways-agents.html' target='_blank' rel='noopener'>step-by-step instructions</a> to install and configure the agent using the following values:"
        }
      },
      "errorCreating": "Could not create {type}",
      "identityGatewayTitle": "Identity Gateway",
      "javaAgentTitle": "Java Agent",
      "webAgentTitle": "Web Agent",
      "save": "Save Profile"
    },
    "editPage": {
      "downloadTitle": "Download and Install",
      "settingsTitle": "Settings",
      "nativeEdit": "Edit advanced settings in the Access Management Native Console",
      "gateway": {
        "downloadDescription": "<a href='https://backstage.forgerock.com/downloads/browse/ig/featured'>Download a identity gateway</a> based on your needs, and follow the <a href='https://backstage.forgerock.com/docs/idcloud/latest/gateways-agents.html'>step-by-step instructions</a> to install and configure the agent using the following values:"
      },
      "java-agent": {
        "downloadDescription": "<a href='https://backstage.forgerock.com/downloads/browse/am/featured/java-agents'>Download a java agent</a> based on your needs, and follow the <a href='https://backstage.forgerock.com/docs/idcloud/latest/gateways-agents.html'>step-by-step instructions</a> to install and configure the agent using the following values:"
      },
      "web-agent": {
        "downloadDescription": "<a href='https://backstage.forgerock.com/downloads/browse/am/featured/web-agents'>Download a web agent</a> based on your needs, and follow the <a href='https://backstage.forgerock.com/docs/idcloud/latest/gateways-agents.html'>step-by-step instructions</a> to install and configure the agent using the following values:"
      }
    }
  },
  "termsAndCondtions": {
    "title": "Terms & Conditions",
    "subTitle": "Configure versioned terms & conditions to track and manage user consent.",
    "newVersion": "New Version",
    "getTermsFail": "Unable to retrieve terms & conditions",
    "noTermsAndConditions": "No terms & conditions created",
    "view": "View Details",
    "setActive": "Set to Active Version",
    "setActiveError": "Unable to set Version to 'Active'",
    "setActiveSuccess": "Successfully set version to 'Active'",
    "deleteVersionError": "Unable to delete version {version}",
    "deleteVersionSuccess": "Successfully removed version {version}",
    "copyOf": "Copy of {version}",
    "termsTimeStamp": "{date} at {time}",
    "draft": "draft",
    "tcVersion": "Version",
    "newVersionModal": {
      "title": "New Version",
      "fieldHelp": "Unique version name used to monitor user consent."
    },
    "editTermsAndConditions": {
      "consent": "Terms & Conditions",
      "testModalHeader": "Terms & Conditions",
      "locale": "Locale",
      "addLocale": "Add locale",
      "markdown": "Markdown",
      "styles": "Styles",
      "try": "Try it out",
      "saveDraft": "Save as Draft",
      "setActive": "Set as Active Version",
      "saveSuccess": "Created a new T&C version",
      "saveDraftSuccess": "Saved a new T&C draft",
      "saveError": "Unable to save new Terms & Conditions version",
      "getTermsFail": "Failed to retrieve Terms & Conditions data",
      "publishConfirmationText": "Are you sure you want to publish this version of terms and conditions? You will not be able to make any further changes after you publish."
    }
  },
  "tenantAdmins": {
    "admin": "Admin",
    "inviteEmail": "Resend Invite Email",
    "federationAdmin": "Federation Admin",
    "tabs": {
      "profile": "Profile"
    },
    "editGroupModal": {
      "editGroup": "Edit Group"
    },
    "user": {
      "firstName": "First Name",
      "lastName": "Last Name",
      "mail": "Email Address",
      "inviteDate": "Date Invited",
      "onboardDate": "Date Onboarded",
      "jurisdiction": "Jurisdiction"
    },
    "events": {
      "errorAdminData": "Error retrieving admin data.",
      "errorDeleteAdmin": "Failed to delete admin.",
      "accountStatus": "Successfully updated status to {status}.",
      "errorAccountStatus": "Failed to update admin status.",
      "inviteEmail": "Invite email sent successfully.",
      "errorInviteEmail": "Error sending invite email.",
      "federationToggled": "Federation status updated.",
      "errorChangingFederation": "Error changing federation status.",
      "successAddingAdminGroup": "Admin group updated",
      "errorAddingAdminGroup": "Unable to update admin group"
    }
  },
  "scripts": {
    "title": "Scripts",
    "listView": {
      "addScript": "New Script",
      "noDataTitle": "You haven't added any scripts yet",
      "subTitle": "Manage scripts used for authentication and authorization."
    },
    "getListDataFail": "Unable to retrieve Script data",
    "deleteFail": "Unable to delete script",
    "editorModal": {
      "selectTypeTitle": "New Script",
      "editTitle": {
        "create": "New {typeName} Script",
        "edit": "Edit {typeName} Script",
        "duplicate": "Duplicate {typeName} Script"
      },
      "chooseType": "Choose the type of script to create.",
      "errorSaving": "Error saving script",
      "errorLoading": "Error loading script data",
      "legacyScriptAlert": "You are creating this script using the legacy script engine. There is an enhanced scripting engine available that offers new features and functions. Learn more about it and about how to migrate existing scripts to the new version.",
      "viewNewEngineDetails": "View details",
      "saveSuccess": "Script saved"
    },
    "engineChoice": {
      "description": "ForgeRock has introduced a new script engine for Journey Decision Node scripts that introduces new features and functions. You can choose to create your script using the new version or continue to use the previous version.",
      "legacyTitle": "Legacy",
      "legacyEngineChoice": "Use the legacy Journey Node scripting engine with existing features and functions.",
      "nextGenerationTitle": "Next Generation",
      "nextGenerationChoice": "Take advantage of the enhanced scripting engine with new features and functions.",
      "scriptUsesNewGeneration": "This script uses the next generation scripting engine.",
      "selectEngineTitle": "Choose Script Engine",
      "title": "Script Engine"
    },
    "deleteModal": {
      "body": "Are you sure you want to delete script {resource}?",
      "thisScript": "this script"
    },
    "typeOptions": {
      "AUTHENTICATION_TREE_DECISION_NODE": {
        "name": "Journey Decision Node",
        "description": "Script to be included in an authentication journey node and executed on the server during authentication."
      },
      "CONFIG_PROVIDER_NODE": {
        "name": "Configuration Provider Node",
        "description": "Default global script for Config Provider."
      },
      "LIBRARY": {
        "name": "Library",
        "description": "Reusable script for use across journey decision nodes."
      },
      "OAUTH2_ACCESS_TOKEN_MODIFICATION": {
        "name": "OAuth2 Access Token Modification",
        "description": "Script to modify OAuth2 authentication tokens when they are passed from the server to the client."
      },
      "OIDC_CLAIMS": {
        "name": "OIDC Claims",
        "description": "Script to gather and populate the claims in a request when issuing an ID token or making a request to the userinfo endpoint."
      },
      "AUTHENTICATION_CLIENT_SIDE": {
        "name": "Client-side Authentication",
        "description": "Script executed on the client during authentication."
      },
      "AUTHENTICATION_SERVER_SIDE": {
        "name": "Server-side Authentication",
        "description": "Script to be included in an authentication module within a chain and executed on the server during authentication."
      },
      "POLICY_CONDITION": {
        "name": "Policy Condition",
        "description": "Script to be used as conditions within authorization policies."
      },
      "SOCIAL_IDP_PROFILE_TRANSFORMATION": {
        "name": "Social Identity Provider Profile Transformation",
        "description": "Script to adapt the fields received by the provider to align with the fields expected by the platform."
      },
      "OAUTH2_MAY_ACT": {
        "name": "OAuth2 May Act",
        "description": "Scripts are included in an authentication module within a chain and are executed on the server during authentication."
      },
      "OAUTH2_VALIDATE_SCOPE": {
        "name": "OAuth2 Validate Scope",
        "description": "Script used for validating OAuth2 scopes."
      }
    },
    "languages": {
      "GROOVY": "Groovy",
      "JAVASCRIPT": "JavaScript"
    },
    "editorTabs": {
      "libraries": "Libraries",
      "documents": "Docs",
      "libraryError": "Error loading libraries data",
      "libraryScripts": "Library Scripts",
      "noLibrariesFound": "No library scripts found",
      "noSearchResult": "No results found for '{searchString}'"
    }
  },
  "events": {
    "title": "Event Hooks",
    "event": "Event",
    "getListDataFail": "Unable to retrieve events data",
    "deleteFail": "Unable to delete event",
    "saveEventSuccess": "\"{eventName}\" event hook successfully updated.",
    "createEventSuccess": "\"{eventName}\" event hook successfully created.",
    "eventTypes": {
      "onCreate": "is created (onCreate)",
      "postCreate": "after creation (postCreate)",
      "onRead": "is read (onRead)",
      "onUpdate": "is updated (onUpdate)",
      "postUpdate": "after update (postUpdate)",
      "onDelete": "is deleted (onDelete)",
      "postDelete": "after delete (postDelete)",
      "onValidate": "is validated (onValidate)",
      "onRetrieve": "is retrieved (onRetrieve)",
      "onStore": "is stored (onStore)",
      "onSync": "is synced (onSync)"
    },
    "listView": {
      "addEvent": "New Event Hook",
      "noDataTitle": "No event hooks found",
      "subTitle": "Trigger scripts based on system events.",
      "defaultTableTab": "All Endpoints",
      "objectName": "Object Name"
    },
    "deleteModal": {
      "deleteTitle": "Event Hook",
      "deleteMessage": "Are you sure you want to delete the \"{eventName}\" event hook?"
    },
    "editorModal": {
      "editEvent": "Edit Event Hook",
      "newEvent": "New Event Hook",
      "condition": "Condition",
      "objectName": "Object Name",
      "saveError": "Invalid script : {errorMessage}"
    }
  },
  "endpoints": {
    "title": "Custom Endpoints",
    "listView": {
      "addEndpoint": "New Endpoint",
      "noDataTitle": "You haven't added any custom endpoint scripts yet",
      "subTitle": "Use custom endpoints to extend functionality.",
      "defaultTableTab": "All Endpoints"
    },
    "getListDataFail": "Unable to retrieve endpoint script data",
    "deleteFail": "Unable to delete endpoint script",
    "editorModal": {
      "selectTypeTitle": "New Script",
      "editTitle": {
        "create": "New {typeName} Script",
        "edit": "Edit {typeName} Script",
        "duplicate": "Duplicate {typeName} Script",
        "endpoint": "Endpoint"
      },
      "endpointHelp": "Specifies the path that the script can be accessed at.  An endpoint with the name <strong>\"example\"</strong> is addressable over REST at the URL <code>https://{yourdomain}/openidm/endpoint/example</code> or by using a script such as <code>openidm.read('endpoint/example')</code>.",
      "chooseType": "Choose allowed methods to create a customized template to start with in constructing this endpoint.",
      "errorSaving": "Error saving script",
      "errorLoading": "Error loading script data",
      "methodsLabel": "Allowed Methods",
      "globalsHelpText": "The variables passed into this script are namespaced with the \"globals\" object.",
      "testResults": "Test Results",
      "test": "Test",
      "newEndpoint": "New Endpoint",
      "editEndpoint": "Edit Endpoint",
      "compileSuccess": "script compiled",
      "compileFail": "script compilation failed: ",
      "type": "Type:",
      "curlRequest": "cURL Request",
      "curlHelpText": "Generate a cURL request to call your endpoint.",
      "method": "Method",
      "body": "Body",
      "generate": "Generate",
      "viewDocs": "View docs",
      "docsHelpText": "Custom endpoint scripts must return a JSON object. The structure of the return object depends on the method in the request.",
      "curl": "cURL",
      "curlTooltip": "Copy cURL"
    },
    "deleteModal": {
      "deleteTitle": "Custom Endpoint",
      "deleteMessage": "Are you sure you want to delete this endpoint script?"
    },
    "languages": {
      "groovy": "Groovy",
      "javascript": "JavaScript"
    }
  },
  "cookie": {
    "calloutText": "If you change the name of the cookie on a production system, you are invalidating the sessions of any user that still had a valid cookie.",
    "cancelButtonText": "Cancel",
    "getCookieFail": "Error getting the Cookie Name",
    "inputLabel": "Cookie Name",
    "resetCookieFail": "Error resetting the Cookie Name",
    "resetting": "Resetting",
    "resetToDefault": "Reset to Default",
    "subTitle": "Update the cookie name for this tenant.",
    "title": "Cookie",
    "updateCookieFail": "Error updating the Cookie Name"
  },
  "csp": {
    "title": "Content Security Policy",
    "subtitle": "Configure Content-Security-Policy (CSP) HTTP headers to provide an extra layer of security for journeys and end-user UIs.",
    "enforcedPolicy": "Enforced Policy",
    "reportOnlyPolicy": "Report Only Policy",
    "policyStatus": "Policy Status",
    "details": {
      "noDataTitle": "You haven't added any directives yet",
      "enforcedNoDataSubtitle": "Add directives to create your Enforced Content Security Policy.",
      "reportNoDataSubtitle": "Add directives to create your Report Only Content Security Policy."
    },
    "pendingUpdates": {
      "errorUpdating": "Error updating Content Security Policy",
      "modalContent": "Are you sure you want to publish changes? Changes will take a few minutes to take effect.",
      "modalTitle": "Publish Changes?",
      "successUpdating": "Successfully updated Content Security Policy",
      "updatesToPublish": "<span class=\"font-weight-bold mr-1 text-dark\">Publish Changes</span> You have to publish for your changes to take effect."
    },
    "addDirective": {
      "directiveSources": "Directive Sources",
      "hostsHelp": "List of valid hosts. Wildcards are acceptable. Eg. <code>http://www.example.com</code>,<code>http://www.*.example.com</code>",
      "modalTitle": "Add Directive",
      "navigateToHelp": "List of valid sources the document can initiate navigation to. Eg. <code>&lt;a&gt;</code>,<code>&lt;form&gt;</code>",
      "pluginHelp": "List of plugin types the browser can invoke. Eg. <code>application/pdf</code>",
      "pluginTypes": "Plugin Types",
      "reportToHelp": "The reporting group that the browser should send violation reports to.",
      "reportToPlaceholder": "Reporting Group",
      "reportURIHelp": "The URI that the browser should send violation reports to.",
      "reportURIPlaceholder": "Reporting Endpoint",
      "selectDirective": "Select a directive",
      "specifyKeywords": "Specify keywords and valid hosts for this directive."
    }
  },
  "esv": {
    "title": "Environment Secrets & Variables",
    "subTitle": "Set secrets and variables that are specific to this environment. These will be substituted into configuration or script placeholders.",
    "placeholder": "Configuration Placeholder",
    "updateStarted": "Update process started",
    "updateFinished": "Update process completed",
    "list": {
      "secretsNoDataTitle": "You haven't added any secrets yet",
      "variablesNoDataTitle": "You haven't added any variables yet",
      "secretsNoDataSubtitle": "Add secrets for use within your environment.",
      "variablesNoDataSubtitle": "Add variables for use within your environment.",
      "noSearchResult": "No results found"
    },
    "deleteModal": {
      "thisType": "this {type}"
    },
    "createModal": {
      "addVariable": "Add a Variable",
      "addSecret": "Add a Secret",
      "type": "Type",
      "variableDescription": "Add a variable to create a non-sensitive configuration value that is specific to this environment. Variables are simple key/value pairs.",
      "secretDescription": "Add a secret to create a sensitive configuration value that is specific to this environment. Secrets have multiple secret versions, each containing their own encrypted value. By design, the value of a secret version cannot be read after it has been created."
    },
    "updateVariableModal": {
      "editDescriptionTitle": "Edit Variable Description",
      "editValueTitle": "Edit Variable Value",
      "errorUpdatingVariable": "Error updating variable"
    },
    "updateSecretModal": {
      "editDescriptionTitle": "Edit Secret Description",
      "newVersionHeader": "Create a New Secret Version",
      "confirmDeleteHeader": "Delete Secret Version?",
      "newVersionButtonText": "New Version",
      "addVersionButtonText": "Add Version",
      "confirmDeleteText": "Are you sure you want to delete secret <span class=\"font-weight-bold text-dark\">Version {version}</span>?",
      "errorUpdatingSecret": "Error updating secret",
      "errorAddingSecretVersion": "Error creating Secret Version",
      "errorChangingSecretVersionStatus": "Error changing Secret Version status",
      "errorDeletingSecretVersion": "Error deleting Secret Version",
      "versionCreated": "Version successfully created",
      "versionDeleted": "Version successfully deleted",
      "versionActivated": "Version successfully activated",
      "versionDeactivated": "Version successfully deactivated"
    },
    "pendingUpdates": {
      "updatesToApply": "You have <span class=\"font-weight-bold text-dark\">{count} update</span> to apply. | You have <span class=\"font-weight-bold text-dark\">{count} updates</span> to apply.",
      "viewUpdates": "View Update | View Updates",
      "errorApplyingUpdates": "Error applying updates",
      "updateInProgress": "<span class=\"font-weight-bold\">Update in progress.</span> Adding or editing of environment variables is inactive until update has completed, which may take up to 10 minutes."
    },
    "pendingUpdatesModal": {
      "applyUpdates": "Apply Now",
      "pendingTitle": "Pending Updates",
      "applyTitle": "Apply {count} Update? | Apply {count} Updates?",
      "applyButton": "Apply {count} Update | Apply {count} Updates",
      "tableStageDescription": "The following <span class=\"font-weight-bold text-dark\">{count} update</span> is pending application to your environment. | The following <span class=\"font-weight-bold text-dark\">{count} updates</span> are pending application to your environment.",
      "confirmStageBeforeLink": "Are you sure you want to apply ",
      "confirmStageBackLinkText": "{count} pending update | {count} pending updates",
      "confirmStageAfterLink": " to your environment?",
      "updateWarning": "Changes may take up to 10 minutes to propagate, during which time you will not be able to make further updates."
    }
  },
  "securityQuestions": {
    "subtitle": "Define security questions to use for verification purposes.",
    "title": "Security Questions",
    "questionDeleteSuccess": "Security question successfully deleted",
    "questionUpdateSuccess": "Security questions successfully updated",
    "settingsSaveSuccess": "Security question settings successfully saved",
    "errorLoading": "Error retrieving security question configuration",
    "errorSaving": "Error saving security questions"
  },
  "securityQuestionsQuestions": {
    "title": "Questions",
    "addQuestion": "Add Question",
    "noQuestions": "You haven't defined any security questions",
    "modalDescription": "Define localized messages for this security question.",
    "addLocale": "Add Locale",
    "locale": "Locale",
    "locales": "Locales",
    "addNewLocale": "Add this as new locale",
    "question": "Question",
    "editModalTitle": "Edit Security Question",
    "addModalTitle": "Add a Security Question"
  },
  "securityQuestionsSettings": {
    "title": "Settings",
    "mustDefine": "Must define",
    "mustAnswer": "Must answer",
    "setUpAtLeast": "Users must set up at least",
    "questionsRegistration": "questions during registration.",
    "usersMustAnswer": "Users must answer",
    "questionsSignIn": "questions on sign in",
    "answersGreaterThanDefined": "Cannot require more questions to answer than questions to define"
  },
  "objectTypeEditor": {
    "addObjectType": "Add Object Type",
    "addProperty": "Add a Property",
    "allObjectsAssigned": "All non-account object types have already been assigned to a property (each object type can only be assigned to one property).",
    "allPropertiesAdded": "All available properties added",
    "applicationObjectType": "Application Object Type",
    "consent": "Privacy & Consent",
    "consentActivated": "Consent Activated",
    "consentBasedProvisioning": "Consent-based Provisioning",
    "consentBasedProvisioningDescription": "Allow end users to revoke consent to provision personal information to this application.",
    "consentDeactivated": "Consent Deactivated",
    "constrainValues": "Constrain values for this property",
    "creatable": "Creatable",
    "data": "Data",
    "details": "Details",
    "detailsSaved": "Details saved",
    "displayAttribute": "Display Name Attribute",
    "displayAttributeDescription": "Attribute on the target system to use to populate a human-readable name for this object type and any associated entitlements.",
    "editProperty": "Edit Property",
    "entitlement": "Entitlement",
    "entitlementDescription": "Specify this property as containing entitlements.",
    "enumeratedValues": "Enumerated Values",
    "errorRetrievingSystemObjects": "Error retrieving system objects",
    "id": "ID",
    "multiValued": "Multi-valued",
    "nativeType": "Native Type",
    "noPropertiesDefined": "No properties defined",
    "objectType": "Object type",
    "objectTypeAdded": "Object type added",
    "objectTypes": "Object Types",
    "orderTooltip": "Define the order in which fields are displayed in the account form",
    "preferenceActivated": "Preferences Activated",
    "propertyPreferenceActivated": "'{property}' Preference Activated",
    "preferenceBasedProvisioning": "Preference-based Provisioning",
    "preferenceBasedProvisioningDescription": "Provision only users who have opted in for specified preferences.",
    "preferenceDeactivated": "Preferences Deactivated",
    "propertyPreferenceDeactivated": "'{property}' Preference Deactivated",
    "properties": "Properties",
    "property": "property",
    "propertyDeleted": "Property deleted",
    "propertySaved": "Property saved",
    "readable": "Readable",
    "reconcile": "Reconcile",
    "reconciliation": "Reconciliation",
    "referencedObjectField": "Object Type Property",
    "referencedObjectFieldDescription": "Object type property to use to populate enumerated values.",
    "returnedByDefault": "Returned by default",
    "selectNonAccountObject": "Select Object Type",
    "selectNonAccountObjectDescription": "Object type from which to populate enumerated values for this property",
    "sourceOfValues": "Source of Values",
    "updatable": "Updatable",
    "userSpecific": "User-specific",
    "userSpecificHelpText": "Property is specific to individual users and not applicable to roles.",
    "values": "Values",
    "viewDocs": "View Docs"
  },
  "jobs": {
    "allJobs": "All Jobs",
    "days": "days(s)",
    "deactivateButton": "Deactivate Job",
    "defaultCronDescription": "Enter a valid cron string.",
    "deleteModal": {
      "title": "Scheduled Job",
      "message": "Are you sure you want to delete the \"{jobName}\" scheduled job?"
    },
    "frequency": "Frequency",
    "fullRecon": "Full Reconciliation",
    "hours": "hour(s)",
    "incrementalRecon": "Incremental Reconciliation",
    "invalidCron": "Invalid cron",
    "jobModal": {
      "chooseEntity": "Choose Entity to Scan",
      "chooseJobType": "Choose the type of job to schedule.",
      "currentlyExecuting": "Currently executing on {node}",
      "detailsModalTitle": "{type} Job Details",
      "entityToScan": "Entity to Scan",
      "entityToScanDescription": "Choose an entity to scan at a scheduled interval.",
      "errorGettingManagedObjects": "Unable to get available entities",
      "jobName": "Job Name",
      "jobType": "Job Type",
      "queryFilterDescription": "Apply script only to a subset of {managedObj} by applying a query filter.",
      "queryFilterLabel": "Filter {managedObj}",
      "queryFilterPrefix": "Execute a script if",
      "scriptDescription": "Execute a script at a scheduled interval.",
      "taskScannerDescription": "Scan a set of properties with a query filter at a scheduled interval, and execute a script on the objects returned by the query.",
      "timezone": "Timezone",
      "timezoneMismatch": "Start and end times must have the same timezone offset"
    },
    "jobs": "Jobs",
    "listSubtitle": "Monitor and schedule jobs.",
    "loadingJobs": "Loading jobs...",
    "modalTitle": "Schedule {title} Reconciliation Job",
    "months": "month(s)",
    "nextRun": "Next run: {nextDate}",
    "nextScheduledRun": "Next Scheduled Run",
    "noDataSubtitle": "Scheduled jobs will appear once mapping is configured",
    "noDataTitle": "You haven't configured mappings for this object type",
    "noJobs": "No jobs scheduled",
    "noJobsSubtitle": "Any scheduled jobs will appear here.",
    "noSearchResults": "No scheduled jobs found",
    "repeat": "Repeat",
    "runError": "Error starting scheduled job",
    "runEvery": "Run every",
    "runJob": "Run Job",
    "runSuccess": "Job started",
    "running": "Running...",
    "runModal": {
      "title": "Run Scheduled Job",
      "message": "Are you sure you want to run this scheduled job now?"
    },
    "runNow": "Run Now",
    "saveError": "Error saving scheduled job",
    "schedule": "Schedule",
    "scheduleAJob": "Schedule a Job",
    "scheduleError": "Unable to retrieve scheduled jobs",
    "scheduleSuccess": "Scheduled job set successfully",
    "scheduleSucessDeleted": "Scheduled job successfully deleted",
    "script": "Script",
    "setTime": "Set a Start Time",
    "setUp": "Set Up",
    "subTitle": "Periodically perform a full or partial reconciliation.",
    "subTitleFullOnly": "Periodically perform a full reconciliation.",
    "taskScanner": "Task Scanner",
    "times": "times",
    "title": "Schedule Jobs",
    "titleFullOnly": "Schedule Job",
    "untilDate": "Until specific date",
    "useCron": "Use cron",
    "weeks": "week(s)"
  },
  "mapping": {
    "addProperty": "Add a property",
    "conditionUpdateDescription": "Update only if script evaluates to true. <code>object</code> represents the complete {sourceApplication} user identity profile.",
    "conditionUpdateEnabled": "Apply conditional update",
    "conditionUpdateLabel": "Conditional Update Script",
    "defaultValueDescription": "Default value to apply.",
    "defaultValueEnabled": "Apply a default if value is <code>null</code>",
    "defaultValueLabel": "Default value",
    "editPropertyMapping": "{application} Property Mapping",
    "inbound": "Inbound",
    "managedSchemaError": "Error retrieving managed schema",
    "mappingRetrievalError": "Error retrieving mappings",
    "mappingUpdateError": "Error updating mapping",
    "noProperties": "No properties mapped",
    "noPropertiesHelp": "Map properties from {source} to {target}.",
    "noResultsFound": "No results found.",
    "outbound": "Outbound",
    "previewMapping": "Preview Mapping",
    "propertyLabel": "{application} Property",
    "propertyMappingAdded": "Property mapping added",
    "propertyMappingDeleted": "Property mapping deleted",
    "propertyMappingUpdated": "Property mapping updated",
    "selectInboundPropertyLabel": "{target} User property to provide a value for when reconciling data from {source} account.",
    "selectOutboundPropertyLabel": "Property to provide a value for when provisioning to {target} account.",
    "selectPropertyLabel": "Choose {application} property",
    "showScriptEditor": "Show Script Editor",
    "sourceProperty": "source.{prop}",
    "sourceValueDescription": "{sourceApplication} property to map to {targetApplication}.",
    "sourceValueLabel": "Source Value",
    "sourceValuePlaceholder": "Choose a property or enter an expression",
    "sourceValueTag": "Press enter",
    "title": "Mapping",
    "transformScriptDescription": "Expression to map to {targetApplication}. <code>source</code> represents the currently selected {sourceApplication} property.",
    "transformScriptEnabled": "Apply transformation script",
    "transformScriptLabel": "Transformation Script"
  },
  "settings": {
    "saveMessage": "Settings saved",
    "accountCorrelation": {
      "editModal": {
        "subTitle": "Choose the attribute(s) to use to match users in {appName} to users in ForgeRock.",
        "selectLabel": "Attribute(s) to match",
        "defaultUsername": "ForgeRock username",
        "defaultName": "Name (First and Last)",
        "defaultUsernameAndEmail": "ForgeRock username and Email",
        "defaultUsernameAndName": "ForgeRock username and Name",
        "defaultEmailAndName": "Email and Name",
        "custom": "Custom",
        "defaultUsernameOrEmailAndName": "Forgerock username or Email, and Name",
        "advancedButtonText": "Use advanced query",
        "basicButtonText": "Use basic options",
        "editCorrelation": "Edit Correlation"
      },
      "cardHeaderTitle": "Account Correlation",
      "subTitle": "Choose the attribute(s) to use to match users in {appName} to users in ForgeRock.",
      "fieldLabel": "Match using",
      "configure": "Configure"
    },
    "advancedSettings": {
      "settingsModal": {
        "modalTitle": "Advanced Reconciliation Settings",
        "subTitle": "Filter and tune reconciliation to improve performance.",
        "filterSource": "Filter Source",
        "filterSourceDescription": "Restrict reconciliation to specific identities in {appName} by defining an explicit source query.",
        "filterTarget": "Filter Target",
        "filterTargetDescription": "Restrict reconciliation to specific identities in ForgeRock by defining an explicit target query.",
        "validSourceScript": "Valid Source Script",
        "sourceScriptDescription": "Filter the {appName} identities that are included in reconciliation using a script.",
        "persistAssociations": "Persist Associations",
        "persistAssociationsDescription": "Record associations between source or target objects to allow UI to show results of last recon.",
        "persistAssociationsWarning": "Enabling this setting can cause performance issues in large reconciliations.  <a href=\"https://backstage.forgerock.com/knowledge/kb/article/a71844438\" target=\"_blank\" rel=\"noopener\" class=\"alert-link\">Learn more</a>",
        "validTargetScript": "Valid Target Script",
        "targetScriptDescription": "Filter the ForgeRock identities that are included in reconciliation using a script.",
        "correlateEmptyTarget": "Correlate empty target objects",
        "correlateTargetDescription": "Allow correlation of source objects to empty target objects.",
        "prefetchLinks": "Prefetch Links",
        "prefetchDescription": "Prefetch each link in the database before processing each source or target object.",
        "allowEmptySource": "Allow reconciliations from an Empty Source",
        "emptySourceDescription": "Allow reconciliations from an empty source to delete all data in a target resource.",
        "threadsPerRecon": "Threads Per Reconciliation",
        "threadsDescription": "Tune performance by adjusting the number of concurrent threads dedicated to reconciliation.",
        "syncToken": "Sync Token",
        "syncTokenDescription": "Sync token used for incremental inbound reconciliation."
      }
    },
    "eventHooks": {
      "modal": {
        "editEventHook": "Edit Event Hook",
        "addEventHook": "Add Event Hook",
        "deleteEventHook": "{eventHook} Event Hook"
      },
      "title": "Event Hooks",
      "subTitle": "Trigger a script or a workflow when specified reconciliation events occurs.",
      "link": "Link",
      "unlink": "Unlink"
    },
    "rules": {
      "title": "Situation Rules",
      "subTitle": "Define rules for various sync situations.",
      "situation": "Situation"
    }
  },
  "reconciliation": {
    "associationModal": {
      "modalTitle": "Edit Association Rules",
      "any": "any",
      "all": "all",
      "userProperty": "User property",
      "addRule": "Add Rule",
      "addGroup": "Add Group",
      "assignIf": "Correlate user if",
      "attrMatch": "attributes are matched:"
    },
    "changeAssociationModal": {
      "title": "Change User Association",
      "loadingTitle": "Updating user association...",
      "headerLabel": "Associate Remote Application",
      "inputLabel": "With ForgeRock Identity",
      "any": "Any",
      "username": "Username",
      "email": "Email",
      "firstName": "First Name",
      "lastName": "Last Name",
      "name": "Name",
      "changeError": "error changing user association",
      "linkError": "error linking users",
      "placeholder": "Search ForgeRock identitites"
    },
    "modes": {
      "allValid": "All valid {appName} users",
      "1to1": "1-to-1 match",
      "noMatch": "No match found",
      "noMatchApp": "No match found for Forgerock user in {appName}",
      "conflictingMatch": "Conflicting matches",
      "conflictingChanges": "Conflicting changes",
      "allOtherIds": "All other users",
      "unresolvedIds": "Unresolved {appName} users",
      "unresolvedObjects": "Unresolved ForgeRock users",
      "ignoredUsers": "Ignored users"
    },
    "reportModal": {
      "title": "Reconciliation Report",
      "fullRecon": "Full Reconciliation:"
    },
    "syncModal": {
      "modalTitle": "Sync Settings",
      "modalDescription": "Define when to perform data synchronization between External System and Managed Users.",
      "liveUpdates": "Live Updates",
      "liveUpdatesDescription": "Sync changes with External System as soon as they occur in your directory.",
      "enableSheduled": "Scheduled Updates",
      "enbleSheduledDescription": "Schedule a recurring process to sync all your data, for full consistency."
    },
    "unlinkUserModal": {
      "title": "Unlink User",
      "loadingTitle": "Updating user association...",
      "warningMessage": "The application object you are trying to associate is currently linked to a different identity.  Are you sure you want to change the user association?",
      "confirm": "Confirm Change",
      "unlinkError": "error unlinking users"
    },
    "associationRules": "Association Rules",
    "attemptedAction": "Attempted Action",
    "cancelReconSuccess": "Canceling recon...",
    "canccelReconFail": "Something went wrong canceling the recon",
    "changeUserAssociation": "Change User Association",
    "errorRetrievingData": "There was an error retrieving data",
    "errorSaveTree": "Saving expression tree failed",
    "generatingPreview": "Generating preview...",
    "lastReconciliation": "Last Reconciliation",
    "lastRefreshed": "Last refreshed",
    "loadingView": "Loading user association view",
    "noItems": "No Items",
    "noMapping": "No Inbound Mapping",
    "noReconData": "No reconciliation data for this category",
    "notFound": "Not found",
    "notReconciled": "Not Reconciled",
    "notYetReconciled": "Not yet reconciled",
    "percentComplete": "% complete",
    "pleaseMapping": "You need to configure an inbound mapping before reconciliation is available",
    "previewAssociations": "Preview Associations",
    "previewAssociationsDescription": "Reconcile your data between {appName} and ForgeRock.",
    "processedAndTotal": "Reconciled {processed}/{total} records",
    "readError": "Error getting data",
    "reconAccounts": "Reconcile Accounts",
    "reconCanceled": "Reconciliation canceled by admin",
    "reconFailed": "Reconciliation Failed",
    "reconFailedDescription": "Check your configuration and try again.",
    "reconcileAppNonAccountObject": "Reconcile {applicationName} {nonAccountObject}",
    "reconciled": "Reconciled",
    "reconIdentity": "Reconcile Identity",
    "reconNow": "Reconcile Now",
    "refreshAssociations": "Refresh Associations",
    "result": "Result",
    "saveError": "Error saving changes",
    "searchPlaceholder": "Search {sourceAppName} {sourceObject}s",
    "singleReconText": "Reconciling single Identity record",
    "successfullyReconciled": "Successfully Reconciled",
    "successSaveTree": "Saved expression tree",
    "syncError": "An error occurred while trying to sync user",
    "syncSuccess": "User successfully updated",
    "syncText": "Syncing Identities from External System",
    "viewReport": "View Report",
    "willReconcile": "Will reconcile",
    "wontReconcile": "Won't reconcile"
  },
  "rules": {
    "actionDescription": "Choose an action to perform in this situation.",
    "actionTitle": "When situation occurs",
    "addARule": "Add a Rule",
    "addRule": "Add Rule",
    "completeScriptDescription": "Set up a script to execute after your action is complete.",
    "completeScriptLabel": "Execute script on action complete",
    "executeScript": "Execute Script",
    "linkQualifier": "Link Qualifier",
    "noMapping": "No Inbound Mapping",
    "noMappingHelp": "You need to configure an inbound mapping before rules are available",
    "performAction": "Perform Action",
    "restrictSituation": "Restrict situation",
    "restrictSituationDescription": "Specify query filters or add a script to restrict policy actions to a subset of records where situation is appliable.",
    "rule": "rule",
    "ruleDeleted": "Rule deleted",
    "ruleSaved": "Rule saved",
    "selectAction": "Select action",
    "situation": "Situation",
    "situationDescription": "Choose the reconcilliation situation for which this rule applies",
    "situationLabel": "Choose a situation",
    "situationRule": "Situation Rule",
    "title": "Rules",
    "actionDescriptions": {
      "ASYNC": "An asynchronous process has been started, so do not perform any action or generate any report",
      "CREATE": "Create and link a target object",
      "DELETE": "Delete and unlink the target object",
      "EXCEPTION": "Flag the link situation as an exception",
      "IGNORE": "Do not change the link or target object state",
      "LINK": "Link the correlated target object",
      "NOREPORT": "Do not perform any action or generate any report",
      "REPORT": "Do not perform any action but report what would happen if the default action were performed",
      "UNLINK": "Unlink the linked target object",
      "UPDATE": "Link and update a target object"
    },
    "actionDisplayNames": {
      "ASYNC": "Async",
      "CREATE": "Create",
      "DELETE": "Delete",
      "EXCEPTION": "Exception",
      "IGNORE": "Ignore",
      "LINK": "Link",
      "NOREPORT": "No Report",
      "REPORT": "Report",
      "Script": "Script",
      "UNLINK": "Unlink",
      "UPDATE": "Update"
    },
    "ruleDescriptions": {
      "absent": "Source object has no matching target.",
      "allGone": "Source object removed, link not found, correlation not possible.",
      "ambiguous": "Source object correlates to multiple target objects, without a link.",
      "changesToIncorporate": "Change was made on application and IDM will incorporate.",
      "confirmed": "Valid source and target objects linked.",
      "found": "Correlation query from source points to one target object.",
      "foundAlreadyLinked": "Correlation from source points to a target object already linked to a different source.",
      "linkOnly": "Link found, target object not found.",
      "missing": "The source links to a missing target object.",
      "sourceIgnored": "Does not pass validSource script.",
      "sourceMissing": "Valid target found, link found.",
      "sourceTargetConflict": "Source and target have different values, but cannot be remedied or disallowed.",
      "targetIgnored": "Does not pass validTarget script.",
      "unassigned": "Valid target found, no link.",
      "unqualified": "Source object not qualified, but target objects found."
    }
  },
  "promotions": {
    "downloadReport": "Download Report",
    "errorLoadingHistory": "Error loading promotion history",
    "errorLoadingReport": "Error loading promotion information",
    "errorLoadingUpdateReportDetails": "Error loading update details",
    "errorLoadingUpdates": "Error loading promotion updates",
    "loadingReportsInProgress": "Loading reports...",
    "locked": {
      "title": "Tenant locked for promotion",
      "description": "Tenant will be locked until promotion has completed. Sign in to the {upper} tenant to view details.",
      "signInButtonText": "Sign in to {upper}"
    },
    "lockTenants": {
      "errorLoadingLockState": "Error loading tenant lock state.",
      "errorLocking": "Error locking environments.",
      "errorUnlocking": "Error unlocking environments.",
      "lockAndContinue": "Lock And Continue",
      "lockDescription": "In order to ensure a reliable promotion, both <b>{current} and {upper} tenants will be locked and inaccessible</b> for the duration of the promotion process.",
      "lockInProgress": "Locking tenants...",
      "title": "Lock Tenants?",
      "unlockInProgress": "Unlocking tenants..."
    },
    "migration": {
      "chooseManagementOfConfigurationTitle": "Choose how you manage your configuration",
      "downloadConfigurationConfirmation": "I confirm I have downloaded my configuration",
      "errorUpdatingMigrationAcknowledgement": "Error updating confirmation of configuration management",
      "externalConfigurationOption": "Configuration is managed externally",
      "fogerockManagesConfigurationOption": "Forgerock manages configuration",
      "goodToGoConfigurationMessage": "If you don’t manage your configuration externally you are set and good to go.",
      "inProgressPopover": "Tenant is locked during tenant migration",
      "tenantMigratedInfo": "Your tenant has been enabled to support self-managed promotions. To learn more about this capability <a href=\"https://backstage.forgerock.com/docs/idcloud/latest/tenants/self-service-promotions-migration-faq.html\" target=\"_blank\" rel=\"noopener\">view the docs</a>",
      "tenantMigratedTitle": "Your tenant has been migrated",
      "updateAndDownloadConfigurationMessage": "If you manage your configuration externally, you’ll need to download and update your repo with the new configuration before proceeding."
    },
    "noChangesSubtitle": "When you make changes to configuration they will appear here.",
    "noChangesTitle": "No changes to promote",
    "noReportsSubtitle": "When there are promotion reports to display they will appear here.",
    "noReportsTitle": "No reports to show",
    "nPendingChanges": "{count} Pending Change | {count} Pending Changes",
    "promote": {
      "blockingErrorDescription": "An error occurred during promotion and your tenant is locked. Please <a target=\"_blank\" href=\"https://backstage.forgerock.com/support/tickets\" data-testid='contact-support'>contact support</a> to resolve the issue.",
      "encryptedSecrets": "Encrypted secrets",
      "errorDescriptionMissingESV": "You need to cancel this promotion and add the following missing required configuration to your {upper} tenant before proceeding.",
      "errorDescriptionEncryptedSecrets": "It is recommended that you cancel this promotion and add ESVs for the following encrypted secrets in your configuration before proceeding.",
      "errorStarting": "Error initiating promotion",
      "errorTitle": "Promotion Failed",
      "inProgress": "Promotion in-progress",
      "secretsAndVariables": "Secrets and variables",
      "success": "Promotion successful!",
      "unexpectedStatus": "Unexpected promotion status encountered",
      "viewReport": "View report"
    },
    "promoteNChanges": "Promote {count} Change | Promote {count} Changes",
    "promotionHistory": "Promotion History",
    "promotionNotAvailable": "Promotion is currently unavailable as this tenant is locked.",
    "promotionUpdates": "Tenant Updates",
    "review": {
      "cancelAndUnlock": "Cancel and Unlock Tenants",
      "cancelPromotion": "Cancel Promotion",
      "continueWithoutFixing": "Continue without fixing",
      "continueWithoutFixingModal": {
        "content": "Continuing without adding ESVs for the encrypted secrets could cause configuration errors in your {upper} tenant.",
        "title": "Continue Without Fixing?"
      },
      "ignoreEncryptedSecrets": "Ignore Encrypted Secrets",
      "promotionWarning": "Both <b>{current} and {upper}</b> tenants will remain locked and inaccessible for the duration of the promotion.",
      "startPromotion": "Start Promotion",
      "startPromotionQuestion": "Start Promotion?",
      "subTitle": "Confirm changes to be promoted.",
      "title": "Review Promotion"
    },
    "showAllChanges": "All changes",
    "signinText": "To access promotion information you first need to authenticate to your {upper} tenant",
    "tenantLocked": "Tenant Locked",
    "tenantLockedPopover": "Tenants remain locked during a promotion",
    "tiers": {
      "development": "Dev",
      "staging": "Staging",
      "production": "Production",
      "uat": "UAT"
    },
    "viewHistory": "View promotion history",
    "viewUpdates": "View updates"
  },
  "governance": {
    "certification": {
      "accessReviewHistory": "Access Review History",
      "accessReviewHistoryLabels": {
        "certify": "Certified",
        "revoke": "Revoked"
      },
      "activeCampaigns": "Active Campaigns",
      "activeCampaignsLabels": {
        "identity": "Identity",
        "entitlement": "Entitlement",
        "application": "Application",
        "roleMembership": "Role Membership"
      },
      "activeCampaignsTooltip": "Total active certification campaigns",
      "activeReviews": "Active Reviews",
      "activeReviewsTooltip": "Total access reviews currently in-progress",
      "campaignsByStatus": "Campaigns By Status",
      "campaignsByStatusLabels": {
        "in-progress": "Active",
        "staging": "Staged",
        "signed-off": "Signed Off"
      },
      "campaignsByType": "Campaigns By Type",
      "certificationType": "{type} Certification",
      "errors": {
        "errorDeadline": "Deadline must be a future date"
      },
      "expiringCampaigns": "Expiring Campaigns",
      "expiringCampaignsTooltip": "Total campaigns expiring within the next 2 weeks",
      "title": "Certification",
      "subtitle": "Create certification campaigns to certify identities.",
      "overview": "Overview",
      "campaigns": "Campaigns",
      "updateDeadline": "Update Deadline",
      "noCampaigns": "No {type} Campaigns",
      "modal": {
        "activateCampaign": "Activate Campaign?",
        "activateCampaignDescription": "Are you sure you want to activate this campaign?",
        "activateCampaignButton": "Activate Campaign",
        "cancelCampaign": "Cancel Campaign?",
        "cancelCampaignDescription": "Are you sure you want to cancel this campaign?",
        "cancelCampaignButton": "Cancel Campaign",
        "deleteCampaign": "Delete Staged Campaign?",
        "deleteCampaignDescription": "Are you sure you want to delete this staged campaign?",
        "deleteCampaignButton": "Delete Campaign",
        "updateCampaignDeadline": "Update Campaign Deadline",
        "chooseNewDeadline": "Choose a new deadline for this campaign"
      }
    },
    "entitlements": {
      "title": "Entitlements",
      "subtitle": "Manage and configure user entitlements across all your configured applications.",
      "failedToLoad": "Failed to load entitlements",
      "tabs": {
        "breadcrumb": "Entitlements",
        "details": "Details",
        "detailsTab": {
          "entitlementSaved": "Entitlement saved successfully",
          "entitlementSaveErrorMessage": "Error saving entitlement, please try again",
          "notLoadErrorMessage": "Error loading the details of entitlement",
          "title": "General Settings"
        },
        "objectProperties": "Object Properties",
        "users": {
          "title": "Users",
          "notFound": "No entitlements found",
          "notFoundDescription": "Try a new search in the seach box above.",
          "failedToLoad": "Failed to load entitlement's users"
        }
      }
    },
    "glossary": {
      "addGlossaryItem": "Add {glossaryType} Glossary Item",
      "application": "Application",
      "assignment": "assignment",
      "boolean": "Boolean",
      "createAttrError": "Failed to create {resourceType} attribute",
      "createAttrSuccess": "Successfully created {resourceType} attribute",
      "date": "Date",
      "deleteAttrError": "Failed to delete {attributeName}",
      "deleteAttrSuccess": "Successfully deleted {attributeName}",
      "deleteGlossaryAttribute": "Delete {attributeName} attribute?",
      "deleteGlossaryAttributeBody": "Are you sure you want to delete {attributeName} attribute?",
      "editGlossaryItem": "Edit {glossaryType} Glossary Item",
      "entitlement": "Entitlement",
      "glossaryDescription": "Description (optional)",
      "glossaryDisplayName": "Display Name",
      "glossaryDisplayNameDesc": "Human-readable label for this property.",
      "glossaryItem": "{glossaryType} Glossary Item",
      "glossaryName": "Name",
      "glossaryType": "Type",
      "isEnumeratedValue": "Enumerated Values",
      "isEnumeratedValueDesc": "Define a list of enumerated values for this property.",
      "isMultiValued": "Multi-Valued",
      "isSearchable": "Searchable",
      "loadingGlossary": "Loading Glossary attributes.",
      "noGlossaryFound": "No Glossary attributes found.",
      "noResultsHelp": "Try a new search in the seach box above.",
      "number": "Number",
      "organization": "Organization",
      "picklist": "Picklist",
      "picklistDesc": "Picklist containing the attribute with which to populate enumerated values.",
      "queryAttrError": "Failed to load {resourceType} attributes",
      "role": "Role",
      "string": "String",
      "subtitle": "Create, view, or update items within the identity glossary.",
      "title": "Glossary",
      "updateAttrError": "Failed to update {resourceType} attribute",
      "updateAttrSuccess": "Successfully updated {resourceType} attribute",
      "user": "User"
    },
    "certificationDetails": {
      "accessReviewsLink": "View Access Reviews",
      "accessReviewsTable": {
        "certifierColumnName": "Certifier",
        "dueColumnName": "Due",
        "taskPopoverCompletedText": "{percentage}% Complete",
        "taskPopoverItemsCompletedText": "{completed}/{total} items completed"
      },
      "accessReviewsTabTitle": "Access Reviews",
      "activateCampaignModal": {
        "text": "Are you sure you want to activate this campaign?",
        "title": "Activate Campaign?",
        "activateButtonText": "Activate Campaign",
        "activateButtonSpinnerText": "Activating"
      },
      "actorsMissingEmailLabel": "Certifiers with no email address",
      "cancelCampaignButtonText": "Cancel Campaign",
      "cancelCampaignModal": {
        "text": "Are you sure you want to cancel this campaign?",
        "title": "Cancel Campaign?",
        "saveButtonText": "Cancel Campaign"
      },
      "campaingDetailsCardTitle": "Campaign Details",
      "campaignProgressCaptionText": "{complete} of {total} complete",
      "campaignOwnerLabel": "Campaign Owner",
      "campaignDurationLabel": "Duration",
      "campaignStartDateLabel": "Start Date",
      "campaignDeadlineLabel": "Deadline",
      "campaignDescriptionLabel": "Description",
      "campaignDescriptionReadMoreLinkText": "Read more",
      "campaignDurationUnit": {
        "day": {
          "plural": "days",
          "singular": "day"
        },
        "month": {
          "plural": "months",
          "singular": "month"
        },
        "week": {
          "plural": "weeks",
          "singular": "week"
        },
        "year": {
          "plural": "years",
          "singular": "year"
        }
      },
      "campaignSuccessfullyActivated": "Campaign activated",
      "campaignSuccessfullyCanceled": "Campaign cancelled",
      "campaignSuccessfullyDeleted": "Campaign deleted",
      "deadlineSuccessfullyUpdatedMessage": "Campaign deadline updated",
      "decisionsBreakdownChartItemsLabel": {
        "revoke": "Revoked",
        "certify": "Certified",
        "exception": "Exception"
      },
      "decisionsBreakdownChartItemsLabelOther": "Other",
      "decisionsBreakdownChartLabel": "Decisions Breakdown",
      "decisionsBreakdownChartNoDecisionsLabel": "No decisions yet",
      "decisionsBreakdownChartTooltip": "Decisions made in this campaign",
      "decisionsByAppChartLabel": "Access by Application",
      "decisionsByAppChartTooltip": "Number of accounts to be certified in this campaign by application",
      "deleteCampaignButtonText": "Delete Campaign",
      "deleteCampaignModal": {
        "text": "Are you sure you want to delete this staged campaign?",
        "title": "Delete Staged Campaign?",
        "deleteButtonText": "Delete Campaign"
      },
      "detailsTabTitle": "Details",
      "errors": {
        "errorActivatingCampaignDefault": "Error activating the campaign",
        "errorCancelingCampaignDefault": "Error canceling the campaign",
        "errorDeletingCampaignDefault": "Error deleting the campaign",
        "errorUpdatingDeadlineDefault": "Error updating the deadline for the campaign"
      },
      "ownerNameLabel": "{givenName} {sn}",
      "updateDeadlineButtonText": "Update Deadline",
      "updateDeadlineModal": {
        "deadlinePlaceholder": "Deadline",
        "title": "Update Deadline"
      },
      "usersChartItemsLabel": {
        "new": "New users",
        "previous": "Previously certified"
      },
      "usersChartLabel": "Users",
      "usersChartTooltip": "Never certified users vs previously certified users",
      "usersMissingEmailLabel": "Users with no email address",
      "showDescriptionModal": {
        "closeButtonText": "Done",
        "title": "About This Campaign"
      },
      "statusCardLabel": "Status"
    },
    "campaignTemplateTypeModal": {
      "campaignType": "Campaign Type",
      "chooseType": "Choose the type of campaign template to create.",
      "entitlementAssignmentCertification": "Entitlement Assignment Certification",
      "entitlementAssignmentCertificationMessage": "Certify users who have been assigned specified entitlements.",
      "identityCertificationMessage": "Certify user accounts and entitlements granted on specified applications.",
      "newCertificationCampaignTemplate": "New Certification Campaign Template",
      "roleMembershipCertification": "Role Membership Certification",
      "roleMembershipCertificationMessage": "Certify roles granted to users."
    },
    "editTemplate": {
      "closeActions": {
        "certify": "certify",
        "revoke": "revoke",
        "abstain": "abstain from",
        "allowException": "allow exception to"
      },
      "types": {
        "IDENTITY": "Identity",
        "ENTITLEMENT": "Entitlement",
        "ROLEMEMBERSHIP": "Role Membership"
      },
      "templateType": {
        "identity": "Identity Certification",
        "entitlement": "Entitlement Certification",
        "roleMembership": "Role Membership Certification"
      },
      "accounts": "Accounts",
      "additionalOptions": "Additional Options",
      "addComment": "Add comment",
      "afterRevocation": "After revocation",
      "allAccounts": "All accounts in selected applications",
      "allApplications": "All applications",
      "allCertifiers": "All certifiers",
      "allEntitlements": "All entitlements",
      "allowBulkCertify": "Allow bulk decisions",
      "allowBulkCertifyDescription": "Allow the certifier to do bulk certification either on a page, search results, or the entire certification.",
      "allowExceptions": "Allow exceptions",
      "allowExceptionsDescription": "Allow the user to retain the access for a period of time after access has been revoked.",
      "allowExceptionsFor": "Allow exceptions for",
      "allowPartialSignoff": "Allow partial sign-off",
      "allowPartialSignoffDescription": "Allow the certifier to sign-off on individual items before their entire task is complete.",
      "allowSelfCert": "Allow self-certification",
      "allowSelfCertDescription": "Allow users to certify their own access.",
      "allRoles": "All roles",
      "allUsers": "All users",
      "applications": "Applications",
      "applicationsToCertify": "Applications to Certify",
      "campaignDetails": "Campaign Details",
      "campaignDuration": "Campaign Duration",
      "campaignOwner": "Campaign Owner",
      "certify": "Certify",
      "certifierType": "Certifier Type",
      "certifyAccountsPrefix": "Certify Accounts if",
      "certifyAccountsSuffix": "of the following conditions are met",
      "certifyApplicationsPrefix": "Certify Applications if",
      "certifyApplicationsSuffix": "of the following conditions are met",
      "certifyEntitlementsPrefix": "Certify Entitlements if",
      "certifyEntitlementsSuffix": "of the following conditions are met",
      "certifyRolesPrefix": "Certify Roles if",
      "certifyRolesSuffix": "of the following conditions are met",
      "certifyUsersPrefix": "Certify users if",
      "certifyUsersSuffix": "of the following rules",
      "closeAnd": "Close and",
      "countSubtitle": "Subject to this certification if run now",
      "countTitle": "Estimated Total",
      "daysBeforeCampaign": "days before campaign expiration",
      "decision": "Decision",
      "description": "Description",
      "details": "Details",
      "doNothing": "Do Nothing",
      "duration": "Duration",
      "escalationOwner": "Escalation Owner",
      "emailTemplate": "Email Template",
      "enableDefaultCertifier": "Enable default certifier",
      "enableDefaultCertifierDescription": "Certifier to be used if a review has no certifiers.",
      "enableEscalation": "Enable escalation",
      "enableEscalationDescription": "Enable certification escalation.",
      "enableReassignment": "Enable line-item reassignment",
      "enableReassignmentDelegation": "Enable line-item reassignment and delegation",
      "enableReassignmentDelegationDescription": "Allow the certifier to reassign or forward the line item to another user.",
      "enableReassignmentDelegationPermissions": "Choose the actions a certifier can perform on a reassigned item",
      "enableSchedule": "Run on a schedule",
      "enableStaging": "Enable Campaign Staging",
      "enableStagingDescription": "Certification will remain in staging mode until activated.",
      "entitlementOwner": "Entitlement Owner",
      "entitlements": "Entitlements",
      "errorReadingCertifierType": "Error reading certifier type from template",
      "errorRetrievingCounts": "Error retrieving counts",
      "errorRetrievingRoles": "Error retrieving list of roles",
      "errorRetrievingApplications": "Error retrieving list of applications",
      "every": "every",
      "excludeConditional": "Exclude dynamically granted role memberships",
      "excludeRoleBased": "Exclude access granted only from a role",
      "expirationNotification": "Send expiration notification",
      "expirationNotificationDescription": "Send a notification to the certifiers when the certification expires.",
      "filterAccounts": "Accounts matching a filter",
      "filterApplications": "Applications matching a filter",
      "filterCertDecision": "Filter by last certification decision",
      "filterEntitlements": "Entitlements matching a filter",
      "filterRoles": "Roles matching a filter",
      "filterUsers": "Users matching a filter",
      "forward": "Forward",
      "group": "Group",
      "hideAdvancedFilters": "Hide advanced filters",
      "initialNotification": "Send initial notification",
      "initialNotificationDescription": "Send a notification to the certifiers when the campaign is triggered.",
      "makeDecision": "Make decision",
      "manager": "Manager",
      "name": "Name",
      "notifications": "Notifications",
      "notificationsSummary": {
        "expirationNotification": "Expiration Notification",
        "escalation": "Escalation",
        "initialNotification": "Initial Notification",
        "reassignNotification": "Reassign Notification",
        "reminders": "Reminders",
        "sendExpirationNotification": "Send <b>Expiration Notification</b> {numDay} day(s) before campaign expiration",
        "sendEscalation": "Send <b>Escalation Notification</b> every {duration} {timeSpan} to:",
        "sendInitialNotification": "Send <b>Campaign Notification</b>",
        "sendReassignNotification": "Send <b>Reassign Notification</b>",
        "sendReminders": "Send <b>Reminders Notification</b> every {duration} {timeSpan}"
      },
      "of": "of",
      "onCampaignExpiration": "On Campaign Expiration",
      "onCampaignExpirationBase": "Close and {action} open items {actionTime}",
      "onCampaignExpirationFinal": "of {closeActionDuration} days",
      "openItems": "open items",
      "options": "Options",
      "owner": "Owner",
      "ownersAdministrators": "Owners and administrators",
      "processRemediation": "Process remediation",
      "processRemediationWorkFlow": "Process remediation workflow",
      "processRemediationDescription": "Specify a remediation workflow to invoke after access has been revoked by the certifier.",
      "reassign": "Reassign",
      "reassignForward": "Reassign/Forward",
      "reassignNotification": "Send reassign notification",
      "reassignNotificationDescription": "Send a notification to the new reviewers when an item is reassigned or forwarded to them.",
      "reassignTo": "Reassign to {givenName} {sn}",
      "reassignToCertify": "Reassign to",
      "reassignToUser": "Reassign to user",
      "role": "Role",
      "roleOwner": "Role Owner",
      "runEvery": "Run every",
      "saveTemplate": "Save Template",
      "schedule": "Schedule",
      "scheduleDescription": "Set up a schedule to automatically run this campaign periodically.",
      "selectDefaultCertifier": "Select a Default Certifier",
      "selectRole": "Select a Role",
      "selectUser": "Select a User",
      "selfCertFilter": "Select who can self-certify",
      "send": "Send",
      "sendReminders": "Send reminders",
      "sendRemindersDescription": "Send certifiers reminders.",
      "showAdvancedFilters": "Show advanced filters",
      "signOff": "Sign off",
      "singleUser": "A single user",
      "specificApplications": "Specific Applications",
      "staging": "Staging",
      "summary": "Summary",
      "title": "New {type} Certification Template",
      "totalDecisionItems": "Total Decision Items",
      "type": "Type",
      "to": "to",
      "user": "User",
      "userToAssign": "User to Assign",
      "userToCertify": "User to Certify",
      "whatToCertify": "What to Certify",
      "whatToCertifyDescription": "Specify what to certify as part of this campaign.",
      "when": "When",
      "whenCampaignExpires": "When Campaign Expires",
      "whenToCertify": "When to Certify",
      "whenToCertifyDescription": "Specify when to run the certification campaign and what to do when campaign expires",
      "whoWillCertify": "Who will Certify",
      "whoWillCertifyDescription": "Define who must complete the access reviews generated by this campaign."
    },
    "orchestrations": {
      "builder": {
        "approvalTaskDefaultDisplayName": "Approval Task",
        "approvalTaskDescription": "Assign an approval task to users and roles. Chain tasks or use in conjunction with switch to implement serial/parallel flows.",
        "approvalTaskDisplayName": "Approval",
        "APPROVED": "APPROVED",
        "loadingOrchestration": "Loading {status}...",
        "deleteDraft": "Delete Draft",
        "editDraft": "Edit Draft",
        "editPanel": {
          "addApproversManually": "add approvers manually",
          "applicationOwner": "App Owner",
          "approver": "Approver",
          "approvers": "Approvers",
          "approversDescriptionManual": "Add users and roles who can approve the request.",
          "approversDescriptionScript": "Define a script to return users and roles who can approve the request.",
          "approverType": "Approver Type",
          "assigneeReminders": "Assignee reminders",
          "assignmentNotification": "Assignment notification",
          "daysBeforeExpiration": "days before expiration",
          "defineAScript": "define a script",
          "doNothing": "Do nothing",
          "emailTemplate": "Email Template",
          "entitlementOwner": "Entitlement Owner",
          "escalationNotifications": "Escalation notifications",
          "escalationSendTo": "Send Escalation To",
          "expirationNotification": "Expiration notification",
          "expirationSettings": "Expiration Settings",
          "expirationSettingsDescription": "Choose what to do when the request expires.",
          "manager": "Manager",
          "modify": "Modify",
          "notificationSettings": "Notification Settings",
          "notificationSettingsDescription": "Choose which notifications to send.",
          "or": "Or",
          "outcome": "Outcome",
          "outcomeScript": "Expression to evaluate for this outcome.",
          "permissions": "Permissions",
          "reassign": "Reassign",
          "reassignmentNotification": "Reassignment notification",
          "reassignRequest": "Reassign request",
          "reassignTo": "Reassign to",
          "rejectRequest": "Reject request",
          "requestAssigned": "Request Assigned",
          "requestReassigned": "Request Reassigned",
          "requestReminder": "Request Reminder",
          "requestEscalated": "Request Escalated",
          "requestExpired": "Request Expired",
          "roleOwner": "Role Owner",
          "sendEvery": "Send every",
          "sendTo": "Send to"
        },
        "exclusiveGatewayDefaultDisplayName": "Validation Gateway",
        "exclusiveGatewayDescription": "Evaluate a binary response from a preceding node to select a path the orchestration should take.",
        "exclusiveGatewayDisplayName": "If/Else",
        "EXPIRATION": "EXPIRATION",
        "importModal": {
          "importNewDraft": "Import New Draft",
          "stepOneBody": "Import an orchestration as a draft version.",
          "stepTwoBody": "Are you sure you want to import a new version?",
          "overwriteWarning": "This will overwrite your existing Draft.",
          "downloadBackup": "Download backup",
          "stepOneTitle": "Import Orchestration",
          "stepTwoTitle": "Replace Existing Draft?",
          "validate": "Validate",
          "validating": "Validating..."
        },
        "inclusiveGatewayDefaultDisplayName": "Inclusive Gateway",
        "inclusiveGatewayDescription": "Evaluate multiple responses and, based on the response, choose a path for the orchestration.",
        "inclusiveGatewayDisplayName": "Switch",
        "jsonFile": "JSON File",
        "orchestrationDetails": "Orchestration Details",
        "orchestrationName": "Orchestration Name",
        "outcomes": "Outcomes",
        "publishModal": {
          "body": "Are you sure you want to publish this orchestration?",
          "title": "Publish Orchestration?",
          "overwriteWarning": "This will overwrite your existing published workflow."
        },
        "REJECT": "REJECT",
        "scriptTaskDefaultDisplayName": "Script Task",
        "scriptTaskDescription": "Invoke APIs or execute business logic using this node.",
        "scriptTaskDisplayName": "Script",
        "viewDetails": "View Details"
      },
      "draft": "Draft",
      "listView": {
        "deleteDraftMessage": "Are you sure you want to delete this draft orchestration?",
        "subTitle": "Create and manage identity governance orchestrations.",
        "viewDraft": "View Draft",
        "viewPublished": "View Published"
      },
      "messages": {
        "notFound": "{status} orchestration {orchestrationId} not found",
        "createDraftError": "There was an error creating a draft from this orchestration",
        "createDraftSuccess": "Draft orchestration created successfully",
        "deleteError": "There was an error deleting this orchestration",
        "deleteSuccess": "Orchestration deleted successfully",
        "getError": "There was an error retrieving the list of orchestrations",
        "importError": "There was an error importing the selected orchestration",
        "invalidScript": "Orchestration has an invalid script",
        "missingRequiredFields": "Required fields missing",
        "nodeValidationError": "All nodes and outputs must be connected",
        "publishError": "There was an issue publishing this orchestration",
        "publishSuccess": "Orchestration successfully published",
        "saveError": "There was an error saving this orchestration",
        "saveSuccess": "All Changes Saved",
        "validationError": "Orchestration validation could not be completed"
      },
      "newDraft": "New Draft",
      "orchestration": "Orchestration",
      "published": "Published"
    },
    "templates": {
      "title": "Templates",
      "newTemplate": "New Template",
      "run": "Run",
      "viewDetails": "View Details",
      "duplicate": "Duplicate",
      "template": "Template",
      "noData": "No Data",
      "nextRunDate": "Next Run Date",
      "status": "Status",
      "pending": "Pending",
      "unused": "Unused",
      "runNow": "Run Now",
      "scheduleCampaign": "Schedule Campaign",
      "editSchedule": "Edit Schedule",
      "editTemplate": "Edit Template",
      "noTemplates": "No Templates",
      "runPublishedTemplateConfirm": "Are you sure you want to run this campaign now? This will send notifications to all certifiers.",
      "errors": {
        "errorDeletingTemplate": "Error deleting template",
        "errorSavingTemplate": "Error saving template",
        "errorSearchingTemplates": "Error obtaining existing templates"
      },
      "notifications": {
        "savingSuccess": "Saving succeeded"
      },
      "scheduleModal": {
        "editSchedule": "Edit Schedule",
        "runEvery": "Run every",
        "timeZoneMessage": "Time zone offset based on how many hours a location is from GMT.",
        "deleteSchedule": "Delete Schedule"
      }
    },
    "timespans": {
      "days": "day(s)",
      "weeks": "week(s)",
      "months": "month(s)",
      "years": "year(s)",
      "immediately": "immediately",
      "afterADuration": "after a duration",
      "allowExceptionFor": "For {exceptionDuration} {exceptionTimespan}"
    }
  }
}
