// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`KbaCreateCallback.vue (mount) doesn't have duplicate test in placeholder from label: console-warn-snapshot 1`] = `
[
  [
    "[Vue warn]: (deprecation INSTANCE_LISTENERS) vm.$listeners has been removed. In Vue 3, parent v-on listeners are included in vm.$attrs and it is no longer necessary to separately use v-on="$listeners" if you are already using v-bind="$attrs". (Note: the Vue 3 behavior only applies if this compat config is disabled)
  Details: https://v3-migration.vuejs.org/breaking-changes/listeners-removed.html",
    "
",
    " at <FrField",
    "value=null",
    "onInput=fn",
    "class="mb-2 kbaQuestionSelect"",
    " ...",
    ">",
    "
",
    " at <Form",
    "ref="observer"",
    "as="span"",
    ">",
    "
",
    " at <KbaCreateCallback",
    "callback=",
    {
      "getOutputByName": [Function],
      "getPredefinedQuestions": [Function],
      "getPrompt": [Function],
      "getType": [Function],
      "setQuestion": [MockFunction],
    },
    "index=5",
    "showHeader=true",
    " ...",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation WATCH_ARRAY) (2)",
    "
",
    " at <SelectInput",
    "value=null",
    "onInput=",
    [
      [Function],
      [Function],
    ],
    "type="select"",
    " ...",
    ">",
    "
",
    " at <FrField",
    "value=null",
    "onInput=fn",
    "class="mb-2 kbaQuestionSelect"",
    " ...",
    ">",
    "
",
    " at <Form",
    "ref="observer"",
    "as="span"",
    ">",
    "
",
    " at <KbaCreateCallback",
    "callback=",
    {
      "getOutputByName": [Function],
      "getPredefinedQuestions": [Function],
      "getPrompt": [Function],
      "getType": [Function],
      "setQuestion": [MockFunction],
    },
    "index=5",
    "showHeader=true",
    " ...",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation WATCH_ARRAY) (3)",
    "
",
    " at <VueMultiselect",
    "id="callback_5_question_field_selector"",
    "ref="vms"",
    "value=""",
    " ...",
    ">",
    "
",
    " at <InputLayout",
    "id="callback_5_question_field_selector"",
    "name="callback_5_question_field_question_selector"",
    "description=""",
    " ...",
    ">",
    "
",
    " at <SelectInput",
    "value=null",
    "onInput=",
    [
      [Function],
      [Function],
    ],
    "type="select"",
    " ...",
    ">",
    "
",
    " at <FrField",
    "value=null",
    "onInput=fn",
    "class="mb-2 kbaQuestionSelect"",
    " ...",
    ">",
    "
",
    " at <Form",
    "ref="observer"",
    "as="span"",
    ">",
    "
",
    " at <KbaCreateCallback",
    "callback=",
    {
      "getOutputByName": [Function],
      "getPredefinedQuestions": [Function],
      "getPrompt": [Function],
      "getType": [Function],
      "setQuestion": [MockFunction],
    },
    "index=5",
    "showHeader=true",
    " ...",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation ATTR_FALSE_VALUE) Attribute "appear" with v-bind value \`false\` will render appear="false" instead of removing it in Vue 3. To remove the attribute, use \`null\` or \`undefined\` instead. If the usage is intended, you can disable the compat behavior and suppress this warning with:

  configureCompat({ ATTR_FALSE_VALUE: false })

  Details: https://v3-migration.vuejs.org/breaking-changes/attribute-coercion.html",
    "
",
    " at <Transition",
    "name="multiselect__loading"",
    ">",
    "
",
    " at <VueMultiselect",
    "id="callback_5_question_field_selector"",
    "ref="vms"",
    "value=""",
    " ...",
    ">",
    "
",
    " at <InputLayout",
    "id="callback_5_question_field_selector"",
    "name="callback_5_question_field_question_selector"",
    "description=""",
    " ...",
    ">",
    "
",
    " at <SelectInput",
    "value=null",
    "onInput=",
    [
      [Function],
      [Function],
    ],
    "type="select"",
    " ...",
    ">",
    "
",
    " at <FrField",
    "value=null",
    "onInput=fn",
    "class="mb-2 kbaQuestionSelect"",
    " ...",
    ">",
    "
",
    " at <Form",
    "ref="observer"",
    "as="span"",
    ">",
    "
",
    " at <KbaCreateCallback",
    "callback=",
    {
      "getOutputByName": [Function],
      "getPredefinedQuestions": [Function],
      "getPrompt": [Function],
      "getType": [Function],
      "setQuestion": [MockFunction],
    },
    "index=5",
    "showHeader=true",
    " ...",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation ATTR_FALSE_VALUE) Attribute "persisted" with v-bind value \`false\` will render persisted="false" instead of removing it in Vue 3. To remove the attribute, use \`null\` or \`undefined\` instead. If the usage is intended, you can disable the compat behavior and suppress this warning with:

  configureCompat({ ATTR_FALSE_VALUE: false })

  Details: https://v3-migration.vuejs.org/breaking-changes/attribute-coercion.html",
    "
",
    " at <Transition",
    "name="multiselect__loading"",
    ">",
    "
",
    " at <VueMultiselect",
    "id="callback_5_question_field_selector"",
    "ref="vms"",
    "value=""",
    " ...",
    ">",
    "
",
    " at <InputLayout",
    "id="callback_5_question_field_selector"",
    "name="callback_5_question_field_question_selector"",
    "description=""",
    " ...",
    ">",
    "
",
    " at <SelectInput",
    "value=null",
    "onInput=",
    [
      [Function],
      [Function],
    ],
    "type="select"",
    " ...",
    ">",
    "
",
    " at <FrField",
    "value=null",
    "onInput=fn",
    "class="mb-2 kbaQuestionSelect"",
    " ...",
    ">",
    "
",
    " at <Form",
    "ref="observer"",
    "as="span"",
    ">",
    "
",
    " at <KbaCreateCallback",
    "callback=",
    {
      "getOutputByName": [Function],
      "getPredefinedQuestions": [Function],
      "getPrompt": [Function],
      "getType": [Function],
      "setQuestion": [MockFunction],
    },
    "index=5",
    "showHeader=true",
    " ...",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation ATTR_ENUMERATED_COERCION) Enumerated attribute "spellcheck" with v-bind value \`false\` will render the value as-is instead of coercing the value to "true" in Vue 3. Always use explicit "true" or "false" values for enumerated attributes. If the usage is intended, you can disable the compat behavior and suppress this warning with:

  configureCompat({ ATTR_ENUMERATED_COERCION: false })

  Details: https://v3-migration.vuejs.org/breaking-changes/attribute-coercion.html",
    "
",
    " at <VueMultiselect",
    "id="callback_5_question_field_selector"",
    "ref="vms"",
    "value=""",
    " ...",
    ">",
    "
",
    " at <InputLayout",
    "id="callback_5_question_field_selector"",
    "name="callback_5_question_field_question_selector"",
    "description=""",
    " ...",
    ">",
    "
",
    " at <SelectInput",
    "value=null",
    "onInput=",
    [
      [Function],
      [Function],
    ],
    "type="select"",
    " ...",
    ">",
    "
",
    " at <FrField",
    "value=null",
    "onInput=fn",
    "class="mb-2 kbaQuestionSelect"",
    " ...",
    ">",
    "
",
    " at <Form",
    "ref="observer"",
    "as="span"",
    ">",
    "
",
    " at <KbaCreateCallback",
    "callback=",
    {
      "getOutputByName": [Function],
      "getPredefinedQuestions": [Function],
      "getPrompt": [Function],
      "getType": [Function],
      "setQuestion": [MockFunction],
    },
    "index=5",
    "showHeader=true",
    " ...",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation GLOBAL_EXTEND) (2)",
    "
",
    " at <InputLayout",
    "id="floatingLabelInput81"",
    "name="callback_5_answer_field"",
    "description=""",
    " ...",
    ">",
    "
",
    " at <BasicInput",
    "value=""",
    "onInput=",
    [
      [Function],
      [Function],
    ],
    "type="password"",
    " ...",
    ">",
    "
",
    " at <FrField",
    "value=""",
    "onInput=fn",
    "class="mb-3"",
    " ...",
    ">",
    "
",
    " at <Form",
    "ref="observer"",
    "as="span"",
    ">",
    "
",
    " at <KbaCreateCallback",
    "callback=",
    {
      "getOutputByName": [Function],
      "getPredefinedQuestions": [Function],
      "getPrompt": [Function],
      "getType": [Function],
      "setQuestion": [MockFunction],
    },
    "index=5",
    "showHeader=true",
    " ...",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation COMPONENT_FUNCTIONAL) Functional component <BInputGroupAppend> should be defined as a plain function in Vue 3. The "functional" option has been removed. NOTE: Before migrating to use plain functions for functional components, first make sure that all async components usage have been migrated and its compat behavior has been disabled.
  Details: https://v3-migration.vuejs.org/breaking-changes/functional-components.html",
    "
",
    " at <InputLayout",
    "id="floatingLabelInput81"",
    "name="callback_5_answer_field"",
    "description=""",
    " ...",
    ">",
    "
",
    " at <BasicInput",
    "value=""",
    "onInput=",
    [
      [Function],
      [Function],
    ],
    "type="password"",
    " ...",
    ">",
    "
",
    " at <FrField",
    "value=""",
    "onInput=fn",
    "class="mb-3"",
    " ...",
    ">",
    "
",
    " at <Form",
    "ref="observer"",
    "as="span"",
    ">",
    "
",
    " at <KbaCreateCallback",
    "callback=",
    {
      "getOutputByName": [Function],
      "getPredefinedQuestions": [Function],
      "getPrompt": [Function],
      "getType": [Function],
      "setQuestion": [MockFunction],
    },
    "index=5",
    "showHeader=true",
    " ...",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation ATTR_FALSE_VALUE) Attribute "placeholder" with v-bind value \`false\` will render placeholder="false" instead of removing it in Vue 3. To remove the attribute, use \`null\` or \`undefined\` instead. If the usage is intended, you can disable the compat behavior and suppress this warning with:

  configureCompat({ ATTR_FALSE_VALUE: false })

  Details: https://v3-migration.vuejs.org/breaking-changes/attribute-coercion.html",
    "
",
    " at <InputLayout",
    "id="floatingLabelInput81"",
    "name="callback_5_answer_field"",
    "description=""",
    " ...",
    ">",
    "
",
    " at <BasicInput",
    "value=""",
    "onInput=",
    [
      [Function],
      [Function],
    ],
    "type="password"",
    " ...",
    ">",
    "
",
    " at <FrField",
    "value=""",
    "onInput=fn",
    "class="mb-3"",
    " ...",
    ">",
    "
",
    " at <Form",
    "ref="observer"",
    "as="span"",
    ">",
    "
",
    " at <KbaCreateCallback",
    "callback=",
    {
      "getOutputByName": [Function],
      "getPredefinedQuestions": [Function],
      "getPrompt": [Function],
      "getType": [Function],
      "setQuestion": [MockFunction],
    },
    "index=5",
    "showHeader=true",
    " ...",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation ATTR_FALSE_VALUE) Attribute "aria-describedby" with v-bind value \`false\` will render aria-describedby="false" instead of removing it in Vue 3. To remove the attribute, use \`null\` or \`undefined\` instead. If the usage is intended, you can disable the compat behavior and suppress this warning with:

  configureCompat({ ATTR_FALSE_VALUE: false })

  Details: https://v3-migration.vuejs.org/breaking-changes/attribute-coercion.html",
    "
",
    " at <InputLayout",
    "id="floatingLabelInput81"",
    "name="callback_5_answer_field"",
    "description=""",
    " ...",
    ">",
    "
",
    " at <BasicInput",
    "value=""",
    "onInput=",
    [
      [Function],
      [Function],
    ],
    "type="password"",
    " ...",
    ">",
    "
",
    " at <FrField",
    "value=""",
    "onInput=fn",
    "class="mb-3"",
    " ...",
    ">",
    "
",
    " at <Form",
    "ref="observer"",
    "as="span"",
    ">",
    "
",
    " at <KbaCreateCallback",
    "callback=",
    {
      "getOutputByName": [Function],
      "getPredefinedQuestions": [Function],
      "getPrompt": [Function],
      "getType": [Function],
      "setQuestion": [MockFunction],
    },
    "index=5",
    "showHeader=true",
    " ...",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation INSTANCE_LISTENERS) (2)",
    "
",
    " at <BInputGroupAppend",
    "key=0",
    "class="within-input-button"",
    ">",
    "
",
    " at <InputLayout",
    "id="floatingLabelInput81"",
    "name="callback_5_answer_field"",
    "description=""",
    " ...",
    ">",
    "
",
    " at <BasicInput",
    "value=""",
    "onInput=",
    [
      [Function],
      [Function],
    ],
    "type="password"",
    " ...",
    ">",
    "
",
    " at <FrField",
    "value=""",
    "onInput=fn",
    "class="mb-3"",
    " ...",
    ">",
    "
",
    " at <Form",
    "ref="observer"",
    "as="span"",
    ">",
    "
",
    " at <KbaCreateCallback",
    "callback=",
    {
      "getOutputByName": [Function],
      "getPredefinedQuestions": [Function],
      "getPrompt": [Function],
      "getType": [Function],
      "setQuestion": [MockFunction],
    },
    "index=5",
    "showHeader=true",
    " ...",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation GLOBAL_EXTEND) (3)",
    "
",
    " at <BInputGroupAppend",
    "key=0",
    "class="within-input-button"",
    ">",
    "
",
    " at <InputLayout",
    "id="floatingLabelInput81"",
    "name="callback_5_answer_field"",
    "description=""",
    " ...",
    ">",
    "
",
    " at <BasicInput",
    "value=""",
    "onInput=",
    [
      [Function],
      [Function],
    ],
    "type="password"",
    " ...",
    ">",
    "
",
    " at <FrField",
    "value=""",
    "onInput=fn",
    "class="mb-3"",
    " ...",
    ">",
    "
",
    " at <Form",
    "ref="observer"",
    "as="span"",
    ">",
    "
",
    " at <KbaCreateCallback",
    "callback=",
    {
      "getOutputByName": [Function],
      "getPredefinedQuestions": [Function],
      "getPrompt": [Function],
      "getType": [Function],
      "setQuestion": [MockFunction],
    },
    "index=5",
    "showHeader=true",
    " ...",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation COMPONENT_FUNCTIONAL) (2)",
    "
",
    " at <BInputGroupAppend",
    "key=0",
    "class="within-input-button"",
    ">",
    "
",
    " at <InputLayout",
    "id="floatingLabelInput81"",
    "name="callback_5_answer_field"",
    "description=""",
    " ...",
    ">",
    "
",
    " at <BasicInput",
    "value=""",
    "onInput=",
    [
      [Function],
      [Function],
    ],
    "type="password"",
    " ...",
    ">",
    "
",
    " at <FrField",
    "value=""",
    "onInput=fn",
    "class="mb-3"",
    " ...",
    ">",
    "
",
    " at <Form",
    "ref="observer"",
    "as="span"",
    ">",
    "
",
    " at <KbaCreateCallback",
    "callback=",
    {
      "getOutputByName": [Function],
      "getPredefinedQuestions": [Function],
      "getPrompt": [Function],
      "getType": [Function],
      "setQuestion": [MockFunction],
    },
    "index=5",
    "showHeader=true",
    " ...",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation INSTANCE_LISTENERS) (3)",
    "
",
    " at <BInputGroupAddon",
    "key=0",
    "class="within-input-button"",
    "id=undefined",
    " ...",
    ">",
    "
",
    " at <BInputGroupAppend",
    "key=0",
    "class="within-input-button"",
    ">",
    "
",
    " at <InputLayout",
    "id="floatingLabelInput81"",
    "name="callback_5_answer_field"",
    "description=""",
    " ...",
    ">",
    "
",
    " at <BasicInput",
    "value=""",
    "onInput=",
    [
      [Function],
      [Function],
    ],
    "type="password"",
    " ...",
    ">",
    "
",
    " at <FrField",
    "value=""",
    "onInput=fn",
    "class="mb-3"",
    " ...",
    ">",
    "
",
    " at <Form",
    "ref="observer"",
    "as="span"",
    ">",
    "
",
    " at <KbaCreateCallback",
    "callback=",
    {
      "getOutputByName": [Function],
      "getPredefinedQuestions": [Function],
      "getPrompt": [Function],
      "getType": [Function],
      "setQuestion": [MockFunction],
    },
    "index=5",
    "showHeader=true",
    " ...",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation INSTANCE_LISTENERS) (4)",
    "
",
    " at <BButton",
    "onClick=fn<bound revealText>",
    "class="disabled"",
    "name="revealButton"",
    " ...",
    ">",
    "
",
    " at <BInputGroupAddon",
    "key=0",
    "class="within-input-button"",
    "id=undefined",
    " ...",
    ">",
    "
",
    " at <BInputGroupAppend",
    "key=0",
    "class="within-input-button"",
    ">",
    "
",
    " at <InputLayout",
    "id="floatingLabelInput81"",
    "name="callback_5_answer_field"",
    "description=""",
    " ...",
    ">",
    "
",
    " at <BasicInput",
    "value=""",
    "onInput=",
    [
      [Function],
      [Function],
    ],
    "type="password"",
    " ...",
    ">",
    "
",
    " at <FrField",
    "value=""",
    "onInput=fn",
    "class="mb-3"",
    " ...",
    ">",
    "
",
    " at <Form",
    "ref="observer"",
    "as="span"",
    ">",
    "
",
    " at <KbaCreateCallback",
    "callback=",
    {
      "getOutputByName": [Function],
      "getPredefinedQuestions": [Function],
      "getPrompt": [Function],
      "getType": [Function],
      "setQuestion": [MockFunction],
    },
    "index=5",
    "showHeader=true",
    " ...",
    ">",
    "
",
    " at <VTUROOT>",
  ],
]
`;

exports[`KbaCreateCallback.vue (shallowMount) Emits disable-next-button when mounted: console-warn-snapshot 1`] = `
[
  [
    "[Vue warn]: (deprecation RENDER_FUNCTION) Vue 3's render function API has changed. You can opt-in to the new API with:

  configureCompat({ RENDER_FUNCTION: false })

  (This can also be done per-component via the "compatConfig" option.)
  Details: https://v3-migration.vuejs.org/breaking-changes/render-function-api.html",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation ATTR_FALSE_VALUE) Attribute "canEnterPlaceholders" with v-bind value \`false\` will render canEnterPlaceholders="false" instead of removing it in Vue 3. To remove the attribute, use \`null\` or \`undefined\` instead. If the usage is intended, you can disable the compat behavior and suppress this warning with:

  configureCompat({ ATTR_FALSE_VALUE: false })

  Details: https://v3-migration.vuejs.org/breaking-changes/attribute-coercion.html",
    "
",
    " at <FrField",
    "value=null",
    "onInput=fn",
    "class="mb-2 kbaQuestionSelect"",
    " ...",
    ">",
    "
",
    " at <VeeForm",
    "ref="observer"",
    "as="span"",
    ">",
    "
",
    " at <KbaCreateCallback",
    "callback=",
    {
      "getOutputByName": [Function],
      "getPredefinedQuestions": [Function],
      "getPrompt": [Function],
      "getType": [Function],
      "setQuestion": [MockFunction],
    },
    "index=5",
    "showHeader=true",
    " ...",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation ATTR_FALSE_VALUE) Attribute "validateOnMount" with v-bind value \`false\` will render validateOnMount="false" instead of removing it in Vue 3. To remove the attribute, use \`null\` or \`undefined\` instead. If the usage is intended, you can disable the compat behavior and suppress this warning with:

  configureCompat({ ATTR_FALSE_VALUE: false })

  Details: https://v3-migration.vuejs.org/breaking-changes/attribute-coercion.html",
    "
",
    " at <VeeForm",
    "ref="observer"",
    "as="span"",
    ">",
    "
",
    " at <KbaCreateCallback",
    "callback=",
    {
      "getOutputByName": [Function],
      "getPredefinedQuestions": [Function],
      "getPrompt": [Function],
      "getType": [Function],
      "setQuestion": [MockFunction],
    },
    "index=5",
    "showHeader=true",
    " ...",
    ">",
    "
",
    " at <VTUROOT>",
  ],
  [
    "[Vue warn]: (deprecation ATTR_FALSE_VALUE) Attribute "keepValues" with v-bind value \`false\` will render keepValues="false" instead of removing it in Vue 3. To remove the attribute, use \`null\` or \`undefined\` instead. If the usage is intended, you can disable the compat behavior and suppress this warning with:

  configureCompat({ ATTR_FALSE_VALUE: false })

  Details: https://v3-migration.vuejs.org/breaking-changes/attribute-coercion.html",
    "
",
    " at <VeeForm",
    "ref="observer"",
    "as="span"",
    ">",
    "
",
    " at <KbaCreateCallback",
    "callback=",
    {
      "getOutputByName": [Function],
      "getPredefinedQuestions": [Function],
      "getPrompt": [Function],
      "getType": [Function],
      "setQuestion": [MockFunction],
    },
    "index=5",
    "showHeader=true",
    " ...",
    ">",
    "
",
    " at <VTUROOT>",
  ],
]
`;

exports[`KbaCreateCallback.vue (shallowMount) sets custom question value properly: console-warn-snapshot 1`] = `
[
  [
    "[Vue warn]: (deprecation ATTR_FALSE_VALUE) Attribute "disabled" with v-bind value \`false\` will render disabled="false" instead of removing it in Vue 3. To remove the attribute, use \`null\` or \`undefined\` instead. If the usage is intended, you can disable the compat behavior and suppress this warning with:

  configureCompat({ ATTR_FALSE_VALUE: false })

  Details: https://v3-migration.vuejs.org/breaking-changes/attribute-coercion.html",
    "
",
    " at <FrField",
    "value=""",
    "onInput=fn",
    "class="mb-3"",
    " ...",
    ">",
    "
",
    " at <VeeForm",
    "ref="observer"",
    "as="span"",
    ">",
    "
",
    " at <KbaCreateCallback",
    "callback=",
    {
      "getOutputByName": [Function],
      "getPredefinedQuestions": [Function],
      "getPrompt": [Function],
      "getType": [Function],
      "setQuestion": [MockFunction] {
        "calls": [
          [
            "test question",
          ],
          [
            "test question",
          ],
          [
            "test question",
          ],
        ],
        "results": [
          {
            "type": "return",
            "value": undefined,
          },
          {
            "type": "return",
            "value": undefined,
          },
          {
            "type": "return",
            "value": undefined,
          },
        ],
      },
    },
    "index=5",
    "showHeader=true",
    " ...",
    ">",
    "
",
    " at <VTUROOT>",
  ],
]
`;
